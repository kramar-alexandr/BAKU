external procedure ExtractObj(string,var Integer,var string);function boolean FindTextInArea(string find,area farea)begin	boolean res;	longint pos,i,lenth,lenarea;	string 200 sfind,sfind1;	area alentest;		addtexttoarea(find,alentest);	lenarea = GetAreaLength(alentest);	sfind1 = getstringfromarea(alentest,0,lenarea);	res = false;	lenth = GetAreaLength(farea);	if(lenth>=lenarea)then begin		For(i=0;i<=lenth-lenarea;i=i+1) begin			sfind = getstringfromarea(farea,i,lenarea);			if(UpperCase(sfind)==UpperCase(sfind1))then begin				res = true;				goto LFind;			end;		end;	end; LFind:;		FindTextInArea = res;return;end;function integer CheckRequestForSend(area areceived,var string opencurlybr,var string closecurlybr,var string opensqrbr,var string closesqrbr,var string paws,var string kpaws,var string colon,var string space,var string nextline,var string comma)begin	  LongInt lines;  integer res;  	res = 0;	lines = GetAreaLength(areceived);	if (lines==0) then begin		res = 1;				opencurlybr = "{";	  	closecurlybr = "}";	  	opensqrbr = "[";	  	closesqrbr = "]";	  	paws = "'";	  	kpaws = "";	  	colon = ":";	  	space = " ";	  	nextline = chr(13) & chr(10);	  	comma = ",";	end else begin		if (FindTextInArea("status: 'OK'",areceived) or FindTextInArea("status: \"OK\"",areceived) or FindTextInArea("status: OK",areceived)) then begin			res = 2;		end else begin			if (FindTextInArea("FAIL",areceived)) then begin				res = 3;			end;		end;	end;  logtext(0,res); CheckRequestForSend = res; return;end;procedure CheckImagePath(string filename,string filepathP,var string filepathC)begin      if (FILEEXISTS(filepathP & filename & ".jpeg")) then begin		filepathC = filepathP & filename & ".jpeg";	end else begin		if (FILEEXISTS(filepathP & filename & ".png")) then begin			filepathC = filepathP & filename & ".png";		end else begin			if (FILEEXISTS(filepathP & filename & ".jpg")) then begin				filepathC = filepathP & filename & ".jpg";			end;		end;	end;	  return;end;globalupdating function boolean HandleWebSendItems(area areceived)begin  record INVc INr;  row INVc INrw;  record DIVc DIr;  record PLVc PLr;  record CompaniesBlock Compb;  row CompaniesBlock Comprw;  string 2 opencurlybr,closecurlybr,opensqrbr,closesqrbr,paws,kpaws,colon,space,comma;  string 5 nextline;  boolean TrHs,testf,res;  integer newrec;  integer sendf;  integer pos,i,j,rwcnt,rwcnt1,oldcompany,loopcnt,price;  string 20 classfound,brand,type,suff;  string 255 azedescr,rusdescr,engdescr,azename,rusname,engname,filename;  string 100 filepathP,filepathC;  area imagearea,ames;  LongInt arelen;  	  	res = false;  	sendf = CheckRequestForSend(areceived,opencurlybr,closecurlybr,opensqrbr,closesqrbr,paws,kpaws,colon,space,nextline,comma);  	  	switch (sendf) begin  	  case 0:  		LogText(0,"Error: Unknown command for goods");  		goto LHandleWebSendItems;  	  case 3:  	 	LogText(0,"Goods posting failed");  		goto LHandleWebSendItems;  	end;  			filename = "armess.txt";	CreateFile(filename);	CloseFile;		oldcompany = CurrentCompany;      BlockLoad(Compb);    rwcnt1 = MatRowCnt(Compb);      for (j=0;j<rwcnt1;j=j+1) begin      	MatRowGet(Compb,j,Comprw);      	if (/*StringToInt(Comprw.CompCode)==1 and*/ SetCompanyCode(Comprw.CompCode,false) and Comprw.ActiveStatus==0) then begin			filepathP = "webcust/" & Comprw.ShortName & "/";			suff = "_cmpnr_" & Comprw.CompCode;						loopcnt = 0;			INr.SyncFlag = 1;			TrHs = true;			while (LoopKey("SyncFlag",INr,1,TrHs)) begin				testf = true;				if (INr.SyncFlag!=1) then begin TrHs = false; testf = false; end;				//if (loopcnt>10) then begin  TrHs = false; testf = false; end;				if (sendf==1) then begin					if (testf) then begin						SetAreaZeroSize(ames);						brand = "";						type = "";						pos = 0;						classfound = "";						ExtractObj(INr.DispGroups,pos,classfound);						while(nonblank(classfound)) begin							DIr.Code = classfound;							readfirstmain(DIr,1,true);							if(DIr.CType=="BRAND")then begin								brand = DIr.Code & suff;							end;							if(DIr.CType=="TYPE")then begin								type = DIr.Code & suff;							end;							ExtractObj(INr.DispGroups,pos,classfound);						end;						AddTextToArea(opencurlybr & nextline, ames);						AddTextToArea(kpaws & "typeid" & kpaws & colon & space & paws & type & paws & comma & nextline, ames);						AddTextToArea(kpaws & "brandid" & kpaws & colon & space & paws & brand & paws & comma & nextline, ames);						AddTextToArea(kpaws & "code" & kpaws & colon & space & paws & INr.Code & suff & paws & comma & nextline, ames);						AddTextToArea(kpaws & "collection" & kpaws & colon & space & paws & "" & paws & comma & nextline, ames);						azename = "";						azedescr = "";						rusname = "";						rusdescr = "";						engname = "";						engdescr = "";						rwcnt = MatRowCnt(INr);						for (i=0;i<rwcnt;i=i+1) begin							MatRowGet(INr,i,INrw);							if (UpperCase(INrw.LangCode)=="AZ" or UpperCase(INrw.LangCode)=="AZE") then begin								azename = INrw.Text;								azedescr = INrw.Description;							end;							if (UpperCase(INrw.LangCode)=="RU" or UpperCase(INrw.LangCode)=="RUS") then begin								rusname = INrw.Text;								rusdescr = INrw.Description;							end;							if (UpperCase(INrw.LangCode)=="EN" or UpperCase(INrw.LangCode)=="ENG") then begin								engname = INrw.Text;								engdescr = INrw.Description;							end;						end;						if (Blank(engname)) then begin							engname = INr.Name;						end;												AddTextToArea(kpaws & "title" & kpaws & colon & space & opensqrbr & opencurlybr, ames);						AddTextToArea(kpaws & "az" & kpaws & colon & space & paws & azename & paws & comma & space, ames);						AddTextToArea(kpaws & "ru" & kpaws & colon & space & paws & rusname & paws & comma & space, ames);						AddTextToArea(kpaws & "en" & kpaws & colon & space & paws & engname & paws, ames);						AddTextToArea(closecurlybr & closesqrbr & comma & nextline, ames);												PLr.PLCode = "RRP";		        		PLr.ArtCode = INr.Code;		        		ReadFirstMain(PLr,2,true);		        		price = PLr.ExVatPrice;						AddTextToArea(kpaws & "price" & kpaws & colon & space & price & comma & nextline, ames);												AddTextToArea(kpaws & "description" & kpaws & colon & space & opensqrbr & opencurlybr, ames);						AddTextToArea(kpaws & "az" & kpaws & colon & space & paws & azedescr & paws & comma & space, ames);						AddTextToArea(kpaws & "ru" & kpaws & colon & space & paws & rusdescr & paws & comma & space, ames);						AddTextToArea(kpaws & "en" & kpaws & colon & space & paws & engdescr & paws, ames);						AddTextToArea(closecurlybr & closesqrbr & comma & nextline, ames);												AddTextToArea(kpaws & "technical" & kpaws & colon & space & opensqrbr & opencurlybr, ames); // data for "technical" not selected						AddTextToArea(kpaws & "az" & kpaws & colon & space & paws & "" & paws & comma & space, ames);						AddTextToArea(kpaws & "ru" & kpaws & colon & space & paws & "" & paws & comma & space, ames);						AddTextToArea(kpaws & "en" & kpaws & colon & space & paws & "" & paws, ames);						AddTextToArea(closecurlybr & closesqrbr & comma & nextline, ames);												filepathC = "";						if (StringToInt(Comprw.CompCode)==9) then begin							CheckImagePath(INr.AlternativeCode,filepathP,filepathC);						end else begin							CheckImagePath(INr.Code,filepathP,filepathC);						end;												AddTextToArea(kpaws & "image" & kpaws & colon & space & paws, ames);						if (NonBlank(filepathC)) then begin							SetAreaZeroSize(imagearea);							AddFileToArea(filepathC,imagearea,true);							InsertAreaBeforeArea(ames,imagearea);							GetAreaFromArea(imagearea,0,GetAreaLength(imagearea),ames);						end;						AddTextToArea(paws & comma & nextline, ames);								if (INr.SavedCount<=1) then begin							newrec = 1;						end else begin							newrec = 0;						end;						AddTextToArea(kpaws & "newrecord" & kpaws & colon & space & newrec & nextline, ames);						AddTextToArea(closecurlybr & nextline, ames);					  	WriteAreaToFile(ames,filename,1);					end;				end;				if (sendf==2) begin					//if (INr.TempFlag!=1) then begin testf = false; end;					if (testf) then begin						//INr.TempFlag = 0;						INr.SyncFlag = 0;						RECORDSTORE(INr,true);					end;				end;				loopcnt = loopcnt + 1;				end; RESETLOOP(INr);			LogText(0,"Goods synchronization for company " & Comprw.CompName);		end;	end;	ResetCompany(oldcompany);		if (sendf==1 and FileExists(filename)) then begin		WebSetContentType("application/binary");		WebOutFile(filename);		//Delete_File(filename);	end;	LHandleWebSendItems:;		if (sendf==1) then begin		res = true;	end;		HandleWebSendItems = res;    return;end;global webpublic updating Procedure WebSendItems() //Edit***************************Sasha2,15:18 04.07.2014begin  area areceived;      logtext(0,"WebSendItems from IP: " & WebRemoteIpAddress);      	webgetpostdata(areceived);  	WRITEAREATOFILE(areceived,"Received_Goods.txt",0);  	LogText(0,GetStringFromArea(areceived,0,GetAreaLength(areceived)));  	  	if (HandleWebSendItems(areceived)) then begin  		logText(0,"Items are sent");  	end;return;end;global webpublic updating Procedure WebSendBrands() //Edit***************************Sasha2,15:18 04.07.2014begin  record DIVc DIr;  record CompaniesBlock Compb;  row CompaniesBlock Comprw;  string 2 opencurlybr,closecurlybr,opensqrbr,closesqrbr,paws,kpaws,colon,space,comma;  string 5 nextline;  boolean TrHs,testf;  area ames,areceived;  integer newrec,oldcompany,i,rwcnt;  integer sendf;  string 20 suff;    	logtext(0,"WebSendBrands from IP: " & WebRemoteIpAddress);  	  	webgetpostdata(areceived);  	WRITEAREATOFILE(areceived,"Received_Brands.txt",0);  	LogText(0,GetStringFromArea(areceived,0,GetAreaLength(areceived)));  	  	sendf = CheckRequestForSend(areceived,opencurlybr,closecurlybr,opensqrbr,closesqrbr,paws,kpaws,colon,space,nextline,comma);  	switch (sendf) begin  	  case 0:  		LogText(0,"Error: Unknown command for brands");  		goto LWebSendBrands;  	  case 3:  	 	LogText(0,"Brands posting failed");  		goto LWebSendBrands;  	end;	oldcompany = CurrentCompany;      BlockLoad(Compb);    rwcnt = MatRowCnt(Compb);      for (i=0;i<rwcnt;i=i+1) begin      	MatRowGet(Compb,i,Comprw);      	if (/*StringToInt(Comprw.CompCode)==3 and*/ SetCompanyCode(Comprw.CompCode,false) and Comprw.ActiveStatus==0) then begin      		      		suff = "_cmpnr_" & Comprw.CompCode;				DIr.SyncFlag = 1;			//DIr.CType = "BRAND";			TrHs = true;			while (LoopKey("SyncFlag",DIr,1,TrHs)) begin				testf = true;				if (DIr.SyncFlag!=1) then begin TrHs = false; testf = false; end;				if (DIr.CType!="BRAND") then begin testf = false; end;				if (sendf==1) then begin					if (testf) then begin						AddTextToArea(opencurlybr & nextline, ames);						AddTextToArea(kpaws & "uid" & kpaws & colon & space & paws & DIr.Code & suff & paws & comma & nextline, ames);						AddTextToArea(kpaws & "title" & kpaws & colon & space & opensqrbr & opencurlybr, ames);						AddTextToArea(kpaws & "az" & kpaws & colon & space & paws & DIr.Name_AZ & paws & comma & space, ames);						AddTextToArea(kpaws & "ru" & kpaws & colon & space & paws & DIr.Name_RU & paws & comma & space, ames);						AddTextToArea(kpaws & "en" & kpaws & colon & space & paws & DIr.Name & paws, ames);						AddTextToArea(closecurlybr & closesqrbr & comma & nextline, ames);						if (DIr.SavedCount<=1) then begin							newrec = 1;						end else begin							newrec = 0;						end;						AddTextToArea(kpaws & "newrecord" & kpaws & colon & space & newrec & nextline, ames);						AddTextToArea(closecurlybr & nextline, ames);						/*if (DIr.TempFlag!=1) then begin 							DIr.TempFlag = 1;							RECORDSTORE(DIr,true);						end;*/					end;				end;				if (sendf==2) begin					//if (DIr.TempFlag!=1) then begin testf = false; end;					if (testf) then begin						//DIr.TempFlag = 0;						DIr.SyncFlag = 0;						RECORDSTORE(DIr,true);					end;				end;				end; RESETLOOP(DIr);			LogText(0,"Brand synchronization for company " & Comprw.CompName);		end;	end;		ResetCompany(oldcompany);		if (sendf==1) then begin		//WRITEAREATOFILE(ames,"Sent.txt",0);		//WebOutString(GetStringFromArea(ames,0,GetAreaLength(ames)));		WebSetContentType("application/binary");		WebOutArea(ames);		logText(0,"Brands are sent");	end;	LWebSendBrands:;return;end;global webpublic updating Procedure WebSendTypes() //Edit***************************Sasha2,15:18 04.07.2014begin  record DIVc DIr;  record CompaniesBlock Compb;  row CompaniesBlock Comprw;  string 2 opencurlybr,closecurlybr,opensqrbr,closesqrbr,paws,kpaws,colon,space,comma;  string 5 nextline;  boolean TrHs,testf;  area ames,areceived;  integer newrec,oldcompany,i,rwcnt;  integer sendf;  string 20 suff;    	logtext(0,"WebSendTypes from IP: " & WebRemoteIpAddress);  	  	webgetpostdata(areceived);  	WRITEAREATOFILE(areceived,"Received_Types.txt",0);  	LogText(0,GetStringFromArea(areceived,0,GetAreaLength(areceived)));  	  	sendf = CheckRequestForSend(areceived,opencurlybr,closecurlybr,opensqrbr,closesqrbr,paws,kpaws,colon,space,nextline,comma);  	  	switch (sendf) begin  	  case 0:  		LogText(0,"Error: Unknown command for types");  		goto LWebSendTypes;  	  case 3:  	 	LogText(0,"Types posting failed");  		goto LWebSendTypes;  	end;	oldcompany = CurrentCompany;      BlockLoad(Compb);    rwcnt = MatRowCnt(Compb);      for (i=0;i<rwcnt;i=i+1) begin      	MatRowGet(Compb,i,Comprw);      	if (/*StringToInt(Comprw.CompCode)==3 and*/ SetCompanyCode(Comprw.CompCode,false) and Comprw.ActiveStatus==0) then begin      		      	suff = "_cmpnr_" & Comprw.CompCode;	      	
	      	DIr.SyncFlag = 1;			//DIr.CType = "TYPE";			TrHs = true;			while (LoopKey("SyncFlag",DIr,1,TrHs)) begin				testf = true;				if (DIr.SyncFlag!=1) then begin TrHs = false; testf = false; end;				if (DIr.CType!="TYPE") then begin testf = false; end;				if (sendf==1) then begin					if (testf) then begin						AddTextToArea(opencurlybr & nextline, ames);						AddTextToArea(kpaws & "uid" & kpaws & colon & space & paws & DIr.Code & suff & paws & comma & nextline, ames);						AddTextToArea(kpaws & "title" & kpaws & colon & space & opensqrbr & opencurlybr, ames);						AddTextToArea(kpaws & "az" & kpaws & colon & space & paws & DIr.Name_AZ & paws & comma & space, ames);						AddTextToArea(kpaws & "ru" & kpaws & colon & space & paws & DIr.Name_RU & paws & comma & space, ames);						AddTextToArea(kpaws & "en" & kpaws & colon & space & paws & DIr.Name & paws, ames);						AddTextToArea(closecurlybr & closesqrbr & comma & nextline, ames);						if (DIr.SavedCount<=1) then begin							newrec = 1;						end else begin							newrec = 0;						end;						AddTextToArea(kpaws & "newrecord" & kpaws & colon & space & newrec & nextline, ames);						AddTextToArea(closecurlybr & nextline, ames);						/*if (DIr.TempFlag!=1) then begin							DIr.TempFlag = 1;							RECORDSTORE(DIr,true);						end;*/					end;				end;				if (sendf==2) begin					//if (DIr.TempFlag!=1) then begin testf = false; end;					if (testf) then begin						//DIr.TempFlag = 0;						DIr.SyncFlag = 0;						RECORDSTORE(DIr,true);					end;				end;				end; RESETLOOP(DIr);			LogText(0,"Types synchronization for company " & Comprw.CompName);		end;	end;		ResetCompany(oldcompany);	if (sendf==1) then begin		//WebOutString(GetStringFromArea(ames,0,GetAreaLength(ames)));		WebSetContentType("application/binary");		WebOutArea(ames);		logText(0,"Types are sent");	end;	LWebSendTypes:;return;end;