external procedure ExtractObj(string,var Integer,var string);external procedure ExtractObjWithSeparator(string,string,Boolean,var Integer,var string);function boolean FindTextInArea(string find,area farea)begin	boolean res;	longint pos,i,lenth,lenarea;	string 200 sfind,sfind1;	area alentest;		addtexttoarea(find,alentest);	lenarea = GetAreaLength(alentest);	sfind1 = getstringfromarea(alentest,0,lenarea);	res = false;	lenth = GetAreaLength(farea);	if(lenth>=lenarea)then begin		For(i=0;i<=lenth-lenarea;i=i+1) begin			sfind = getstringfromarea(farea,i,lenarea);			if(UpperCase(sfind)==UpperCase(sfind1))then begin				res = true;				goto LFind;			end;		end;	end; LFind:;		FindTextInArea = res;return;end;function integer CheckRequestForSendCarpet(string lastsyncnr,integer requestf,var string opencurlybr,var string closecurlybr,var string opensqrbr,var string closesqrbr,var string paws,var string kpaws,var string colon,var string space,var string nextline,var string comma)begin	  integer res;  	res = 0;	switch (requestf) begin	 case 1:	   res = 1;				 //opencurlybr = "{";  	 //closecurlybr = "}";  	 //opensqrbr = "[";  	 //closesqrbr = "]";  	 //paws = "\"";  	 //kpaws = "\"";  	 colon = ":";  	 //space = " ";  	 //nextline = chr(13) & chr(10);  	 //comma = ",";  	 comma = "!===!";	 case 2:	   if (lastsyncnr=="OK") then begin	     res = 2;	   end;	   if (lastsyncnr=="FAIL") then begin	     res = 3;	   end;	end;  CheckRequestForSendCarpet = res; return;end;procedure CheckImagePath(string filename,string filepathP,var string filepathC,var string exten)begin    exten = "";  if (FILEEXISTS(filepathP & filename & ".jpeg")) then begin		filepathC = filepathP & filename & ".jpeg";		exten = "jpeg";	end else begin		if (FILEEXISTS(filepathP & filename & ".png")) then begin			filepathC = filepathP & filename & ".png";			exten = "png";		end else begin			if (FILEEXISTS(filepathP & filename & ".jpg")) then begin				filepathC = filepathP & filename & ".jpg";				exten = "jpg";			end else begin			  if (FILEEXISTS(filepathP & filename & ".tif")) then begin			    filepathC = filepathP & filename & ".tif";				  exten = "tif";			  end;			end;		end;	end;	  return;end;globalupdating function boolean HandleWebSendItemsCarpetsBoutique()begin  record ItemStatusVc ISr;  record INVc INr;  row INVc INrw;  record DIVc DIr;  record PLVc PLr;  record CompaniesBlock Compb;  row CompaniesBlock Comprw;  string 2 opencurlybr,closecurlybr,opensqrbr,closesqrbr,paws,kpaws,colon,space,comma;  string 5 nextline,exten;  boolean TrHs,TrHs1,testf,testf1,res,openjson;  integer sendf,requestf;  integer pos,i,j,rwcnt,rwcnt1,oldcompany,loopcnt;  string 20 classfound,brand,type,collection,suff;  string 255 azedescr,rusdescr,engdescr,azename,rusname,engname,azetech,rustech,engtech,filename;  string 100 filepathP,filepathC,lastsyncnr;  area imagearea,ames,isarea;  LongInt arelen,foundflag,lastflag;  val price;  		res = false;	openjson = false;	logtext(0,"Sending items to IP: " & WebRemoteIpAddress);		lastsyncnr = WebGetArg("lastsyncnr");	requestf = StringToInt(WebGetArg("requestf"));			sendf = CheckRequestForSendCarpet(lastsyncnr,requestf,opencurlybr,closecurlybr,opensqrbr,closesqrbr,paws,kpaws,colon,space,nextline,comma);		switch (sendf) begin	  case 0:		  LogText(0,"Error: Unknown command for WebSendItemsCarpetsBoutique");		  goto LHandleWebSendItemsCarpetsBoutique;		case 2:			LogText(0,"Items are synchronized with IP: " & WebRemoteIpAddress);			goto LHandleWebSendItemsCarpetsBoutique;	  case 3:	 	  LogText(0,"Items posting failed to IP: " & WebRemoteIpAddress);		  goto LHandleWebSendItemsCarpetsBoutique;	end;		foundflag = StringToLongInt(lastsyncnr);  			/*filename = "carpetmess.txt";	CreateFile(filename);	CloseFile;*/		oldcompany = CurrentCompany;    BlockLoad(Compb);  rwcnt1 = MatRowCnt(Compb);    for (j=0;j<rwcnt1;j=j+1) begin  	MatRowGet(Compb,j,Comprw);  	if ((StringToInt(Comprw.CompCode)==13) and SetCompanyCode(Comprw.CompCode,false) and Comprw.ActiveStatus==0) then begin   				if (sendf==1) then begin							//filepathP = "webcust/" & Comprw.ShortName & "/";				//suff = "_cmpnr_" & Comprw.CompCode;								if (openjson==false) then begin				  AddTextToArea(opensqrbr & nextline, ames);				  AddTextToArea(opencurlybr & nextline, ames);          AddTextToArea(kpaws & "Service" & kpaws & colon & space & paws & "Request Is Valid" & paws & nextline, ames);				end;				loopcnt = 0;				INr.SyncFlag = foundflag;				TrHs = true;				while (LoopKey("SyncFlag",INr,1,TrHs)) begin					testf = true;					if (INr.SyncFlag<=foundflag) then begin testf = false; end;					//if (loopcnt>10) then begin  TrHs = false; testf = false; end;					if (testf) then begin						//SetAreaZeroSize(ames);						if (openjson==false) then begin	            AddTextToArea(closecurlybr & comma & nextline, ames);						  openjson = true;						end else begin						  AddTextToArea(closecurlybr & comma & nextline, ames);						end;														AddTextToArea(opencurlybr & nextline, ames);												AddTextToArea(kpaws & "item" & kpaws & colon & space & paws & INr.Code & paws & comma & nextline, ames);						AddTextToArea(kpaws & "barcode" & kpaws & colon & space & paws & INr.BarCode & paws & comma & nextline, ames);						AddTextToArea(kpaws & "name" & kpaws & colon & space & paws & INr.Name & paws & comma & nextline, ames);						AddTextToArea(kpaws & "size" & kpaws & colon & space & paws & INr.Size & paws & comma & nextline, ames);						AddTextToArea(kpaws & "colour" & kpaws & colon & space & paws & INr.Colour & paws & comma & nextline, ames);						PLr.PLCode = "RRP";		        PLr.ArtCode = INr.Code;		        ReadFirstMain(PLr,2,true);		        price = PLr.ExVatPrice;						AddTextToArea(kpaws & "price" & kpaws & colon & space & price & nextline, ames);				  	//WriteAreaToFile(ames,filename,1);				  	if (lastflag < INr.SyncFlag) then begin				  		lastflag = INr.SyncFlag;				  	end;					end;					  loopcnt = loopcnt + 1;					end; RESETLOOP(INr);								SetAreaZeroSize(isarea);				ISr.Location = ";;;";      	TrHs1 = true;      	while (LoopKey("Location",ISr,1,TrHs1)) begin      	  testf1 = true;      	  if (ISr.Location!=";;;") then begin testf1 = false; TrHs1 = false; end;      	  if (ISr.Instock<=0) then begin testf1 = false; end;      	  if (testf1) then begin      	    AddTextToArea(ISr.Code & "????", isarea);      	  end;      	end; RESETLOOP(ISr);			end;		end;	end; 		if (openjson==false) then begin    AddTextToArea(closecurlybr & comma & nextline, ames);    lastflag = foundflag;	  openjson = true;	end;	if (openjson) then begin	 AddTextToArea(closecurlybr, ames);	 	 AddTextToArea(comma & nextline & opencurlybr & nextline, ames);	 AddTextToArea(kpaws & "itemscount" & kpaws & colon & space & loopcnt & nextline, ames);	 AddTextToArea(closecurlybr, ames);	 	 AddTextToArea(comma & nextline & opencurlybr & nextline, ames);	 AddTextToArea(kpaws & "availableitems" & kpaws & colon & space & paws, ames);	 InsertAreaBeforeArea(ames,isarea);	 SetAreaZeroSize(ames);	 GetAreaFromArea(isarea,0,GetAreaLength(isarea),ames);	 AddTextToArea(paws & nextline & closecurlybr, ames);	 	 AddTextToArea(comma & nextline & opencurlybr & nextline, ames);	 AddTextToArea(kpaws & "lastsyncflag" & kpaws & colon & space & lastflag & nextline, ames);	 AddTextToArea(closecurlybr & nextline, ames);	 	 AddTextToArea(closesqrbr & nextline, ames);	 //WriteAreaToFile(ames,filename,1);	end;	ResetCompany(oldcompany);		if (sendf==1 /*and FileExists(filename)*/) then begin		WEBOUTAREA(ames);		//WebOutFile(filename);		//Delete_File(filename);		res = true;	end;	LHandleWebSendItemsCarpetsBoutique:;		HandleWebSendItemsCarpetsBoutique = res;    return;end;global webpublic updating Procedure WebSendItemsCarpetsBoutique()begin  	if (HandleWebSendItemsCarpetsBoutique) then begin  		LogText(0,"Items are sent to IP: " & WebRemoteIpAddress);  	end;return;end;globalprocedure MyExtractObjWithSeparator(string separator,string ostr,Boolean skipblankf,var Integer pos,var string rstr)begin  string 10 c1,c2;  Boolean sepf;  integer seplen;  rstr = "";  seplen = len(separator);  if (skipblankf==false) then beginLNEXTCHAR:;    if (pos>=len(ostr)) then begin goto L99; end;    c1 = Mid(ostr,pos,1);     c2 = Mid(ostr,pos,seplen);     pos = pos + 1;    if (c2==separator) then begin      pos = pos + (seplen - 1);      goto L99;     end else begin      rstr = rstr & c1;      goto LNEXTCHAR;    end;  end else beginL477:;    if (pos>=len(ostr)) then begin goto L99; end;    c1 = Mid(ostr,pos,1);    c2 = Mid(ostr,pos,seplen);     pos = pos + 1;    if (c2==separator) then begin      if (len(rstr)==0) then begin         goto L477;       end;      pos = pos + (seplen - 1);      goto L8888;    end;    if ((len(rstr)<255)) then begin       rstr = rstr & c1;    end;    goto L477;L8888:;    if (pos>len(ostr)) then begin goto L99; end;    c1 = Mid(ostr,pos,1);      c2 = Mid(ostr,pos,seplen);    pos = pos + 1;    if (c2==separator) then begin pos = pos + (seplen - 1); goto L8888; end;    pos = pos - 1;  end;L99:;  return;end;global webpublic updating Procedure WebGetIconCarpetsBoutique()begin  area imagearea,ames;  string 20 splitstr,exten,curitem,curlen;  string 100 filepathP,filepathC;  LongInt curimagelength,curlenlongInt;  record INVc INr;  record CompaniesBlock Compb;  row CompaniesBlock Comprw;  integer j,rwcnt1,oldcompany,pos,pos1;  string 255 imagenames, chkimagelength        imagenames = WebGetArg("imagename");  	chkimagelength = WebGetArg("chkimagelength");  	    oldcompany = CurrentCompany;      splitstr = "!===!";    BlockLoad(Compb);    rwcnt1 = MatRowCnt(Compb);      //for (j=0;j<rwcnt1;j=j+1) begin    	MatRowGet(Compb,12,Comprw);    	if (SetCompanyCode(Comprw.CompCode,false) and Comprw.ActiveStatus==0) then begin   			filepathP = "webcust/" & Comprw.ShortName & "/";  			  			pos = 0;
  			pos1 = 0;        MyExtractObjWithSeparator("!===!",imagenames,true,pos,curitem);
        MyExtractObjWithSeparator("!===!",chkimagelength,false,pos1,curlen);        curlenlongInt = StringToLongInt(curlen);        while (nonblank(curitem)) begin          filepathC = "";    			if (StringToInt(Comprw.CompCode)==9) then begin    				INr.Code = curitem;    				ReadFirstMain(INr,1,true);    				CheckImagePath(INr.AlternativeCode,filepathP,filepathC,exten);    			end else begin    				CheckImagePath(curitem,filepathP,filepathC,exten);    			end;    			if (NonBlank(filepathC)) then begin  					SetAreaZeroSize(imagearea);  					AddFileToArea(filepathC,imagearea,true);  					curimagelength = GetAreaLength(imagearea);  					//LogText(0,"imagename " & curitem & " chkimagelength " & curlen & " curimagelength " & curimagelength);  					if (curimagelength==StringToInt(curlenlongInt)) then begin   					  AddStringToArea(splitstr & "imagelength:" & curimagelength & splitstr & "imageext:" & splitstr & "imagecode:" & splitstr,ames);  					end else begin   					  AddStringToArea(splitstr & "imagelength:" & curimagelength & splitstr & "imageext:" & curitem & "." & exten & splitstr & "imagecode:",ames);  					  InsertAreaBeforeArea(ames,imagearea);  					  SetAreaZeroSize(ames);  					  GetAreaFromArea(imagearea,0,GetAreaLength(imagearea),ames);  					end;  				end else begin  				  AddStringToArea(splitstr & "imagelength:" & splitstr & "imageext:" & splitstr & "imagecode:" & splitstr,ames);				  end;                    MyExtractObjWithSeparator("!===!",imagenames,true,pos,curitem);          MyExtractObjWithSeparator("!===!",chkimagelength,false,pos1,curlen);           curlenlongInt = StringToLongInt(curlen);        end;  		end;  	//end;     	ResetCompany(oldcompany);  	if (GetAreaLength(ames)!=0) then begin  	  WEBOUTAREA(ames);  	end else begin  	  WebOutString("");  	end;return;end;global webpublic updating Procedure WebShakeHandsCarpetsBoutique()begin  WebOutString("Connection_is_OK");return;end;