external procedure ARS2RClass_Def();
external procedure ALLVATRClass_Def();
external procedure SysEClass_Tool(Integer,var real,var real);
external procedure GTransEClass_Tool(Integer,var real,var real);
external procedure GTrans2EClass_Tool(Integer,var real,var real,var real);
external procedure GBaseEClass_Tool(Integer,var real,var real);
external procedure TransGenVClass_Tool(Integer,var real,var real);
external procedure GetCurUser(var record UserVc);
external procedure JobRClass_ENG();
external function string 60 UserDefined(string,string);
external outer function string 255 MasterBannerURL();
external procedure ItemStatusUserSettings(string,var Boolean,var Boolean,var Boolean,var Boolean,var Boolean,var Boolean,var Boolean,var Boolean,var Boolean,var Boolean,var Boolean,var Boolean,var Boolean,var Boolean);
external function Boolean AllowedInCountry(integer);
external function Integer ResourceWindowResourceType();
external function Boolean ResPlan_Rental();
external function Boolean ResPlan_ProdOperations();
remote function Boolean ReadPOSButtons(string,string,longint,var string,var string,var string,var record POSButtonsVc,var Integer);
external function Boolean TouchScreenLook();
external procedure ExtractObj(string,var Integer,var string);
external function Boolean IsSessionOpen(string,string,Date,Time);
external procedure CntNPTSPaymentCurrencies(var Array string,var Array string,var Array Integer,var Array string,var Integer);
remote procedure CntPOSCurrencies(var Array string,var Array Boolean,var Integer);
external function Boolean CheckOffLineRecords(Boolean);
external function string 60 TileUserDefined(string,Integer,var Integer);
external function Boolean CUVATNrColumn;
external function Integer GetInternetEnablerCountry();
external function Integer CntVarietyCode(Integer,var Array string);
external function Boolean UseTaxTemplatesforTaxCalc();
remote procedure TablesViewWClassDo(record LocalMachineBlock,string,Array string,Array string,Array string,Array string,Array Integer,var Integer,var LongInt);
external function string 20 GetMenuCode(string);
external procedure DrawModifierButtons(var Integer);
remote procedure ForkLiftQueueArray(string,string,var Array string,var Array string,var Array string,var Array string,var Array val,var Array Integer,var Array string,var Integer,Boolean,LongInt,LongInt,string);

external function Boolean DisplayLoginButtons();
external function Integer LoginShortcutsLines(Integer);
external function Integer LoginShortcutsPos(Real,Integer);

external procedure DefineTTRRowTypes(Integer);
external function real ItemButtons(string,Integer);
external procedure HWStoreWClassAddProducts();
// TravelLog
external function Integer LoginShortcuts();
external function Boolean TestConfigurationEnabler(string);
remote function Integer CustomerSalesPaymentTermType(string);
// POS Standalone
external function Boolean DefCustCodeSetup();

// Language functions ENG
external function Boolean DisplayLoginKeyPad_ENG();
external function string 255 VATZoneEditFieldLabelENG(Integer);
external function real VATZoneButtonsLabelsENG(real,real,real,real);
external procedure LoginButtons2_ENG(Real,Real);
external procedure FORMDEF_ENG();
external function string 255 DemoMsgWClassTitle_ENG(Boolean,Boolean);
external procedure TBEClassDef_ENG();
external function string 255 VATZoneNameENG();
external procedure TSERW_ENG();
external procedure TSERWNT_ENG();
external procedure TSERWTouch_ENG();
external procedure TSERWTEST_ENG();
external procedure INVFORM_ENG(Boolean);
external procedure DisplayRecordDetails_ENG(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val,string,Boolean,string);
external procedure DrawPOSInterface_ENG(string,string,record POSButtonsVc,Integer,string,Integer);
external procedure DisplayRecordDetailsCustDisplay_ENG(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val);
external function string 255 ResDayWClassWindowTitle_ENG();
external function string 255 ResMonWClassWindowTitle_ENG();
external function string 255 RTMonWClassWindowTitle_ENG();
external procedure SetupNightAuditWindowControls_ENG(Boolean);
external procedure CURClassDefinitionENG();
external function real DrawPaymentModesButtons_IV_ENG(real);
external function real FunctionButtons_ENG(string);
external procedure CreditCardWindowHeader_ENG(Boolean,Boolean,Real);
external procedure CreditCardWindowButtons_ENG(string,string,real);
external procedure CreditCardWindowInvoiceDetail_ENG(Real);
external procedure CreditCardWindowDeliveryDetail_ENG(Real);
external function real DrawPaymentModesButtons_ENG();
external procedure DrawBarMenuTiles_ENG(string);
external procedure DrawRestPMOtherPay_ENG();
external procedure DisplayRecordDetailsRA_ENG(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,LongInt,Date,string,LongInt);
external procedure DrawModifierButtons2_ENG(var integer,var integer);
external procedure OKCancel_ENG();
external procedure DefineElearningURLCacheLClass_ENG();
external procedure DefineElearningURLCacheDClass_ENG();
external function real TravelLogDeductions_ENG(real,real);
external procedure LoginButtons_ENG(Real);
external procedure FORMDEF2_ENG();
external procedure FORMDEF3_ENG();

// Language functions ARB
external function Boolean DisplayLoginKeyPad_ARB();
external function string 255 VATZoneEditFieldLabelARB(Integer);
external function real VATZoneButtonsLabelsARB(real,real,real,real);
external procedure LoginButtons2_ARB(Real,Real);
external procedure FORMDEF_ARB();
external function string 255 DemoMsgWClassTitle_ARB(Boolean,Boolean);
external procedure TBEClassDef_ARB();
external function string 255 VATZoneNameARB();
external procedure TSERW_ARB();
external procedure TSERWNT_ARB();
external procedure TSERWTouch_ARB();
external procedure TSERWTEST_ARB();
external procedure INVFORM_ARB(Boolean);
external procedure DisplayRecordDetails_ARB(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val,string,Boolean,string);
external procedure DrawPOSInterface_ARB(string,string,record POSButtonsVc,Integer,string,Integer);
external procedure DisplayRecordDetailsCustDisplay_ARB(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val);
external function string 255 ResDayWClassWindowTitle_ARB();
external function string 255 ResMonWClassWindowTitle_ARB();
external function string 255 RTMonWClassWindowTitle_ARB();
external procedure SetupNightAuditWindowControls_ARB(Boolean);
external procedure CURClassDefinitionARB();
external function real DrawPaymentModesButtons_IV_ARB(real);
external function real FunctionButtons_ARB(string);
external procedure CreditCardWindowHeader_ARB(Boolean,Boolean,Real);
external procedure CreditCardWindowButtons_ARB(string,string,real);
external procedure CreditCardWindowInvoiceDetail_ARB(Real);
external procedure CreditCardWindowDeliveryDetail_ARB(Real);
external function real DrawPaymentModesButtons_ARB();
external procedure DrawBarMenuTiles_ARB(string);
external procedure DrawRestPMOtherPay_ARB();
external procedure DisplayRecordDetailsRA_ARB(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,LongInt,Date,string,LongInt);
external procedure DrawModifierButtons2_ARB(var integer,var integer);
external procedure OKCancel_ARB();
external procedure DefineElearningURLCacheLClass_ARB();
external procedure DefineElearningURLCacheDClass_ARB();
external function real TravelLogDeductions_ARB(real,real);
external procedure LoginButtons_ARB(Real);
external procedure FORMDEF2_ARB();
external procedure FORMDEF3_ARB();

// Language functions AUS
external function Boolean DisplayLoginKeyPad_AUS();
external function string 255 VATZoneEditFieldLabelAUS(Integer);
external function real VATZoneButtonsLabelsAUS(real,real,real,real);
external procedure LoginButtons2_AUS(Real,Real);
external procedure FORMDEF_AUS();
external function string 255 DemoMsgWClassTitle_AUS(Boolean,Boolean);
external procedure TBEClassDef_AUS();
external function string 255 VATZoneNameAUS();
external procedure TSERW_AUS();
external procedure TSERWNT_AUS();
external procedure TSERWTouch_AUS();
external procedure TSERWTEST_AUS();
external procedure INVFORM_AUS(Boolean);
external procedure DisplayRecordDetails_AUS(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val,string,Boolean,string);
external procedure DrawPOSInterface_AUS(string,string,record POSButtonsVc,Integer,string,Integer);
external procedure DisplayRecordDetailsCustDisplay_AUS(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val);
external function string 255 ResDayWClassWindowTitle_AUS();
external function string 255 ResMonWClassWindowTitle_AUS();
external function string 255 RTMonWClassWindowTitle_AUS();
external procedure SetupNightAuditWindowControls_AUS(Boolean);
external procedure CURClassDefinitionAUS();
external function real DrawPaymentModesButtons_IV_AUS(real);
external function real FunctionButtons_AUS(string);
external procedure CreditCardWindowHeader_AUS(Boolean,Boolean,Real);
external procedure CreditCardWindowButtons_AUS(string,string,real);
external procedure CreditCardWindowInvoiceDetail_AUS(Real);
external procedure CreditCardWindowDeliveryDetail_AUS(Real);
external function real DrawPaymentModesButtons_AUS();
external procedure DrawBarMenuTiles_AUS(string);
external procedure DrawRestPMOtherPay_AUS();
external procedure DisplayRecordDetailsRA_AUS(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,LongInt,Date,string,LongInt);
external procedure DrawModifierButtons2_AUS(var integer,var integer);
external procedure OKCancel_AUS();
external procedure DefineElearningURLCacheLClass_AUS();
external procedure DefineElearningURLCacheDClass_AUS();
external function real TravelLogDeductions_AUS(real,real);
external procedure LoginButtons_AUS(Real);
external procedure FORMDEF2_AUS();
external procedure FORMDEF3_AUS();

// Language functions BRA
external function Boolean DisplayLoginKeyPad_BRA();
external function string 255 VATZoneEditFieldLabelBRA(Integer);
external function real VATZoneButtonsLabelsBRA(real,real,real,real);
external procedure LoginButtons2_BRA(Real,Real);
external procedure FORMDEF_BRA();
external function string 255 DemoMsgWClassTitle_BRA(Boolean,Boolean);
external procedure TBEClassDef_BRA();
external function string 255 VATZoneNameBRA();
external procedure TSERW_BRA();
external procedure TSERWNT_BRA();
external procedure TSERWTouch_BRA();
external procedure TSERWTEST_BRA();
external procedure INVFORM_BRA(Boolean);
external procedure DisplayRecordDetails_BRA(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val,string,Boolean,string);
external procedure DrawPOSInterface_BRA(string,string,record POSButtonsVc,Integer,string,Integer);
external procedure DisplayRecordDetailsCustDisplay_BRA(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val);
external function string 255 ResDayWClassWindowTitle_BRA();
external function string 255 ResMonWClassWindowTitle_BRA();
external function string 255 RTMonWClassWindowTitle_BRA();
external procedure SetupNightAuditWindowControls_BRA(Boolean);
external procedure CURClassDefinitionBRA();
external function real DrawPaymentModesButtons_IV_BRA(real);
external function real FunctionButtons_BRA(string);
external procedure CreditCardWindowHeader_BRA(Boolean,Boolean,Real);
external procedure CreditCardWindowButtons_BRA(string,string,real);
external procedure CreditCardWindowInvoiceDetail_BRA(Real);
external procedure CreditCardWindowDeliveryDetail_BRA(Real);
external function real DrawPaymentModesButtons_BRA();
external procedure DrawBarMenuTiles_BRA(string);
external procedure DrawRestPMOtherPay_BRA();
external procedure DisplayRecordDetailsRA_BRA(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,LongInt,Date,string,LongInt);
external procedure DrawModifierButtons2_BRA(var integer,var integer);
external procedure OKCancel_BRA();
external procedure DefineElearningURLCacheLClass_BRA();
external procedure DefineElearningURLCacheDClass_BRA();
external function real TravelLogDeductions_BRA(real,real);
external procedure LoginButtons_BRA(Real);
external procedure FORMDEF2_BRA();
external procedure FORMDEF3_BRA();

// Language functions CAN
external function Boolean DisplayLoginKeyPad_CAN();
external function string 255 VATZoneEditFieldLabelCAN(Integer);
external function real VATZoneButtonsLabelsCAN(real,real,real,real);
external procedure LoginButtons2_CAN(Real,Real);
external procedure FORMDEF_CAN();
external function string 255 DemoMsgWClassTitle_CAN(Boolean,Boolean);
external procedure TBEClassDef_CAN();
external function string 255 VATZoneNameCAN();
external procedure TSERW_CAN();
external procedure TSERWNT_CAN();
external procedure TSERWTouch_CAN();
external procedure TSERWTEST_CAN();
external procedure INVFORM_CAN(Boolean);
external procedure DisplayRecordDetails_CAN(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val,string,Boolean,string);
external procedure DrawPOSInterface_CAN(string,string,record POSButtonsVc,Integer,string,Integer);
external procedure DisplayRecordDetailsCustDisplay_CAN(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val);
external function string 255 ResDayWClassWindowTitle_CAN();
external function string 255 ResMonWClassWindowTitle_CAN();
external function string 255 RTMonWClassWindowTitle_CAN();
external procedure SetupNightAuditWindowControls_CAN(Boolean);
external procedure CURClassDefinitionCAN();
external function real DrawPaymentModesButtons_IV_CAN(real);
external function real FunctionButtons_CAN(string);
external procedure CreditCardWindowHeader_CAN(Boolean,Boolean,Real);
external procedure CreditCardWindowButtons_CAN(string,string,real);
external procedure CreditCardWindowInvoiceDetail_CAN(Real);
external procedure CreditCardWindowDeliveryDetail_CAN(Real);
external function real DrawPaymentModesButtons_CAN();
external procedure DrawBarMenuTiles_CAN(string);
external procedure DrawRestPMOtherPay_CAN();
external procedure DisplayRecordDetailsRA_CAN(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,LongInt,Date,string,LongInt);
external procedure DrawModifierButtons2_CAN(var integer,var integer);
external procedure OKCancel_CAN();
external procedure DefineElearningURLCacheLClass_CAN();
external procedure DefineElearningURLCacheDClass_CAN();
external function real TravelLogDeductions_CAN(real,real);
external procedure LoginButtons_CAN(Real);
external procedure FORMDEF2_CAN();
external procedure FORMDEF3_CAN();

// Language functions CRO
external function Boolean DisplayLoginKeyPad_CRO();
external function string 255 VATZoneEditFieldLabelCRO(Integer);
external function real VATZoneButtonsLabelsCRO(real,real,real,real);
external procedure LoginButtons2_CRO(Real,Real);
external procedure FORMDEF_CRO();
external function string 255 DemoMsgWClassTitle_CRO(Boolean,Boolean);
external procedure TBEClassDef_CRO();
external function string 255 VATZoneNameCRO();
external procedure TSERW_CRO();
external procedure TSERWNT_CRO();
external procedure TSERWTouch_CRO();
external procedure TSERWTEST_CRO();
external procedure INVFORM_CRO(Boolean);
external procedure DisplayRecordDetails_CRO(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val,string,Boolean,string);
external procedure DrawPOSInterface_CRO(string,string,record POSButtonsVc,Integer,string,Integer);
external procedure DisplayRecordDetailsCustDisplay_CRO(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val);
external function string 255 ResDayWClassWindowTitle_CRO();
external function string 255 ResMonWClassWindowTitle_CRO();
external function string 255 RTMonWClassWindowTitle_CRO();
external procedure SetupNightAuditWindowControls_CRO(Boolean);
external procedure CURClassDefinitionCRO();
external function real DrawPaymentModesButtons_IV_CRO(real);
external function real FunctionButtons_CRO(string);
external procedure CreditCardWindowHeader_CRO(Boolean,Boolean,Real);
external procedure CreditCardWindowButtons_CRO(string,string,real);
external procedure CreditCardWindowInvoiceDetail_CRO(Real);
external procedure CreditCardWindowDeliveryDetail_CRO(Real);
external function real DrawPaymentModesButtons_CRO();
external procedure DrawBarMenuTiles_CRO(string);
external procedure DrawRestPMOtherPay_CRO();
external procedure DisplayRecordDetailsRA_CRO(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,LongInt,Date,string,LongInt);
external procedure DrawModifierButtons2_CRO(var integer,var integer);
external procedure OKCancel_CRO();
external procedure DefineElearningURLCacheLClass_CRO();
external procedure DefineElearningURLCacheDClass_CRO();
external function real TravelLogDeductions_CRO(real,real);
external procedure LoginButtons_CRO(Real);
external procedure FORMDEF2_CRO();
external procedure FORMDEF3_CRO();

// Language functions CHI
external function Boolean DisplayLoginKeyPad_CHN();
external function string 255 VATZoneEditFieldLabelCHN(Integer);
external function real VATZoneButtonsLabelsCHN(real,real,real,real);
external procedure LoginButtons2_CHN(Real,Real);
external procedure FORMDEF_CHN();
external function string 255 DemoMsgWClassTitle_CHN(Boolean,Boolean);
external procedure TBEClassDef_CHN();
external function string 255 VATZoneNameCHN();
external procedure TSERW_CHN();
external procedure TSERWNT_CHN();
external procedure TSERWTouch_CHN();
external procedure TSERWTEST_CHN();
external procedure INVFORM_CHN(Boolean);
external procedure DisplayRecordDetails_CHN(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val,string,Boolean,string);
external procedure DrawPOSInterface_CHN(string,string,record POSButtonsVc,Integer,string,Integer);
external procedure DisplayRecordDetailsCustDisplay_CHN(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val);
external function string 255 ResDayWClassWindowTitle_CHN();
external function string 255 ResMonWClassWindowTitle_CHN();
external function string 255 RTMonWClassWindowTitle_CHN();
external procedure SetupNightAuditWindowControls_CHN(Boolean);
external procedure CURClassDefinitionCHN();
external function real DrawPaymentModesButtons_IV_CHN(real);
external function real FunctionButtons_CHN(string);
external procedure CreditCardWindowHeader_CHN(Boolean,Boolean,Real);
external procedure CreditCardWindowButtons_CHN(string,string,real);
external procedure CreditCardWindowInvoiceDetail_CHN(Real);
external procedure CreditCardWindowDeliveryDetail_CHN(Real);
external function real DrawPaymentModesButtons_CHN();
external procedure DrawBarMenuTiles_CHN(string);
external procedure DrawRestPMOtherPay_CHN();
external procedure DisplayRecordDetailsRA_CHN(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,LongInt,Date,string,LongInt);
external procedure DrawModifierButtons2_CHN(var integer,var integer);
external procedure OKCancel_CHN();
external procedure DefineElearningURLCacheLClass_CHN();
external procedure DefineElearningURLCacheDClass_CHN();
external function real TravelLogDeductions_CHN(real,real);
external procedure LoginButtons_CHN(Real);
external procedure FORMDEF2_CHN();
external procedure FORMDEF3_CHN();

// Language functions CZE
external function Boolean DisplayLoginKeyPad_CZE();
external function string 255 VATZoneEditFieldLabelCZE(Integer);
external function real VATZoneButtonsLabelsCZE(real,real,real,real);
external procedure LoginButtons2_CZE(Real,Real);
external procedure FORMDEF_CZE();
external function string 255 DemoMsgWClassTitle_CZE(Boolean,Boolean);
external procedure TBEClassDef_CZE();
external function string 255 VATZoneNameCZE();
external procedure TSERW_CZE();
external procedure TSERWNT_CZE();
external procedure TSERWTouch_CZE();
external procedure TSERWTEST_CZE();
external procedure INVFORM_CZE(Boolean);
external procedure DisplayRecordDetails_CZE(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val,string,Boolean,string);
external procedure DrawPOSInterface_CZE(string,string,record POSButtonsVc,Integer,string,Integer);
external procedure DisplayRecordDetailsCustDisplay_CZE(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val);
external function string 255 ResDayWClassWindowTitle_CZE();
external function string 255 ResMonWClassWindowTitle_CZE();
external function string 255 RTMonWClassWindowTitle_CZE();
external procedure SetupNightAuditWindowControls_CZE(Boolean);
external procedure CURClassDefinitionCZE();
external function real DrawPaymentModesButtons_IV_CZE(real);
external function real FunctionButtons_CZE(string);
external procedure CreditCardWindowHeader_CZE(Boolean,Boolean,Real);
external procedure CreditCardWindowButtons_CZE(string,string,real);
external procedure CreditCardWindowInvoiceDetail_CZE(Real);
external procedure CreditCardWindowDeliveryDetail_CZE(Real);
external function real DrawPaymentModesButtons_CZE();
external procedure DrawBarMenuTiles_CZE(string);
external procedure DrawRestPMOtherPay_CZE();
external procedure DisplayRecordDetailsRA_CZE(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,LongInt,Date,string,LongInt);
external procedure DrawModifierButtons2_CZE(var integer,var integer);
external procedure OKCancel_CZE();
external procedure DefineElearningURLCacheLClass_CZE();
external procedure DefineElearningURLCacheDClass_CZE();
external function real TravelLogDeductions_CZE(real,real);
external procedure LoginButtons_CZE(Real);
external procedure FORMDEF2_CZE();
external procedure FORMDEF3_CZE();

// Language functions DAN
external function Boolean DisplayLoginKeyPad_DAN();
external function string 255 VATZoneEditFieldLabelDAN(Integer);
external function real VATZoneButtonsLabelsDAN(real,real,real,real);
external procedure LoginButtons2_DAN(Real,Real);
external procedure FORMDEF_DAN();
external function string 255 DemoMsgWClassTitle_DAN(Boolean,Boolean);
external procedure TBEClassDef_DAN();
external function string 255 VATZoneNameDAN();
external procedure TSERW_DAN();
external procedure TSERWNT_DAN();
external procedure TSERWTouch_DAN();
external procedure TSERWTEST_DAN();
external procedure INVFORM_DAN(Boolean);
external procedure DisplayRecordDetails_DAN(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val,string,Boolean,string);
external procedure DrawPOSInterface_DAN(string,string,record POSButtonsVc,Integer,string,Integer);
external procedure DisplayRecordDetailsCustDisplay_DAN(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val);
external function string 255 ResDayWClassWindowTitle_DAN();
external function string 255 ResMonWClassWindowTitle_DAN();
external function string 255 RTMonWClassWindowTitle_DAN();
external procedure SetupNightAuditWindowControls_DAN(Boolean);
external procedure CURClassDefinitionDAN();
external function real DrawPaymentModesButtons_IV_DAN(real);
external function real FunctionButtons_DAN(string);
external procedure CreditCardWindowHeader_DAN(Boolean,Boolean,Real);
external procedure CreditCardWindowButtons_DAN(string,string,real);
external procedure CreditCardWindowInvoiceDetail_DAN(Real);
external procedure CreditCardWindowDeliveryDetail_DAN(Real);
external function real DrawPaymentModesButtons_DAN();
external procedure DrawBarMenuTiles_DAN(string);
external procedure DrawRestPMOtherPay_DAN();
external procedure DisplayRecordDetailsRA_DAN(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,LongInt,Date,string,LongInt);
external procedure DrawModifierButtons2_DAN(var integer,var integer);
external procedure OKCancel_DAN();
external procedure DefineElearningURLCacheLClass_DAN();
external procedure DefineElearningURLCacheDClass_DAN();
external function real TravelLogDeductions_DAN(real,real);
external procedure LoginButtons_DAN(Real);
external procedure FORMDEF2_DAN();
external procedure FORMDEF3_DAN();

// Language functions ESP
external function Boolean DisplayLoginKeyPad_ESP();
external function string 255 VATZoneEditFieldLabelESP(Integer);
external function real VATZoneButtonsLabelsESP(real,real,real,real);
external procedure LoginButtons2_ESP(Real,Real);
external procedure FORMDEF_ESP();
external function string 255 DemoMsgWClassTitle_ESP(Boolean,Boolean);
external procedure TBEClassDef_ESP();
external function string 255 VATZoneNameESP();
external procedure TSERW_ESP();
external procedure TSERWNT_ESP();
external procedure TSERWTouch_ESP();
external procedure TSERWTEST_ESP();
external procedure INVFORM_ESP(Boolean);
external procedure DisplayRecordDetails_ESP(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val,string,Boolean,string);
external procedure DrawPOSInterface_ESP(string,string,record POSButtonsVc,Integer,string,Integer);
external procedure DisplayRecordDetailsCustDisplay_ESP(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val);
external function string 255 ResDayWClassWindowTitle_ESP();
external function string 255 ResMonWClassWindowTitle_ESP();
external function string 255 RTMonWClassWindowTitle_ESP();
external procedure SetupNightAuditWindowControls_ESP(Boolean);
external procedure CURClassDefinitionESP();
external function real DrawPaymentModesButtons_IV_ESP(real);
external function real FunctionButtons_ESP(string);
external procedure CreditCardWindowHeader_ESP(Boolean,Boolean,Real);
external procedure CreditCardWindowButtons_ESP(string,string,real);
external procedure CreditCardWindowInvoiceDetail_ESP(Real);
external procedure CreditCardWindowDeliveryDetail_ESP(Real);
external function real DrawPaymentModesButtons_ESP();
external procedure DrawBarMenuTiles_ESP(string);
external procedure DrawRestPMOtherPay_ESP();
external procedure DisplayRecordDetailsRA_ESP(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,LongInt,Date,string,LongInt);
external procedure DrawModifierButtons2_ESP(var integer,var integer);
external procedure OKCancel_ESP();
external procedure DefineElearningURLCacheLClass_ESP();
external procedure DefineElearningURLCacheDClass_ESP();
external function real TravelLogDeductions_ESP(real,real);
external procedure LoginButtons_ESP(Real);
external procedure FORMDEF2_ESP();
external procedure FORMDEF3_ESP();

// Language functions EST
external function Boolean DisplayLoginKeyPad_EST();
external function string 255 VATZoneEditFieldLabelEST(Integer);
external function real VATZoneButtonsLabelsEST(real,real,real,real);
external procedure LoginButtons2_EST(Real,Real);
external procedure FORMDEF_EST();
external function string 255 DemoMsgWClassTitle_EST(Boolean,Boolean);
external procedure TBEClassDef_EST();
external function string 255 VATZoneNameEST();
external procedure TSERW_EST();
external procedure TSERWNT_EST();
external procedure TSERWTouch_EST();
external procedure TSERWTEST_EST();
external procedure INVFORM_EST(Boolean);
external procedure DisplayRecordDetails_EST(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val,string,Boolean,string);
external procedure DrawPOSInterface_EST(string,string,record POSButtonsVc,Integer,string,Integer);
external procedure DisplayRecordDetailsCustDisplay_EST(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val);
external function string 255 ResDayWClassWindowTitle_EST();
external function string 255 ResMonWClassWindowTitle_EST();
external function string 255 RTMonWClassWindowTitle_EST();
external procedure SetupNightAuditWindowControls_EST(Boolean);
external procedure CURClassDefinitionEST();
external function real DrawPaymentModesButtons_IV_EST(real);
external function real FunctionButtons_EST(string);
external procedure CreditCardWindowHeader_EST(Boolean,Boolean,Real);
external procedure CreditCardWindowButtons_EST(string,string,real);
external procedure CreditCardWindowInvoiceDetail_EST(Real);
external procedure CreditCardWindowDeliveryDetail_EST(Real);
external function real DrawPaymentModesButtons_EST();
external procedure DrawBarMenuTiles_EST(string);
external procedure DrawRestPMOtherPay_EST();
external procedure DisplayRecordDetailsRA_EST(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,LongInt,Date,string,LongInt);
external procedure DrawModifierButtons2_EST(var integer,var integer);
external procedure OKCancel_EST();
external procedure DefineElearningURLCacheLClass_EST();
external procedure DefineElearningURLCacheDClass_EST();
external function real TravelLogDeductions_EST(real,real);
external procedure LoginButtons_EST(Real);
external procedure FORMDEF2_EST();
external procedure FORMDEF3_EST();

// Language functions FIN
external function Boolean DisplayLoginKeyPad_FIN();
external function string 255 VATZoneEditFieldLabelFIN(Integer);
external function real VATZoneButtonsLabelsFIN(real,real,real,real);
external procedure LoginButtons2_FIN(Real,Real);
external procedure FORMDEF_FIN();
external function string 255 DemoMsgWClassTitle_FIN(Boolean,Boolean);
external procedure TBEClassDef_FIN();
external function string 255 VATZoneNameFIN();
external procedure TSERW_FIN();
external procedure TSERWNT_FIN();
external procedure TSERWTouch_FIN();
external procedure TSERWTEST_FIN();
external procedure INVFORM_FIN(Boolean);
external procedure DisplayRecordDetails_FIN(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val,string,Boolean,string);
external procedure DrawPOSInterface_FIN(string,string,record POSButtonsVc,Integer,string,Integer);
external procedure DisplayRecordDetailsCustDisplay_FIN(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val);
external function string 255 ResDayWClassWindowTitle_FIN();
external function string 255 ResMonWClassWindowTitle_FIN();
external function string 255 RTMonWClassWindowTitle_FIN();
external procedure SetupNightAuditWindowControls_FIN(Boolean);
external procedure CURClassDefinitionFIN();
external function real DrawPaymentModesButtons_IV_FIN(real);
external function real FunctionButtons_FIN(string);
external procedure CreditCardWindowHeader_FIN(Boolean,Boolean,Real);
external procedure CreditCardWindowButtons_FIN(string,string,real);
external procedure CreditCardWindowInvoiceDetail_FIN(Real);
external procedure CreditCardWindowDeliveryDetail_FIN(Real);
external function real DrawPaymentModesButtons_FIN();
external procedure DrawBarMenuTiles_FIN(string);
external procedure DrawRestPMOtherPay_FIN();
external procedure DisplayRecordDetailsRA_FIN(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,LongInt,Date,string,LongInt);
external procedure DrawModifierButtons2_FIN(var integer,var integer);
external procedure OKCancel_FIN();
external procedure DefineElearningURLCacheLClass_FIN();
external procedure DefineElearningURLCacheDClass_FIN();
external function real TravelLogDeductions_FIN(real,real);
external procedure LoginButtons_FIN(Real);
external procedure FORMDEF2_FIN();
external procedure FORMDEF3_FIN();

// Language functions FRA
external function Boolean DisplayLoginKeyPad_FRA();
external function string 255 VATZoneEditFieldLabelFRA(Integer);
external function real VATZoneButtonsLabelsFRA(real,real,real,real);
external procedure LoginButtons2_FRA(Real,Real);
external procedure FORMDEF_FRA();
external function string 255 DemoMsgWClassTitle_FRA(Boolean,Boolean);
external procedure TBEClassDef_FRA();
external function string 255 VATZoneNameFRA();
external procedure TSERW_FRA();
external procedure TSERWNT_FRA();
external procedure TSERWTouch_FRA();
external procedure TSERWTEST_FRA();
external procedure INVFORM_FRA(Boolean);
external procedure DisplayRecordDetails_FRA(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val,string,Boolean,string);
external procedure DrawPOSInterface_FRA(string,string,record POSButtonsVc,Integer,string,Integer);
external procedure DisplayRecordDetailsCustDisplay_FRA(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val);
external function string 255 ResDayWClassWindowTitle_FRA();
external function string 255 ResMonWClassWindowTitle_FRA();
external function string 255 RTMonWClassWindowTitle_FRA();
external procedure SetupNightAuditWindowControls_FRA(Boolean);
external procedure CURClassDefinitionFRA();
external function real DrawPaymentModesButtons_IV_FRA(real);
external function real FunctionButtons_FRA(string);
external procedure CreditCardWindowHeader_FRA(Boolean,Boolean,Real);
external procedure CreditCardWindowButtons_FRA(string,string,real);
external procedure CreditCardWindowInvoiceDetail_FRA(Real);
external procedure CreditCardWindowDeliveryDetail_FRA(Real);
external function real DrawPaymentModesButtons_FRA();
external procedure DrawBarMenuTiles_FRA(string);
external procedure DrawRestPMOtherPay_FRA();
external procedure DisplayRecordDetailsRA_FRA(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,LongInt,Date,string,LongInt);
external procedure DrawModifierButtons2_FRA(var integer,var integer);
external procedure OKCancel_FRA();
external procedure DefineElearningURLCacheLClass_FRA();
external procedure DefineElearningURLCacheDClass_FRA();
external function real TravelLogDeductions_FRA(real,real);
external procedure LoginButtons_FRA(Real);
external procedure FORMDEF2_FRA();
external procedure FORMDEF3_FRA();

// Language functions FRC
external function Boolean DisplayLoginKeyPad_FRC();
external function string 255 VATZoneEditFieldLabelFRC(Integer);
external function real VATZoneButtonsLabelsFRC(real,real,real,real);
external procedure LoginButtons2_FRC(Real,Real);
external procedure FORMDEF_FRC();
external function string 255 DemoMsgWClassTitle_FRC(Boolean,Boolean);
external procedure TBEClassDef_FRC();
external function string 255 VATZoneNameFRC();
external procedure TSERW_FRC();
external procedure TSERWNT_FRC();
external procedure TSERWTouch_FRC();
external procedure TSERWTEST_FRC();
external procedure INVFORM_FRC(Boolean);
external procedure DisplayRecordDetails_FRC(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val,string,Boolean,string);
external procedure DrawPOSInterface_FRC(string,string,record POSButtonsVc,Integer,string,Integer);
external procedure DisplayRecordDetailsCustDisplay_FRC(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val);
external function string 255 ResDayWClassWindowTitle_FRC();
external function string 255 ResMonWClassWindowTitle_FRC();
external function string 255 RTMonWClassWindowTitle_FRC();
external procedure SetupNightAuditWindowControls_FRC(Boolean);
external procedure CURClassDefinitionFRC();
external function real DrawPaymentModesButtons_IV_FRC(real);
external function real FunctionButtons_FRC(string);
external procedure CreditCardWindowHeader_FRC(Boolean,Boolean,Real);
external procedure CreditCardWindowButtons_FRC(string,string,real);
external procedure CreditCardWindowInvoiceDetail_FRC(Real);
external procedure CreditCardWindowDeliveryDetail_FRC(Real);
external function real DrawPaymentModesButtons_FRC();
external procedure DrawBarMenuTiles_FRC(string);
external procedure DrawRestPMOtherPay_FRC();
external procedure DisplayRecordDetailsRA_FRC(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,LongInt,Date,string,LongInt);
external procedure DrawModifierButtons2_FRC(var integer,var integer);
external procedure OKCancel_FRC();
external procedure DefineElearningURLCacheLClass_FRC();
external procedure DefineElearningURLCacheDClass_FRC();
external function real TravelLogDeductions_FRC(real,real);
external procedure LoginButtons_FRC(Real);
external procedure FORMDEF2_FRC();
external procedure FORMDEF3_FRC();

// Language functions FAR
external function Boolean DisplayLoginKeyPad_FAR();
external function string 255 VATZoneEditFieldLabelFAR(Integer);
external function real VATZoneButtonsLabelsFAR(real,real,real,real);
external procedure LoginButtons2_FAR(Real,Real);
external procedure FORMDEF_FAR();
external function string 255 DemoMsgWClassTitle_FAR(Boolean,Boolean);
external procedure TBEClassDef_FAR();
external function string 255 VATZoneNameFAR();
external procedure TSERW_FAR();
external procedure TSERWNT_FAR();
external procedure TSERWTouch_FAR();
external procedure TSERWTEST_FAR();
external procedure INVFORM_FAR(Boolean);
external procedure DisplayRecordDetails_FAR(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val,string,Boolean,string);
external procedure DrawPOSInterface_FAR(string,string,record POSButtonsVc,Integer,string,Integer);
external procedure DisplayRecordDetailsCustDisplay_FAR(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val);
external function string 255 ResDayWClassWindowTitle_FAR();
external function string 255 ResMonWClassWindowTitle_FAR();
external function string 255 RTMonWClassWindowTitle_FAR();
external procedure SetupNightAuditWindowControls_FAR(Boolean);
external procedure CURClassDefinitionFAR();
external function real DrawPaymentModesButtons_IV_FAR(real);
external function real FunctionButtons_FAR(string);
external procedure CreditCardWindowHeader_FAR(Boolean,Boolean,Real);
external procedure CreditCardWindowButtons_FAR(string,string,real);
external procedure CreditCardWindowInvoiceDetail_FAR(Real);
external procedure CreditCardWindowDeliveryDetail_FAR(Real);
external function real DrawPaymentModesButtons_FAR();
external procedure DrawBarMenuTiles_FAR(string);
external procedure DrawRestPMOtherPay_FAR();
external procedure DisplayRecordDetailsRA_FAR(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,LongInt,Date,string,LongInt);
external procedure DrawModifierButtons2_FAR(var integer,var integer);
external procedure OKCancel_FAR();
external procedure DefineElearningURLCacheLClass_FAR();
external procedure DefineElearningURLCacheDClass_FAR();
external function real TravelLogDeductions_FAR(real,real);
external procedure LoginButtons_FAR(Real);
external procedure FORMDEF2_FAR();
external procedure FORMDEF3_FAR();

// Language functions GER
external function Boolean DisplayLoginKeyPad_GER();
external function string 255 VATZoneEditFieldLabelGER(Integer);
external function real VATZoneButtonsLabelsGER(real,real,real,real);
external procedure LoginButtons2_GER(Real,Real);
external procedure FORMDEF_GER();
external function string 255 DemoMsgWClassTitle_GER(Boolean,Boolean);
external procedure TBEClassDef_GER();
external function string 255 VATZoneNameGER();
external procedure TSERW_GER();
external procedure TSERWNT_GER();
external procedure TSERWTouch_GER();
external procedure TSERWTEST_GER();
external procedure INVFORM_GER(Boolean);
external procedure DisplayRecordDetails_GER(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val,string,Boolean,string);
external procedure DrawPOSInterface_GER(string,string,record POSButtonsVc,Integer,string,Integer);
external procedure DisplayRecordDetailsCustDisplay_GER(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val);
external function string 255 ResDayWClassWindowTitle_GER();
external function string 255 ResMonWClassWindowTitle_GER();
external function string 255 RTMonWClassWindowTitle_GER();
external procedure SetupNightAuditWindowControls_GER(Boolean);
external procedure CURClassDefinitionGER();
external function real DrawPaymentModesButtons_IV_GER(real);
external function real FunctionButtons_GER(string);
external procedure CreditCardWindowHeader_GER(Boolean,Boolean,Real);
external procedure CreditCardWindowButtons_GER(string,string,real);
external procedure CreditCardWindowInvoiceDetail_GER(Real);
external procedure CreditCardWindowDeliveryDetail_GER(Real);
external function real DrawPaymentModesButtons_GER();
external procedure DrawBarMenuTiles_GER(string);
external procedure DrawRestPMOtherPay_GER();
external procedure DisplayRecordDetailsRA_GER(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,LongInt,Date,string,LongInt);
external procedure DrawModifierButtons2_GER(var integer,var integer);
external procedure OKCancel_GER();
external procedure DefineElearningURLCacheLClass_GER();
external procedure DefineElearningURLCacheDClass_GER();
external function real TravelLogDeductions_GER(real,real);
external procedure LoginButtons_GER(Real);
external procedure FORMDEF2_GER();
external procedure FORMDEF3_GER();

// Language functions HEB
external function Boolean DisplayLoginKeyPad_HEB();
external function string 255 VATZoneEditFieldLabelHEB(Integer);
external function real VATZoneButtonsLabelsHEB(real,real,real,real);
external procedure LoginButtons2_HEB(Real,Real);
external procedure FORMDEF_HEB();
external function string 255 DemoMsgWClassTitle_HEB(Boolean,Boolean);
external procedure TBEClassDef_HEB();
external function string 255 VATZoneNameHEB();
external procedure TSERW_HEB();
external procedure TSERWNT_HEB();
external procedure TSERWTouch_HEB();
external procedure TSERWTEST_HEB();
external procedure INVFORM_HEB(Boolean);
external procedure DisplayRecordDetails_HEB(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val,string,Boolean,string);
external procedure DrawPOSInterface_HEB(string,string,record POSButtonsVc,Integer,string,Integer);
external procedure DisplayRecordDetailsCustDisplay_HEB(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val);
external function string 255 ResDayWClassWindowTitle_HEB();
external function string 255 ResMonWClassWindowTitle_HEB();
external function string 255 RTMonWClassWindowTitle_HEB();
external procedure SetupNightAuditWindowControls_HEB(Boolean);
external procedure CURClassDefinitionHEB();
external function real DrawPaymentModesButtons_IV_HEB(real);
external function real FunctionButtons_HEB(string);
external procedure CreditCardWindowHeader_HEB(Boolean,Boolean,Real);
external procedure CreditCardWindowButtons_HEB(string,string,real);
external procedure CreditCardWindowInvoiceDetail_HEB(Real);
external procedure CreditCardWindowDeliveryDetail_HEB(Real);
external function real DrawPaymentModesButtons_HEB();
external procedure DrawBarMenuTiles_HEB(string);
external procedure DrawRestPMOtherPay_HEB();
external procedure DisplayRecordDetailsRA_HEB(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,LongInt,Date,string,LongInt);
external procedure DrawModifierButtons2_HEB(var integer,var integer);
external procedure OKCancel_HEB();
external procedure DefineElearningURLCacheLClass_HEB();
external procedure DefineElearningURLCacheDClass_HEB();
external function real TravelLogDeductions_HEB(real,real);
external procedure LoginButtons_HEB(Real);
external procedure FORMDEF2_HEB();
external procedure FORMDEF3_HEB();

// Language functions HUN
external function Boolean DisplayLoginKeyPad_HUN();
external function string 255 VATZoneEditFieldLabelHUN(Integer);
external function real VATZoneButtonsLabelsHUN(real,real,real,real);
external procedure LoginButtons2_HUN(Real,Real);
external procedure FORMDEF_HUN();
external function string 255 DemoMsgWClassTitle_HUN(Boolean,Boolean);
external procedure TBEClassDef_HUN();
external function string 255 VATZoneNameHUN();
external procedure TSERW_HUN();
external procedure TSERWNT_HUN();
external procedure TSERWTouch_HUN();
external procedure TSERWTEST_HUN();
external procedure INVFORM_HUN(Boolean);
external procedure DisplayRecordDetails_HUN(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val,string,Boolean,string);
external procedure DrawPOSInterface_HUN(string,string,record POSButtonsVc,Integer,string,Integer);
external procedure DisplayRecordDetailsCustDisplay_HUN(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val);
external function string 255 ResDayWClassWindowTitle_HUN();
external function string 255 ResMonWClassWindowTitle_HUN();
external function string 255 RTMonWClassWindowTitle_HUN();
external procedure SetupNightAuditWindowControls_HUN(Boolean);
external procedure CURClassDefinitionHUN();
external function real DrawPaymentModesButtons_IV_HUN(real);
external function real FunctionButtons_HUN(string);
external procedure CreditCardWindowHeader_HUN(Boolean,Boolean,Real);
external procedure CreditCardWindowButtons_HUN(string,string,real);
external procedure CreditCardWindowInvoiceDetail_HUN(Real);
external procedure CreditCardWindowDeliveryDetail_HUN(Real);
external function real DrawPaymentModesButtons_HUN();
external procedure DrawBarMenuTiles_HUN(string);
external procedure DrawRestPMOtherPay_HUN();
external procedure DisplayRecordDetailsRA_HUN(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,LongInt,Date,string,LongInt);
external procedure DrawModifierButtons2_HUN(var integer,var integer);
external procedure OKCancel_HUN();
external procedure DefineElearningURLCacheLClass_HUN();
external procedure DefineElearningURLCacheDClass_HUN();
external function real TravelLogDeductions_HUN(real,real);
external procedure LoginButtons_HUN(Real);
external procedure FORMDEF2_HUN();
external procedure FORMDEF3_HUN();

// Language functions ICE
external function Boolean DisplayLoginKeyPad_ICE();
external function string 255 VATZoneEditFieldLabelICE(Integer);
external function real VATZoneButtonsLabelsICE(real,real,real,real);
external procedure LoginButtons2_ICE(Real,Real);
external procedure FORMDEF_ICE();
external function string 255 DemoMsgWClassTitle_ICE(Boolean,Boolean);
external procedure TBEClassDef_ICE();
external function string 255 VATZoneNameICE();
external procedure TSERW_ICE();
external procedure TSERWNT_ICE();
external procedure TSERWTouch_ICE();
external procedure TSERWTEST_ICE();
external procedure INVFORM_ICE(Boolean);
external procedure DisplayRecordDetails_ICE(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val,string,Boolean,string);
external procedure DrawPOSInterface_ICE(string,string,record POSButtonsVc,Integer,string,Integer);
external procedure DisplayRecordDetailsCustDisplay_ICE(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val);
external function string 255 ResDayWClassWindowTitle_ICE();
external function string 255 ResMonWClassWindowTitle_ICE();
external function string 255 RTMonWClassWindowTitle_ICE();
external procedure SetupNightAuditWindowControls_ICE(Boolean);
external procedure CURClassDefinitionICE();
external function real DrawPaymentModesButtons_IV_ICE(real);
external function real FunctionButtons_ICE(string);
external procedure CreditCardWindowHeader_ICE(Boolean,Boolean,Real);
external procedure CreditCardWindowButtons_ICE(string,string,real);
external procedure CreditCardWindowInvoiceDetail_ICE(Real);
external procedure CreditCardWindowDeliveryDetail_ICE(Real);
external function real DrawPaymentModesButtons_ICE();
external procedure DrawBarMenuTiles_ICE(string);
external procedure DrawRestPMOtherPay_ICE();
external procedure DisplayRecordDetailsRA_ICE(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,LongInt,Date,string,LongInt);
external procedure DrawModifierButtons2_ICE(var integer,var integer);
external procedure OKCancel_ICE();
external procedure DefineElearningURLCacheLClass_ICE();
external procedure DefineElearningURLCacheDClass_ICE();
external function real TravelLogDeductions_ICE(real,real);
external procedure LoginButtons_ICE(Real);
external procedure FORMDEF2_ICE();
external procedure FORMDEF3_ICE();

// Language functions ITA
external function Boolean DisplayLoginKeyPad_ITA();
external function string 255 VATZoneEditFieldLabelITA(Integer);
external function real VATZoneButtonsLabelsITA(real,real,real,real);
external procedure LoginButtons2_ITA(Real,Real);
external procedure FORMDEF_ITA();
external function string 255 DemoMsgWClassTitle_ITA(Boolean,Boolean);
external procedure TBEClassDef_ITA();
external function string 255 VATZoneNameITA();
external procedure TSERW_ITA();
external procedure TSERWNT_ITA();
external procedure TSERWTouch_ITA();
external procedure TSERWTEST_ITA();
external procedure INVFORM_ITA(Boolean);
external procedure DisplayRecordDetails_ITA(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val,string,Boolean,string);
external procedure DrawPOSInterface_ITA(string,string,record POSButtonsVc,Integer,string,Integer);
external procedure DisplayRecordDetailsCustDisplay_ITA(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val);
external function string 255 ResDayWClassWindowTitle_ITA();
external function string 255 ResMonWClassWindowTitle_ITA();
external function string 255 RTMonWClassWindowTitle_ITA();
external procedure SetupNightAuditWindowControls_ITA(Boolean);
external procedure CURClassDefinitionITA();
external function real DrawPaymentModesButtons_IV_ITA(real);
external function real FunctionButtons_ITA(string);
external procedure CreditCardWindowHeader_ITA(Boolean,Boolean,Real);
external procedure CreditCardWindowButtons_ITA(string,string,real);
external procedure CreditCardWindowInvoiceDetail_ITA(Real);
external procedure CreditCardWindowDeliveryDetail_ITA(Real);
external function real DrawPaymentModesButtons_ITA();
external procedure DrawBarMenuTiles_ITA(string);
external procedure DrawRestPMOtherPay_ITA();
external procedure DisplayRecordDetailsRA_ITA(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,LongInt,Date,string,LongInt);
external procedure DrawModifierButtons2_ITA(var integer,var integer);
external procedure OKCancel_ITA();
external procedure DefineElearningURLCacheLClass_ITA();
external procedure DefineElearningURLCacheDClass_ITA();
external function real TravelLogDeductions_ITA(real,real);
external procedure LoginButtons_ITA(Real);
external procedure FORMDEF2_ITA();
external procedure FORMDEF3_ITA();

// Language functions KEE
external function Boolean DisplayLoginKeyPad_KEE();
external function string 255 VATZoneEditFieldLabelKEE(Integer);
external function real VATZoneButtonsLabelsKEE(real,real,real,real);
external procedure LoginButtons2_KEE(Real,Real);
external procedure FORMDEF_KEE();
external function string 255 DemoMsgWClassTitle_KEE(Boolean,Boolean);
external procedure TBEClassDef_KEE();
external function string 255 VATZoneNameKEE();
external procedure TSERW_KEE();
external procedure TSERWNT_KEE();
external procedure TSERWTouch_KEE();
external procedure TSERWTEST_KEE();
external procedure INVFORM_KEE(Boolean);
external procedure DisplayRecordDetails_KEE(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val,string,Boolean,string);
external procedure DrawPOSInterface_KEE(string,string,record POSButtonsVc,Integer,string,Integer);
external procedure DisplayRecordDetailsCustDisplay_KEE(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val);
external function string 255 ResDayWClassWindowTitle_KEE();
external function string 255 ResMonWClassWindowTitle_KEE();
external function string 255 RTMonWClassWindowTitle_KEE();
external procedure SetupNightAuditWindowControls_KEE(Boolean);
external procedure CURClassDefinitionKEE();
external function real DrawPaymentModesButtons_IV_KEE(real);
external function real FunctionButtons_KEE(string);
external procedure CreditCardWindowHeader_KEE(Boolean,Boolean,Real);
external procedure CreditCardWindowButtons_KEE(string,string,real);
external procedure CreditCardWindowInvoiceDetail_KEE(Real);
external procedure CreditCardWindowDeliveryDetail_KEE(Real);
external function real DrawPaymentModesButtons_KEE();
external procedure DrawBarMenuTiles_KEE(string);
external procedure DrawRestPMOtherPay_KEE();
external procedure DisplayRecordDetailsRA_KEE(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,LongInt,Date,string,LongInt);
external procedure DrawModifierButtons2_KEE(var integer,var integer);
external procedure OKCancel_KEE();
external procedure DefineElearningURLCacheLClass_KEE();
external procedure DefineElearningURLCacheDClass_KEE();
external function real TravelLogDeductions_KEE(real,real);
external procedure LoginButtons_KEE(Real);
external procedure FORMDEF2_KEE();
external procedure FORMDEF3_KEE();

// Language functions LAT
external function Boolean DisplayLoginKeyPad_LAT();
external function string 255 VATZoneEditFieldLabelLAT(Integer);
external function real VATZoneButtonsLabelsLAT(real,real,real,real);
external procedure LoginButtons2_LAT(Real,Real);
external procedure FORMDEF_LAT();
external function string 255 DemoMsgWClassTitle_LAT(Boolean,Boolean);
external procedure TBEClassDef_LAT();
external function string 255 VATZoneNameLAT();
external procedure TSERW_LAT();
external procedure TSERWNT_LAT();
external procedure TSERWTouch_LAT();
external procedure TSERWTEST_LAT();
external procedure INVFORM_LAT(Boolean);
external procedure DisplayRecordDetails_LAT(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val,string,Boolean,string);
external procedure DrawPOSInterface_LAT(string,string,record POSButtonsVc,Integer,string,Integer);
external procedure DisplayRecordDetailsCustDisplay_LAT(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val);
external function string 255 ResDayWClassWindowTitle_LAT();
external function string 255 ResMonWClassWindowTitle_LAT();
external function string 255 RTMonWClassWindowTitle_LAT();
external procedure SetupNightAuditWindowControls_LAT(Boolean);
external procedure CURClassDefinitionLAT();
external function real DrawPaymentModesButtons_IV_LAT(real);
external function real FunctionButtons_LAT(string);
external procedure CreditCardWindowHeader_LAT(Boolean,Boolean,Real);
external procedure CreditCardWindowButtons_LAT(string,string,real);
external procedure CreditCardWindowInvoiceDetail_LAT(Real);
external procedure CreditCardWindowDeliveryDetail_LAT(Real);
external function real DrawPaymentModesButtons_LAT();
external procedure DrawBarMenuTiles_LAT(string);
external procedure DrawRestPMOtherPay_LAT();
external procedure DisplayRecordDetailsRA_LAT(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,LongInt,Date,string,LongInt);
external procedure DrawModifierButtons2_LAT(var integer,var integer);
external procedure OKCancel_LAT();
external procedure DefineElearningURLCacheLClass_LAT();
external procedure DefineElearningURLCacheDClass_LAT();
external function real TravelLogDeductions_LAT(real,real);
external procedure LoginButtons_LAT(Real);
external procedure FORMDEF2_LAT();
external procedure FORMDEF3_LAT();

// Language functions LIT
external function Boolean DisplayLoginKeyPad_LIT();
external function string 255 VATZoneEditFieldLabelLIT(Integer);
external function real VATZoneButtonsLabelsLIT(real,real,real,real);
external procedure LoginButtons2_LIT(Real,Real);
external procedure FORMDEF_LIT();
external function string 255 DemoMsgWClassTitle_LIT(Boolean,Boolean);
external procedure TBEClassDef_LIT();
external function string 255 VATZoneNameLIT();
external procedure TSERW_LIT();
external procedure TSERWNT_LIT();
external procedure TSERWTouch_LIT();
external procedure TSERWTEST_LIT();
external procedure INVFORM_LIT(Boolean);
external procedure DisplayRecordDetails_LIT(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val,string,Boolean,string);
external procedure DrawPOSInterface_LIT(string,string,record POSButtonsVc,Integer,string,Integer);
external procedure DisplayRecordDetailsCustDisplay_LIT(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val);
external function string 255 ResDayWClassWindowTitle_LIT();
external function string 255 ResMonWClassWindowTitle_LIT();
external function string 255 RTMonWClassWindowTitle_LIT();
external procedure SetupNightAuditWindowControls_LIT(Boolean);
external procedure CURClassDefinitionLIT();
external function real DrawPaymentModesButtons_IV_LIT(real);
external function real FunctionButtons_LIT(string);
external procedure CreditCardWindowHeader_LIT(Boolean,Boolean,Real);
external procedure CreditCardWindowButtons_LIT(string,string,real);
external procedure CreditCardWindowInvoiceDetail_LIT(Real);
external procedure CreditCardWindowDeliveryDetail_LIT(Real);
external function real DrawPaymentModesButtons_LIT();
external procedure DrawBarMenuTiles_LIT(string);
external procedure DrawRestPMOtherPay_LIT();
external procedure DisplayRecordDetailsRA_LIT(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,LongInt,Date,string,LongInt);
external procedure DrawModifierButtons2_LIT(var integer,var integer);
external procedure OKCancel_LIT();
external procedure DefineElearningURLCacheLClass_LIT();
external procedure DefineElearningURLCacheDClass_LIT();
external function real TravelLogDeductions_LIT(real,real);
external procedure LoginButtons_LIT(Real);
external procedure FORMDEF2_LIT();
external procedure FORMDEF3_LIT();

// Language functions NOR
external function Boolean DisplayLoginKeyPad_NOR();
external function string 255 VATZoneEditFieldLabelNOR(Integer);
external function real VATZoneButtonsLabelsNOR(real,real,real,real);
external procedure LoginButtons2_NOR(Real,Real);
external procedure FORMDEF_NOR();
external function string 255 DemoMsgWClassTitle_NOR(Boolean,Boolean);
external procedure TBEClassDef_NOR();
external function string 255 VATZoneNameNOR();
external procedure TSERW_NOR();
external procedure TSERWNT_NOR();
external procedure TSERWTouch_NOR();
external procedure TSERWTEST_NOR();
external procedure INVFORM_NOR(Boolean);
external procedure DisplayRecordDetails_NOR(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val,string,Boolean,string);
external procedure DrawPOSInterface_NOR(string,string,record POSButtonsVc,Integer,string,Integer);
external procedure DisplayRecordDetailsCustDisplay_NOR(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val);
external function string 255 ResDayWClassWindowTitle_NOR();
external function string 255 ResMonWClassWindowTitle_NOR();
external function string 255 RTMonWClassWindowTitle_NOR();
external procedure SetupNightAuditWindowControls_NOR(Boolean);
external procedure CURClassDefinitionNOR();
external function real DrawPaymentModesButtons_IV_NOR(real);
external function real FunctionButtons_NOR(string);
external procedure CreditCardWindowHeader_NOR(Boolean,Boolean,Real);
external procedure CreditCardWindowButtons_NOR(string,string,real);
external procedure CreditCardWindowInvoiceDetail_NOR(Real);
external procedure CreditCardWindowDeliveryDetail_NOR(Real);
external function real DrawPaymentModesButtons_NOR();
external procedure DrawBarMenuTiles_NOR(string);
external procedure DrawRestPMOtherPay_NOR();
external procedure DisplayRecordDetailsRA_NOR(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,LongInt,Date,string,LongInt);
external procedure DrawModifierButtons2_NOR(var integer,var integer);
external procedure OKCancel_NOR();
external procedure DefineElearningURLCacheLClass_NOR();
external procedure DefineElearningURLCacheDClass_NOR();
external function real TravelLogDeductions_NOR(real,real);
external procedure LoginButtons_NOR(Real);
external procedure FORMDEF2_NOR();
external procedure FORMDEF3_NOR();

// Language functions NZE
external function Boolean DisplayLoginKeyPad_NZE();
external function string 255 VATZoneEditFieldLabelNZE(Integer);
external function real VATZoneButtonsLabelsNZE(real,real,real,real);
external procedure LoginButtons2_NZE(Real,Real);
external procedure FORMDEF_NZE();
external function string 255 DemoMsgWClassTitle_NZE(Boolean,Boolean);
external procedure TBEClassDef_NZE();
external function string 255 VATZoneNameNZE();
external procedure TSERW_NZE();
external procedure TSERWNT_NZE();
external procedure TSERWTouch_NZE();
external procedure TSERWTEST_NZE();
external procedure INVFORM_NZE(Boolean);
external procedure DisplayRecordDetails_NZE(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val,string,Boolean,string);
external procedure DrawPOSInterface_NZE(string,string,record POSButtonsVc,Integer,string,Integer);
external procedure DisplayRecordDetailsCustDisplay_NZE(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val);
external function string 255 ResDayWClassWindowTitle_NZE();
external function string 255 ResMonWClassWindowTitle_NZE();
external function string 255 RTMonWClassWindowTitle_NZE();
external procedure SetupNightAuditWindowControls_NZE(Boolean);
external procedure CURClassDefinitionNZE();
external function real DrawPaymentModesButtons_IV_NZE(real);
external function real FunctionButtons_NZE(string);
external procedure CreditCardWindowHeader_NZE(Boolean,Boolean,Real);
external procedure CreditCardWindowButtons_NZE(string,string,real);
external procedure CreditCardWindowInvoiceDetail_NZE(Real);
external procedure CreditCardWindowDeliveryDetail_NZE(Real);
external function real DrawPaymentModesButtons_NZE();
external procedure DrawBarMenuTiles_NZE(string);
external procedure DrawRestPMOtherPay_NZE();
external procedure DisplayRecordDetailsRA_NZE(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,LongInt,Date,string,LongInt);
external procedure DrawModifierButtons2_NZE(var integer,var integer);
external procedure OKCancel_NZE();
external procedure DefineElearningURLCacheLClass_NZE();
external procedure DefineElearningURLCacheDClass_NZE();
external function real TravelLogDeductions_NZE(real,real);
external procedure LoginButtons_NZE(Real);
external procedure FORMDEF2_NZE();
external procedure FORMDEF3_NZE();

// Language functions PHE
external function Boolean DisplayLoginKeyPad_PHE();
external function string 255 VATZoneEditFieldLabelPHE(Integer);
external function real VATZoneButtonsLabelsPHE(real,real,real,real);
external procedure LoginButtons2_PHE(Real,Real);
external procedure FORMDEF_PHE();
external function string 255 DemoMsgWClassTitle_PHE(Boolean,Boolean);
external procedure TBEClassDef_PHE();
external function string 255 VATZoneNamePHE();
external procedure TSERW_PHE();
external procedure TSERWNT_PHE();
external procedure TSERWTouch_PHE();
external procedure TSERWTEST_PHE();
external procedure INVFORM_PHE(Boolean);
external procedure DisplayRecordDetails_PHE(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val,string,Boolean,string);
external procedure DrawPOSInterface_PHE(string,string,record POSButtonsVc,Integer,string,Integer);
external procedure DisplayRecordDetailsCustDisplay_PHE(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val);
external function string 255 ResDayWClassWindowTitle_PHE();
external function string 255 ResMonWClassWindowTitle_PHE();
external function string 255 RTMonWClassWindowTitle_PHE();
external procedure SetupNightAuditWindowControls_PHE(Boolean);
external procedure CURClassDefinitionPHE();
external function real DrawPaymentModesButtons_IV_PHE(real);
external function real FunctionButtons_PHE(string);
external procedure CreditCardWindowHeader_PHE(Boolean,Boolean,Real);
external procedure CreditCardWindowButtons_PHE(string,string,real);
external procedure CreditCardWindowInvoiceDetail_PHE(Real);
external procedure CreditCardWindowDeliveryDetail_PHE(Real);
external function real DrawPaymentModesButtons_PHE();
external procedure DrawBarMenuTiles_PHE(string);
external procedure DrawRestPMOtherPay_PHE();
external procedure DisplayRecordDetailsRA_PHE(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,LongInt,Date,string,LongInt);
external procedure DrawModifierButtons2_PHE(var integer,var integer);
external procedure OKCancel_PHE();
external procedure DefineElearningURLCacheLClass_PHE();
external procedure DefineElearningURLCacheDClass_PHE();
external function real TravelLogDeductions_PHE(real,real);
external procedure LoginButtons_PHE(Real);
external procedure FORMDEF2_PHE();
external procedure FORMDEF3_PHE();

// Language functions POL
external function Boolean DisplayLoginKeyPad_POL();
external function string 255 VATZoneEditFieldLabelPOL(Integer);
external function real VATZoneButtonsLabelsPOL(real,real,real,real);
external procedure LoginButtons2_POL(Real,Real);
external procedure FORMDEF_POL();
external function string 255 DemoMsgWClassTitle_POL(Boolean,Boolean);
external procedure TBEClassDef_POL();
external function string 255 VATZoneNamePOL();
external procedure TSERW_POL();
external procedure TSERWNT_POL();
external procedure TSERWTouch_POL();
external procedure TSERWTEST_POL();
external procedure INVFORM_POL(Boolean);
external procedure DisplayRecordDetails_POL(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val,string,Boolean,string);
external procedure DrawPOSInterface_POL(string,string,record POSButtonsVc,Integer,string,Integer);
external procedure DisplayRecordDetailsCustDisplay_POL(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val);
external function string 255 ResDayWClassWindowTitle_POL();
external function string 255 ResMonWClassWindowTitle_POL();
external function string 255 RTMonWClassWindowTitle_POL();
external procedure SetupNightAuditWindowControls_POL(Boolean);
external procedure CURClassDefinitionPOL();
external function real DrawPaymentModesButtons_IV_POL(real);
external function real FunctionButtons_POL(string);
external procedure CreditCardWindowHeader_POL(Boolean,Boolean,Real);
external procedure CreditCardWindowButtons_POL(string,string,real);
external procedure CreditCardWindowInvoiceDetail_POL(Real);
external procedure CreditCardWindowDeliveryDetail_POL(Real);
external function real DrawPaymentModesButtons_POL();
external procedure DrawBarMenuTiles_POL(string);
external procedure DrawRestPMOtherPay_POL();
external procedure DisplayRecordDetailsRA_POL(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,LongInt,Date,string,LongInt);
external procedure DrawModifierButtons2_POL(var integer,var integer);
external procedure OKCancel_POL();
external procedure DefineElearningURLCacheLClass_POL();
external procedure DefineElearningURLCacheDClass_POL();
external function real TravelLogDeductions_POL(real,real);
external procedure LoginButtons_POL(Real);
external procedure FORMDEF2_POL();
external procedure FORMDEF3_POL();

// Language functions POR
external function Boolean DisplayLoginKeyPad_POR();
external function string 255 VATZoneEditFieldLabelPOR(Integer);
external function real VATZoneButtonsLabelsPOR(real,real,real,real);
external procedure LoginButtons2_POR(Real,Real);
external procedure FORMDEF_POR();
external function string 255 DemoMsgWClassTitle_POR(Boolean,Boolean);
external procedure TBEClassDef_POR();
external function string 255 VATZoneNamePOR();
external procedure TSERW_POR();
external procedure TSERWNT_POR();
external procedure TSERWTouch_POR();
external procedure TSERWTEST_POR();
external procedure INVFORM_POR(Boolean);
external procedure DisplayRecordDetails_POR(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val,string,Boolean,string);
external procedure DrawPOSInterface_POR(string,string,record POSButtonsVc,Integer,string,Integer);
external procedure DisplayRecordDetailsCustDisplay_POR(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val);
external function string 255 ResDayWClassWindowTitle_POR();
external function string 255 ResMonWClassWindowTitle_POR();
external function string 255 RTMonWClassWindowTitle_POR();
external procedure SetupNightAuditWindowControls_POR(Boolean);
external procedure CURClassDefinitionPOR();
external function real DrawPaymentModesButtons_IV_POR(real);
external function real FunctionButtons_POR(string);
external procedure CreditCardWindowHeader_POR(Boolean,Boolean,Real);
external procedure CreditCardWindowButtons_POR(string,string,real);
external procedure CreditCardWindowInvoiceDetail_POR(Real);
external procedure CreditCardWindowDeliveryDetail_POR(Real);
external function real DrawPaymentModesButtons_POR();
external procedure DrawBarMenuTiles_POR(string);
external procedure DrawRestPMOtherPay_POR();
external procedure DisplayRecordDetailsRA_POR(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,LongInt,Date,string,LongInt);
external procedure DrawModifierButtons2_POR(var integer,var integer);
external procedure OKCancel_POR();
external procedure DefineElearningURLCacheLClass_POR();
external procedure DefineElearningURLCacheDClass_POR();
external function real TravelLogDeductions_POR(real,real);
external procedure LoginButtons_POR(Real);
external procedure FORMDEF2_POR();
external procedure FORMDEF3_POR();

// Language functions ROM
external function Boolean DisplayLoginKeyPad_ROM();
external function string 255 VATZoneEditFieldLabelROM(Integer);
external function real VATZoneButtonsLabelsROM(real,real,real,real);
external procedure LoginButtons2_ROM(Real,Real);
external procedure FORMDEF_ROM();
external function string 255 DemoMsgWClassTitle_ROM(Boolean,Boolean);
external procedure TBEClassDef_ROM();
external function string 255 VATZoneNameROM();
external procedure TSERW_ROM();
external procedure TSERWNT_ROM();
external procedure TSERWTouch_ROM();
external procedure TSERWTEST_ROM();
external procedure INVFORM_ROM(Boolean);
external procedure DisplayRecordDetails_ROM(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val,string,Boolean,string);
external procedure DrawPOSInterface_ROM(string,string,record POSButtonsVc,Integer,string,Integer);
external procedure DisplayRecordDetailsCustDisplay_ROM(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val);
external function string 255 ResDayWClassWindowTitle_ROM();
external function string 255 ResMonWClassWindowTitle_ROM();
external function string 255 RTMonWClassWindowTitle_ROM();
external procedure SetupNightAuditWindowControls_ROM(Boolean);
external procedure CURClassDefinitionROM();
external function real DrawPaymentModesButtons_IV_ROM(real);
external function real FunctionButtons_ROM(string);
external procedure CreditCardWindowHeader_ROM(Boolean,Boolean,Real);
external procedure CreditCardWindowButtons_ROM(string,string,real);
external procedure CreditCardWindowInvoiceDetail_ROM(Real);
external procedure CreditCardWindowDeliveryDetail_ROM(Real);
external function real DrawPaymentModesButtons_ROM();
external procedure DrawBarMenuTiles_ROM(string);
external procedure DrawRestPMOtherPay_ROM();
external procedure DisplayRecordDetailsRA_ROM(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,LongInt,Date,string,LongInt);
external procedure DrawModifierButtons2_ROM(var integer,var integer);
external procedure OKCancel_ROM();
external procedure DefineElearningURLCacheLClass_ROM();
external procedure DefineElearningURLCacheDClass_ROM();
external function real TravelLogDeductions_ROM(real,real);
external procedure LoginButtons_ROM(Real);
external procedure FORMDEF2_ROM();
external procedure FORMDEF3_ROM();

// Language functions RUS
external function Boolean DisplayLoginKeyPad_RUS();
external function string 255 VATZoneEditFieldLabelRUS(Integer);
external function real VATZoneButtonsLabelsRUS(real,real,real,real);
external procedure LoginButtons2_RUS(Real,Real);
external procedure FORMDEF_RUS();
external function string 255 DemoMsgWClassTitle_RUS(Boolean,Boolean);
external procedure TBEClassDef_RUS();
external function string 255 VATZoneNameRUS();
external procedure TSERW_RUS();
external procedure TSERWNT_RUS();
external procedure TSERWTouch_RUS();
external procedure TSERWTEST_RUS();
external procedure INVFORM_RUS(Boolean);
external procedure DisplayRecordDetails_RUS(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val,string,Boolean,string);
external procedure DrawPOSInterface_RUS(string,string,record POSButtonsVc,Integer,string,Integer);
external procedure DisplayRecordDetailsCustDisplay_RUS(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val);
external function string 255 ResDayWClassWindowTitle_RUS();
external function string 255 ResMonWClassWindowTitle_RUS();
external function string 255 RTMonWClassWindowTitle_RUS();
external procedure SetupNightAuditWindowControls_RUS(Boolean);
external procedure CURClassDefinitionRUS();
external function real DrawPaymentModesButtons_IV_RUS(real);
external function real FunctionButtons_RUS(string);
external procedure CreditCardWindowHeader_RUS(Boolean,Boolean,Real);
external procedure CreditCardWindowButtons_RUS(string,string,real);
external procedure CreditCardWindowInvoiceDetail_RUS(Real);
external procedure CreditCardWindowDeliveryDetail_RUS(Real);
external function real DrawPaymentModesButtons_RUS();
external procedure DrawBarMenuTiles_RUS(string);
external procedure DrawRestPMOtherPay_RUS();
external procedure DisplayRecordDetailsRA_RUS(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,LongInt,Date,string,LongInt);
external procedure DrawModifierButtons2_RUS(var integer,var integer);
external procedure OKCancel_RUS();
external procedure DefineElearningURLCacheLClass_RUS();
external procedure DefineElearningURLCacheDClass_RUS();
external function real TravelLogDeductions_RUS(real,real);
external procedure LoginButtons_RUS(Real);
external procedure FORMDEF2_RUS();
external procedure FORMDEF3_RUS();

// Language functions SAF
external function Boolean DisplayLoginKeyPad_SAF();
external function string 255 VATZoneEditFieldLabelSAF(Integer);
external function real VATZoneButtonsLabelsSAF(real,real,real,real);
external procedure LoginButtons2_SAF(Real,Real);
external procedure FORMDEF_SAF();
external function string 255 DemoMsgWClassTitle_SAF(Boolean,Boolean);
external procedure TBEClassDef_SAF();
external function string 255 VATZoneNameSAF();
external procedure TSERW_SAF();
external procedure TSERWNT_SAF();
external procedure TSERWTouch_SAF();
external procedure TSERWTEST_SAF();
external procedure INVFORM_SAF(Boolean);
external procedure DisplayRecordDetails_SAF(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val,string,Boolean,string);
external procedure DrawPOSInterface_SAF(string,string,record POSButtonsVc,Integer,string,Integer);
external procedure DisplayRecordDetailsCustDisplay_SAF(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val);
external function string 255 ResDayWClassWindowTitle_SAF();
external function string 255 ResMonWClassWindowTitle_SAF();
external function string 255 RTMonWClassWindowTitle_SAF();
external procedure SetupNightAuditWindowControls_SAF(Boolean);
external procedure CURClassDefinitionSAF();
external function real DrawPaymentModesButtons_IV_SAF(real);
external function real FunctionButtons_SAF(string);
external procedure CreditCardWindowHeader_SAF(Boolean,Boolean,Real);
external procedure CreditCardWindowButtons_SAF(string,string,real);
external procedure CreditCardWindowInvoiceDetail_SAF(Real);
external procedure CreditCardWindowDeliveryDetail_SAF(Real);
external function real DrawPaymentModesButtons_SAF();
external procedure DrawBarMenuTiles_SAF(string);
external procedure DrawRestPMOtherPay_SAF();
external procedure DisplayRecordDetailsRA_SAF(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,LongInt,Date,string,LongInt);
external procedure DrawModifierButtons2_SAF(var integer,var integer);
external procedure OKCancel_SAF();
external procedure DefineElearningURLCacheLClass_SAF();
external procedure DefineElearningURLCacheDClass_SAF();
external function real TravelLogDeductions_SAF(real,real);
external procedure LoginButtons_SAF(Real);
external procedure FORMDEF2_SAF();
external procedure FORMDEF3_SAF();

// Language functions SER
external function Boolean DisplayLoginKeyPad_SER();
external function string 255 VATZoneEditFieldLabelSER(Integer);
external function real VATZoneButtonsLabelsSER(real,real,real,real);
external procedure LoginButtons2_SER(Real,Real);
external procedure FORMDEF_SER();
external function string 255 DemoMsgWClassTitle_SER(Boolean,Boolean);
external procedure TBEClassDef_SER();
external function string 255 VATZoneNameSER();
external procedure TSERW_SER();
external procedure TSERWNT_SER();
external procedure TSERWTouch_SER();
external procedure TSERWTEST_SER();
external procedure INVFORM_SER(Boolean);
external procedure DisplayRecordDetails_SER(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val,string,Boolean,string);
external procedure DrawPOSInterface_SER(string,string,record POSButtonsVc,Integer,string,Integer);
external procedure DisplayRecordDetailsCustDisplay_SER(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val);
external function string 255 ResDayWClassWindowTitle_SER();
external function string 255 ResMonWClassWindowTitle_SER();
external function string 255 RTMonWClassWindowTitle_SER();
external procedure SetupNightAuditWindowControls_SER(Boolean);
external procedure CURClassDefinitionSER();
external function real DrawPaymentModesButtons_IV_SER(real);
external function real FunctionButtons_SER(string);
external procedure CreditCardWindowHeader_SER(Boolean,Boolean,Real);
external procedure CreditCardWindowButtons_SER(string,string,real);
external procedure CreditCardWindowInvoiceDetail_SER(Real);
external procedure CreditCardWindowDeliveryDetail_SER(Real);
external function real DrawPaymentModesButtons_SER();
external procedure DrawBarMenuTiles_SER(string);
external procedure DrawRestPMOtherPay_SER();
external procedure DisplayRecordDetailsRA_SER(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,LongInt,Date,string,LongInt);
external procedure DrawModifierButtons2_SER(var integer,var integer);
external procedure OKCancel_SER();
external procedure DefineElearningURLCacheLClass_SER();
external procedure DefineElearningURLCacheDClass_SER();
external function real TravelLogDeductions_SER(real,real);
external procedure LoginButtons_SER(Real);
external procedure FORMDEF2_SER();
external procedure FORMDEF3_SER();

// Language functions SWE
external function Boolean DisplayLoginKeyPad_SWE();
external function string 255 VATZoneEditFieldLabelSWE(Integer);
external function real VATZoneButtonsLabelsSWE(real,real,real,real);
external procedure LoginButtons2_SWE(Real,Real);
external procedure FORMDEF_SWE();
external function string 255 DemoMsgWClassTitle_SWE(Boolean,Boolean);
external procedure TBEClassDef_SWE();
external function string 255 VATZoneNameSWE();
external procedure TSERW_SWE();
external procedure TSERWNT_SWE();
external procedure TSERWTouch_SWE();
external procedure TSERWTEST_SWE();
external procedure INVFORM_SWE(Boolean);
external procedure DisplayRecordDetails_SWE(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val,string,Boolean,string);
external procedure DrawPOSInterface_SWE(string,string,record POSButtonsVc,Integer,string,Integer);
external procedure DisplayRecordDetailsCustDisplay_SWE(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val);
external function string 255 ResDayWClassWindowTitle_SWE();
external function string 255 ResMonWClassWindowTitle_SWE();
external function string 255 RTMonWClassWindowTitle_SWE();
external procedure SetupNightAuditWindowControls_SWE(Boolean);
external procedure CURClassDefinitionSWE();
external function real DrawPaymentModesButtons_IV_SWE(real);
external function real FunctionButtons_SWE(string);
external procedure CreditCardWindowHeader_SWE(Boolean,Boolean,Real);
external procedure CreditCardWindowButtons_SWE(string,string,real);
external procedure CreditCardWindowInvoiceDetail_SWE(Real);
external procedure CreditCardWindowDeliveryDetail_SWE(Real);
external function real DrawPaymentModesButtons_SWE();
external procedure DrawBarMenuTiles_SWE(string);
external procedure DrawRestPMOtherPay_SWE();
external procedure DisplayRecordDetailsRA_SWE(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,LongInt,Date,string,LongInt);
external procedure DrawModifierButtons2_SWE(var integer,var integer);
external procedure OKCancel_SWE();
external procedure DefineElearningURLCacheLClass_SWE();
external procedure DefineElearningURLCacheDClass_SWE();
external function real TravelLogDeductions_SWE(real,real);
external procedure LoginButtons_SWE(Real);
external procedure FORMDEF2_SWE();
external procedure FORMDEF3_SWE();

// Language functions SLO
external function Boolean DisplayLoginKeyPad_SLO();
external function string 255 VATZoneEditFieldLabelSLO(Integer);
external function real VATZoneButtonsLabelsSLO(real,real,real,real);
external procedure LoginButtons2_SLO(Real,Real);
external procedure FORMDEF_SLO();
external function string 255 DemoMsgWClassTitle_SLO(Boolean,Boolean);
external procedure TBEClassDef_SLO();
external function string 255 VATZoneNameSLO();
external procedure TSERW_SLO();
external procedure TSERWNT_SLO();
external procedure TSERWTouch_SLO();
external procedure TSERWTEST_SLO();
external procedure INVFORM_SLO(Boolean);
external procedure DisplayRecordDetails_SLO(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val,string,Boolean,string);
external procedure DrawPOSInterface_SLO(string,string,record POSButtonsVc,Integer,string,Integer);
external procedure DisplayRecordDetailsCustDisplay_SLO(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val);
external function string 255 ResDayWClassWindowTitle_SLO();
external function string 255 ResMonWClassWindowTitle_SLO();
external function string 255 RTMonWClassWindowTitle_SLO();
external procedure SetupNightAuditWindowControls_SLO(Boolean);
external procedure CURClassDefinitionSLO();
external function real DrawPaymentModesButtons_IV_SLO(real);
external function real FunctionButtons_SLO(string);
external procedure CreditCardWindowHeader_SLO(Boolean,Boolean,Real);
external procedure CreditCardWindowButtons_SLO(string,string,real);
external procedure CreditCardWindowInvoiceDetail_SLO(Real);
external procedure CreditCardWindowDeliveryDetail_SLO(Real);
external function real DrawPaymentModesButtons_SLO();
external procedure DrawBarMenuTiles_SLO(string);
external procedure DrawRestPMOtherPay_SLO();
external procedure DisplayRecordDetailsRA_SLO(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,LongInt,Date,string,LongInt);
external procedure DrawModifierButtons2_SLO(var integer,var integer);
external procedure OKCancel_SLO();
external procedure DefineElearningURLCacheLClass_SLO();
external procedure DefineElearningURLCacheDClass_SLO();
external function real TravelLogDeductions_SLO(real,real);
external procedure LoginButtons_SLO(Real);
external procedure FORMDEF2_SLO();
external procedure FORMDEF3_SLO();

// Language functions SVK
external function Boolean DisplayLoginKeyPad_SVK();
external function string 255 VATZoneEditFieldLabelSVK(Integer);
external function real VATZoneButtonsLabelsSVK(real,real,real,real);
external procedure LoginButtons2_SVK(Real,Real);
external procedure FORMDEF_SVK();
external function string 255 DemoMsgWClassTitle_SVK(Boolean,Boolean);
external procedure TBEClassDef_SVK();
external function string 255 VATZoneNameSVK();
external procedure TSERW_SVK();
external procedure TSERWNT_SVK();
external procedure TSERWTouch_SVK();
external procedure TSERWTEST_SVK();
external procedure INVFORM_SVK(Boolean);
external procedure DisplayRecordDetails_SVK(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val,string,Boolean,string);
external procedure DrawPOSInterface_SVK(string,string,record POSButtonsVc,Integer,string,Integer);
external procedure DisplayRecordDetailsCustDisplay_SVK(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val);
external function string 255 ResDayWClassWindowTitle_SVK();
external function string 255 ResMonWClassWindowTitle_SVK();
external function string 255 RTMonWClassWindowTitle_SVK();
external procedure SetupNightAuditWindowControls_SVK(Boolean);
external procedure CURClassDefinitionSVK();
external function real DrawPaymentModesButtons_IV_SVK(real);
external function real FunctionButtons_SVK(string);
external procedure CreditCardWindowHeader_SVK(Boolean,Boolean,Real);
external procedure CreditCardWindowButtons_SVK(string,string,real);
external procedure CreditCardWindowInvoiceDetail_SVK(Real);
external procedure CreditCardWindowDeliveryDetail_SVK(Real);
external function real DrawPaymentModesButtons_SVK();
external procedure DrawBarMenuTiles_SVK(string);
external procedure DrawRestPMOtherPay_SVK();
external procedure DisplayRecordDetailsRA_SVK(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,LongInt,Date,string,LongInt);
external procedure DrawModifierButtons2_SVK(var integer,var integer);
external procedure OKCancel_SVK();
external procedure DefineElearningURLCacheLClass_SVK();
external procedure DefineElearningURLCacheDClass_SVK();
external function real TravelLogDeductions_SVK(real,real);
external procedure LoginButtons_SVK(Real);
external procedure FORMDEF2_SVK();
external procedure FORMDEF3_SVK();

// Language functions TUR
external function Boolean DisplayLoginKeyPad_TUR();
external function string 255 VATZoneEditFieldLabelTUR(Integer);
external function real VATZoneButtonsLabelsTUR(real,real,real,real);
external procedure LoginButtons2_TUR(Real,Real);
external procedure FORMDEF_TUR();
external function string 255 DemoMsgWClassTitle_TUR(Boolean,Boolean);
external procedure TBEClassDef_TUR();
external function string 255 VATZoneNameTUR();
external procedure TSERW_TUR();
external procedure TSERWNT_TUR();
external procedure TSERWTouch_TUR();
external procedure TSERWTEST_TUR();
external procedure INVFORM_TUR(Boolean);
external procedure DisplayRecordDetails_TUR(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val,string,Boolean,string);
external procedure DrawPOSInterface_TUR(string,string,record POSButtonsVc,Integer,string,Integer);
external procedure DisplayRecordDetailsCustDisplay_TUR(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val);
external function string 255 ResDayWClassWindowTitle_TUR();
external function string 255 ResMonWClassWindowTitle_TUR();
external function string 255 RTMonWClassWindowTitle_TUR();
external procedure SetupNightAuditWindowControls_TUR(Boolean);
external procedure CURClassDefinitionTUR();
external function real DrawPaymentModesButtons_IV_TUR(real);
external function real FunctionButtons_TUR(string);
external procedure CreditCardWindowHeader_TUR(Boolean,Boolean,Real);
external procedure CreditCardWindowButtons_TUR(string,string,real);
external procedure CreditCardWindowInvoiceDetail_TUR(Real);
external procedure CreditCardWindowDeliveryDetail_TUR(Real);
external function real DrawPaymentModesButtons_TUR();
external procedure DrawBarMenuTiles_TUR(string);
external procedure DrawRestPMOtherPay_TUR();
external procedure DisplayRecordDetailsRA_TUR(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,LongInt,Date,string,LongInt);
external procedure DrawModifierButtons2_TUR(var integer,var integer);
external procedure OKCancel_TUR();
external procedure DefineElearningURLCacheLClass_TUR();
external procedure DefineElearningURLCacheDClass_TUR();
external function real TravelLogDeductions_TUR(real,real);
external procedure LoginButtons_TUR(Real);
external procedure FORMDEF2_TUR();
external procedure FORMDEF3_TUR();

// Language functions UKR
external function Boolean DisplayLoginKeyPad_UKR();
external function string 255 VATZoneEditFieldLabelUKR(Integer);
external function real VATZoneButtonsLabelsUKR(real,real,real,real);
external procedure LoginButtons2_UKR(Real,Real);
external procedure FORMDEF_UKR();
external function string 255 DemoMsgWClassTitle_UKR(Boolean,Boolean);
external procedure TBEClassDef_UKR();
external function string 255 VATZoneNameUKR();
external procedure TSERW_UKR();
external procedure TSERWNT_UKR();
external procedure TSERWTouch_UKR();
external procedure TSERWTEST_UKR();
external procedure INVFORM_UKR(Boolean);
external procedure DisplayRecordDetails_UKR(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val,string,Boolean,string);
external procedure DrawPOSInterface_UKR(string,string,record POSButtonsVc,Integer,string,Integer);
external procedure DisplayRecordDetailsCustDisplay_UKR(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val);
external function string 255 ResDayWClassWindowTitle_UKR();
external function string 255 ResMonWClassWindowTitle_UKR();
external function string 255 RTMonWClassWindowTitle_UKR();
external procedure SetupNightAuditWindowControls_UKR(Boolean);
external procedure CURClassDefinitionUKR();
external function real DrawPaymentModesButtons_IV_UKR(real);
external function real FunctionButtons_UKR(string);
external procedure CreditCardWindowHeader_UKR(Boolean,Boolean,Real);
external procedure CreditCardWindowButtons_UKR(string,string,real);
external procedure CreditCardWindowInvoiceDetail_UKR(Real);
external procedure CreditCardWindowDeliveryDetail_UKR(Real);
external function real DrawPaymentModesButtons_UKR();
external procedure DrawBarMenuTiles_UKR(string);
external procedure DrawRestPMOtherPay_UKR();
external procedure DisplayRecordDetailsRA_UKR(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,LongInt,Date,string,LongInt);
external procedure DrawModifierButtons2_UKR(var integer,var integer);
external procedure OKCancel_UKR();
external procedure DefineElearningURLCacheLClass_UKR();
external procedure DefineElearningURLCacheDClass_UKR();
external function real TravelLogDeductions_UKR(real,real);
external procedure LoginButtons_UKR(Real);
external procedure FORMDEF2_UKR();
external procedure FORMDEF3_UKR();

// Language functions USA
external function Boolean DisplayLoginKeyPad_USA();
external function string 255 VATZoneEditFieldLabelUSA(Integer);
external function real VATZoneButtonsLabelsUSA(real,real,real,real);
external procedure LoginButtons2_USA(Real,Real);
external procedure FORMDEF_USA();
external function string 255 DemoMsgWClassTitle_USA(Boolean,Boolean);
external procedure TBEClassDef_USA();
external function string 255 VATZoneNameUSA();
external procedure TSERW_USA();
external procedure TSERWNT_USA();
external procedure TSERWTouch_USA();
external procedure TSERWTEST_USA();
external procedure INVFORM_USA(Boolean);
external procedure DisplayRecordDetails_USA(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val,string,Boolean,string);
external procedure DrawPOSInterface_USA(string,string,record POSButtonsVc,Integer,string,Integer);
external procedure DisplayRecordDetailsCustDisplay_USA(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val);
external function string 255 ResDayWClassWindowTitle_USA();
external function string 255 ResMonWClassWindowTitle_USA();
external function string 255 RTMonWClassWindowTitle_USA();
external procedure SetupNightAuditWindowControls_USA(Boolean);
external procedure CURClassDefinitionUSA();
external function real DrawPaymentModesButtons_IV_USA(real);
external function real FunctionButtons_USA(string);
external procedure CreditCardWindowHeader_USA(Boolean,Boolean,Real);
external procedure CreditCardWindowButtons_USA(string,string,real);
external procedure CreditCardWindowInvoiceDetail_USA(Real);
external procedure CreditCardWindowDeliveryDetail_USA(Real);
external function real DrawPaymentModesButtons_USA();
external procedure DrawBarMenuTiles_USA(string);
external procedure DrawRestPMOtherPay_USA();
external procedure DisplayRecordDetailsRA_USA(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,LongInt,Date,string,LongInt);
external procedure DrawModifierButtons2_USA(var integer,var integer);
external procedure OKCancel_USA();
external procedure DefineElearningURLCacheLClass_USA();
external procedure DefineElearningURLCacheDClass_USA();
external function real TravelLogDeductions_USA(real,real);
external procedure LoginButtons_USA(Real);
external procedure FORMDEF2_USA();
external procedure FORMDEF3_USA();

// Language functions USS
external function Boolean DisplayLoginKeyPad_USS();
external function string 255 VATZoneEditFieldLabelUSS(Integer);
external function real VATZoneButtonsLabelsUSS(real,real,real,real);
external procedure LoginButtons2_USS(Real,Real);
external procedure FORMDEF_USS();
external function string 255 DemoMsgWClassTitle_USS(Boolean,Boolean);
external procedure TBEClassDef_USS();
external function string 255 VATZoneNameUSS();
external procedure TSERW_USS();
external procedure TSERWNT_USS();
external procedure TSERWTouch_USS();
external procedure TSERWTEST_USS();
external procedure INVFORM_USS(Boolean);
external procedure DisplayRecordDetails_USS(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val,string,Boolean,string);
external procedure DrawPOSInterface_USS(string,string,record POSButtonsVc,Integer,string,Integer);
external procedure DisplayRecordDetailsCustDisplay_USS(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val);
external function string 255 ResDayWClassWindowTitle_USS();
external function string 255 ResMonWClassWindowTitle_USS();
external function string 255 RTMonWClassWindowTitle_USS();
external procedure SetupNightAuditWindowControls_USS(Boolean);
external procedure CURClassDefinitionUSS();
external function real DrawPaymentModesButtons_IV_USS(real);
external function real FunctionButtons_USS(string);
external procedure CreditCardWindowHeader_USS(Boolean,Boolean,Real);
external procedure CreditCardWindowButtons_USS(string,string,real);
external procedure CreditCardWindowInvoiceDetail_USS(Real);
external procedure CreditCardWindowDeliveryDetail_USS(Real);
external function real DrawPaymentModesButtons_USS();
external procedure DrawBarMenuTiles_USS(string);
external procedure DrawRestPMOtherPay_USS();
external procedure DisplayRecordDetailsRA_USS(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,LongInt,Date,string,LongInt);
external procedure DrawModifierButtons2_USS(var integer,var integer);
external procedure OKCancel_USS();
external procedure DefineElearningURLCacheLClass_USS();
external procedure DefineElearningURLCacheDClass_USS();
external function real TravelLogDeductions_USS(real,real);
external procedure LoginButtons_USS(Real);
external procedure FORMDEF2_USS();
external procedure FORMDEF3_USS();

// Language functions VIE
external function Boolean DisplayLoginKeyPad_VIE();
external function string 255 VATZoneEditFieldLabelVIE(Integer);
external function real VATZoneButtonsLabelsVIE(real,real,real,real);
external procedure LoginButtons2_VIE(Real,Real);
external procedure FORMDEF_VIE();
external function string 255 DemoMsgWClassTitle_VIE(Boolean,Boolean);
external procedure TBEClassDef_VIE();
external function string 255 VATZoneNameVIE();
external procedure TSERW_VIE();
external procedure TSERWNT_VIE();
external procedure TSERWTouch_VIE();
external procedure TSERWTEST_VIE();
external procedure INVFORM_VIE(Boolean);
external procedure DisplayRecordDetails_VIE(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val,string,Boolean,string);
external procedure DrawPOSInterface_VIE(string,string,record POSButtonsVc,Integer,string,Integer);
external procedure DisplayRecordDetailsCustDisplay_VIE(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val);
external function string 255 ResDayWClassWindowTitle_VIE();
external function string 255 ResMonWClassWindowTitle_VIE();
external function string 255 RTMonWClassWindowTitle_VIE();
external procedure SetupNightAuditWindowControls_VIE(Boolean);
external procedure CURClassDefinitionVIE();
external function real DrawPaymentModesButtons_IV_VIE(real);
external function real FunctionButtons_VIE(string);
external procedure CreditCardWindowHeader_VIE(Boolean,Boolean,Real);
external procedure CreditCardWindowButtons_VIE(string,string,real);
external procedure CreditCardWindowInvoiceDetail_VIE(Real);
external procedure CreditCardWindowDeliveryDetail_VIE(Real);
external function real DrawPaymentModesButtons_VIE();
external procedure DrawBarMenuTiles_VIE(string);
external procedure DrawRestPMOtherPay_VIE();
external procedure DisplayRecordDetailsRA_VIE(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,LongInt,Date,string,LongInt);
external procedure DrawModifierButtons2_VIE(var integer,var integer);
external procedure OKCancel_VIE();
external procedure DefineElearningURLCacheLClass_VIE();
external procedure DefineElearningURLCacheDClass_VIE();
external function real TravelLogDeductions_VIE(real,real);
external procedure LoginButtons_VIE(Real);
external procedure FORMDEF2_VIE();
external procedure FORMDEF3_VIE();

external function Boolean IsStandardERP();
external function Boolean IsEnterprise();
external function Boolean HasATOL();

external function Boolean HasApprovals();
external function Boolean HasApprovals();
external function Boolean HasCCPayments();
external function Boolean HasAdvancedPricing();
external function Boolean HasBar();
external function Boolean HasBase2();
external function Boolean HasConsignmentStock();
external function Boolean HasContactClassification();
external function Boolean HasDeliveryAddress();
external function Boolean HasEInvoicing();
external function Boolean HasExtraNLComment();
external function Boolean HasHotelInterface();
external function Boolean HasJewelleryInterface();
external function Boolean HasItemClassification();
external function Boolean HasItemGroups();
external function Boolean HasKPIs();
external function Boolean HasLanguages();
external function Boolean HasLimitedAccess();
external function Boolean HasLocalMachines();
external function Boolean HasMultiCurrency();
external function Boolean HasMultiLocations();
external function Boolean HasLoyaltyCards();
external function Boolean HasObjects();
external function Boolean HasNumberSeries();
external function Boolean HasPocketScreen();
external function Boolean HasPositions();
external function Boolean HasProjects();
external function Boolean HasPriceLists();
external function Boolean HasSerialNumbers();
external function Boolean HasSkypeConnection();
external function Boolean HasTestFeatures();
external function Boolean HasTouchScreenDevice();
external function Boolean HasTouchScreenLook();
external function Boolean HasVarieties();

external function Boolean HasStandardCRM();
external function Boolean HasStandardOrganizer();
external function Boolean HasStandardCommunicator();

external function Boolean HasEMail();
external function Boolean HasExternalEMail();

external function Boolean HasModAT2();
external function Boolean HasModCheck();
external function Boolean HasModCL();
external function Boolean HasModCO();
external function Boolean HasModCRM();
external function Boolean HasModExp();
external function Boolean HasModIN();
external function Boolean HasModNL();
external function Boolean HasModPO();
external function Boolean HasModPOS();
external function Boolean HasModPL();
external function Boolean HasModPP();
external function Boolean HasModProd();
external function Boolean HasModQT();
external function Boolean HasModRent();
external function Boolean HasModRest();
external function Boolean HasModSO();
external function Boolean HasModSL();
external function Boolean HasModSVO();
external function Boolean HasModTS();


procedure dummy() //##ii
begin //##ii
  SetLangMode(LangFarsi,"ENG",0); //##ii LangUkrainian,"UKR" -> LangFarsi,"ENG"
  return; //##ii
end; //##ii

window MBARClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h1,v,vm,vs;
  WindowBegin("مشخص تحلیلی موجودی ",MBARClass,CGRcW,RcType);
  SetWRect(20,80,450,300);
  v = 6; vs = 20;
  if (IsEnterprise) then begin
    Tile(0,20,false,"",Period2Str);
    PeriodField(h=140,v,"دوره ");
    TileButtons(v,2);
    Tile(1,300,false,"1",AccStr);
    EditFieldTL(h,v,150,"حسابها",M4UStr,Normal,20,AccStr,false,AccSClass);
    EditFieldTL(h,v+=20,150,"کالا",M4UStr,Normal,60 ,ObjStr,false,ObjSClass);
    EditFieldTL(h,v+=20,82,"به جلو بال عضویت ",M4Date,Normal,0,d2,false,0);
    EditFieldTL(h,v+=20,50,"زیر طول ",M4Long,Normal,0 ,FirstVer,false,0);
    EditFieldTL(h,v+=20,50,"نوع شی ",M4UStr,Normal,5 ,ObjType,false,OTSClass);
    EditFieldTL(h,v+=vs,80,"محروم شی ",M4UStr,Normal,60,f3,false,ObjSClass);
    ButtonFrame(h=20,vm=(v+=95),170,2,"ارزش ها در ");
    RadioButton(h,v,0,0,"ارز پایه 1",basecurncy);
    RadioButton(h,v+=16,1,0,"پایه ارز 2",basecurncy);
    ButtonFrame(h=220,v=vm,170,2,"ارائه ");
    RadioButton(h,v,0,0,"استاندارد ",ArtMode);
    RadioButton(h,v+=16,1,0,"با حساب های گروه ",ArtMode);
    StaticText(20,v+=50,"این گزارش ستون ها بیشتر در زمانی که بر روی کاغذ ",false);
    Tile(2,280,false,"2",Language);
    v = 6; h=140;
    EditFieldTL(h,v,50,"زبان ",M4UStr,Normal,5 ,Language,false,LangSClass);
    CheckBox(h=20,vm=(v+=20),0,"تنها گروه ",flags[1]);
    CheckBox(h,v+=16,0,"لیست معاملات ",flags[4]);
    CheckBox(h,v+=16,0,"مجموع زیر ",flags[8]);
    CheckBox(h,v+=16,0,"آیا گروه های نسخه قابل چاپ نیست ",flags[10]);  
    CheckBox(h,v+=16,0,"آیا سربرگ نسخه قابل چاپ نیست ",flags[11]);
    CheckBox(h,v+=16,0,"بیانیه افتتاحیه ",flags[12]);
//    CheckBox(h,v+=16,0,"For Fiscal Purposes",flags[13]);// there is another report for it
    CheckBox(h,v+=16,0,"برش نام حساب ",flags[14]);
    CheckBox(h,v+=16,0,"نمایش اشیاء ",flags[15]);
    ButtonFrame(h=220,v=vm+26,170,4,"شامل شبیه سازی ");
    RadioButton(h,v,0,0,"هیچ یک",SimVerf);
    RadioButton(h,v+=16,1,0,"همه ",SimVerf);
    RadioButton(h,v+=16,2,0,"سال پایان مرحله 1 ",SimVerf);
    RadioButton(h,v+=16,3,0,"سال پایان مرحله 1 و 2 ",SimVerf);
  end else begin
    PeriodField(h=140,v=6,"دوره ");
    EditFieldTL(h,v+=20,150,"حسابها",M4UStr,Normal,20,AccStr,false,AccSClass);
    if (HasObjects) then begin
      EditFieldTL(h,v+=20,150,"کالا",M4UStr,Normal,60 ,ObjStr,false,ObjSClass);
    end;
    EditFieldTL(h,v+=20,82,"به جلو بال عضویت ",M4Date,Normal,0,d2,false,0);
    if (HasLocalization("POL,PRT")) or (IsEnterprise) then begin
      EditFieldTL(h,v+=20,50,"زیر طول ",M4Long,Normal,0 ,FirstVer,false,0);
    end;
    if (HasObjects) then begin
      EditFieldTL(h,v+=20,50,"نوع شی ",M4UStr,Normal,5 ,ObjType,false,OTSClass);
      EditFieldTL(h,v+=vs,80,"محروم شی ",M4UStr,Normal,60,f3,false,ObjSClass);
    end;
    if (HasLanguages) then begin
      EditFieldTL(h,v+=vs,50,"زبان ",M4UStr,Normal,5 ,Language,false,LangSClass);
    end;
    if (HasMultiCurrency or HasBase2) then begin
      ButtonFrame(h,v+=40,170,2,"ارزش ها در ");
      RadioButton(h,v,0,0,"ارز پایه 1",basecurncy);
      RadioButton(h,v+=16,1,0,"پایه ارز 2",basecurncy);
    end;
    if (HasLocalization("POL,PRT")) then begin
      ButtonFrame(h,v+=40,170,2,"ارائه ");
      RadioButton(h,v,0,0,"استاندارد ",ArtMode);
      RadioButton(h,v+=16,1,0,"با حساب های گروه ",ArtMode);
    end;
    if (HasLocalization("PRT")) then begin
      ButtonFrame(h,v+=40,170,4,"شامل شبیه سازی ");
      RadioButton(h,v,0,0,"هیچ یک",SimVerf);
      RadioButton(h,v+=16,1,0,"همه ",SimVerf);
      RadioButton(h,v+=16,2,0,"سال پایان مرحله 1 ",SimVerf);
      RadioButton(h,v+=16,3,0,"سال پایان مرحله 1 و 2 ",SimVerf);
    end;
    if (HasLocalization("POL,PRT")) then begin
      CheckBox(h,v+=24,0,"مجموع زیر ",flags[8]);
    end;
    if (HasLocalization("POL,PRT")) then begin
      CheckBox(h,vm=(v+=16),0,"تنها گروه ",flags[1]);
      if (HasLocalization("PRT")) then begin
        CheckBox(h,v+=16,0,"آیا سربرگ نسخه قابل چاپ نیست ",flags[11]);     
      end else begin
        CheckBox(h,v+=16,0,"آیا گروه های نسخه قابل چاپ نیست ",flags[10]);  
      end;
    end;
    StaticText(30,v+=50,"این گزارش ستون ها بیشتر در زمانی که بر روی کاغذ ",false);
  end;
  EndWindow;
end;

window CUDClass:14
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h1,h2,h3,h4,h5,l,v,vm,vs;
  string 255 label;
  WindowBegin("تماس",CUDClass,CGview,-);//Contact
  DynamicWindow;
  SetWRect(20,80,680,441);
  Sizeable(-1,-1,0,0); 
  UseView(CUVc);
  FormName(PrintCUD);  
  if (HasLocalization("GBR,EST")) then begin
    ActiveFieldOnNew("کد"); //dont change, otherwise automatic address lookup helper window wont show automatically //wns
  end else begin
    ActiveFieldOnNew("نام");
  end;
  CommunicateButton;
  Tile(0,95,false,"",Code);
  v = 6; h = 130; l=223; vs = 20; h1=410; h2 = 350; h3 = 430; h4 = 580; h5 = 460;
  EditField(h,v ,   95,"شماره",Normal,Code,false,TSerSClass);
  EditField(h1,v,50,"طبقه بندی مشتری",Normal,CustCat,false,CCatSClass);
  EditField(h,v+=vs,95,"کوتاه ",Normal,SearchKey,false,0);
  EditField(h1,v,50,"طبقه بندی تولید کننده",Normal,VECat,false,VGSClass);
  EditField(h,v+=vs,h1-h+50,"نام",Normal,Name,false,0);
  CheckBox(h1+80,v=6,0,"مشتری",CUType);
  CheckBox(h1+80,v+=16,0,"فروشنده",VEType);
  CheckBox(h1+80,v+=16,0,"مهمان ",GuestType);
  CheckBox(h1+80,v+=16,0,"فروشنده",DealerType);
  CheckBox(h1+180,v=6,0,"کارمند",EmployeeType);
//  HalPushButton(h1+170,v=10,h1+170+100,v+20,"CreditInfoCUDsm","Credit Info");
//  HalPushButton(h1+170,v=10,h1+170+100,v+20,"به روز رسانی ادرس مشتری ","به روز رسانی ادرس ");
  TileButton(1,"تماس");
  TileButton(2,"تحویل");
  TileButton(3,"دوره ها ");
  TileButton(4,"قیمت گذاری ");
  TileButton(5,"شرکت");
  TileButton(6,"حسابها");
  TileButton(7,"وب ");
  TileButton(8,"توضیحات");
  TileButton(9,"مهمان ");
  TileButton(10,"تعریف شده توسط کاربر ");
  Tile(1,290,true,"1",InvAddr0);
  v=6;
  HalPushButton(h+120,v,h+120+100,v+20,"به روز رسانی ادرس مشتری ","به روز رسانی ادرس ");
  v=v+10;
  StaticText(h,v+13,"فاکتور آدرس",false);
  label = UserDefined("CUVc","InvAddr0");
  EditField(h,v+=vs,-20,label,Normal,InvAddr0,false,0);
  label = UserDefined("CUVc","InvAddr1");
  EditField(h,v+=vs,-20,label,Normal,InvAddr1,false,0);
  label = UserDefined("CUVc","InvAddr2");
  EditField(h,v+=vs,-20,label,Normal,InvAddr2,false,0);
  label = UserDefined("CUVc","InvAddr3");
  EditField(h,v+=vs,-20,label,Normal,InvAddr3,false,0);
  label = UserDefined("CUVc","InvAddr4");
  EditField(h,v+=vs,-20,label,Normal,InvAddr4,false,0);
  EditField(h,v+=vs,50,"کشور",Normal,CountryCode,false,CountrySClass);
  EditField(h1,v,-20,"بخش",Normal,Department,false,0);
  EditField(h,v+=vs,150,"تلفن ",Normal,Phone,false,0);
  EditField(h1,v,-20,"فکس",Normal,Fax,false,0);
  EditField(h,v+=vs,150,"شماره تماسهای مختلف",Normal,AltPhone,false,0);
  EditField(h1,v,-20,"موبایل ",Normal,Mobile,false,0);
  EditField(h,v+=vs,150,"نام اسکایپ ",Normal,SkypeName,false,0);
  EditField(h1,v,-20,"پیش نویس شروع جلسه ",Normal,SIPCode,false,0);
  EditField(h,v+=vs,150,"ایمیل",Normal,eMail,false,0);  
  EditField(h1,v,-20,"توسعه ",Normal,Extension,false,0);
  EditField(h,v+=vs,150,"تماس اولیه ",Normal,Person,false,ContactSClass);
  EditField(h1,v,-20,"سایت اینترنتی ",Normal,wwwAddr,false,0);
  EditField(h,v+=vs,-20,"طبقه بندی",Normal,Classification,false,CClassSClass);
  RecordList2(10,v+=40,-30,-39,"ContactRelVc");
  RlColKey(4,4,"کد",ContactCode,false,ActCustContactCode);
  RlCol(55,55,"عنوان ",ContactTitle,false);
  RlColKey(105,105,"نام",ContactName,false,ActCustContactName);
  RlCol(235,235,"تلفن ",ContactPhone,false);
  RlCol(335,335,"موبایل ",ContactMobile,false);
  RlCol(435,435,"عنوان شغلی ",JobTitle,false);
  RlCol(535,535,"ایمیل",ContacteMail,false);
//  RlCol(-1,-1,"",Invalid,true);
  Tile(2,240,false,"2",DelAddr0);
  v=6;
  if (HasLocalization("GBR,LVA,EST,SWE")) then begin
    HalPushButton(h+120,v,h+120+100,v+20,"UpdDeliveryAddressCUDsm","به روز رسانی ادرس ");
  end;
  v=v+12;
  StaticText(h,v+13,"ادرسهای تحویل",false);
  label = UserDefined("CUVc","DelAddr0");
  EditField(h,v+=vs,-20,label,Normal,DelAddr0,false,0);
  label = UserDefined("CUVc","DelAddr1");
  EditField(h,v+=vs,-20,label,Normal,DelAddr1,false,0);
  label = UserDefined("CUVc","DelAddr2");
  EditField(h,v+=vs,-20,label,Normal,DelAddr2,false,0);
  label = UserDefined("CUVc","DelAddr3");
  EditField(h,v+=vs,-20,label,Normal,DelAddr3,false,0);
  label = UserDefined("CUVc","DelAddr4");
  EditField(h,v+=vs,-20,label,Normal,DelAddr4,false,0);  
  EditField(h,v+=vs,50,"کشور",Normal,DelCountry,false,CountrySClass);
  EditField(h2+50,v,-20,"تفسیر منظور ",Normal,OrderComment,false,0);
  EditField(h,v+=vs,120,"شماره حمل و نقل ",Normal,FreightNr,false,0);
  EditField(h2+50,v,70,"بخش ",Normal,Region,false,RegionSClass); 
  EditField(h,vm=(v+=vs),120,"اصطلاحات حذف فروش ",Normal,ShipDeal,false,ShipDealSClass);
  EditField(h2+50,v,70,"حذف خرید . دوره ها ",Normal,VEShipDeal,false,ShipDealSClass); 
  EditField(h,v+=vs,120,"حالت حذف فروش",Normal,ShipMode,false,DMSClass);
  EditField(h2+50,v,70,"حذف خرید . حالت ",Normal,VEShipMode,false,DMSClass); 
  EditField(h,v+=vs,120,"مسیر ",Normal,Sorting,false,DelRouteSClass);
/* these fields were used for securities trading, this module doesnt exist in hansa anymore */
/* Two of these fields are used in Russia and Ukraine */
//  EditField(h,vm=(v+=vs),120,"حساب اوراق بهادار ",Normal,SecAccount,false,0);
//  EditField(h,v+=vs,120,"حساب بانکیٍ",Normal,BankAccount,false,0);//xx
//  EditField(h,v+=vs,120,"کاربر حساب ",Normal,AccOperator,false,BankSClass);//xx
//##  EditField(h,v+=vs ,70, "مبدا تجاری",Normal,ComCode,false,ComSClass);
  ButtonFrame(h5+30,v=vm,150,2,"تاریخ تحویل بر اساس");
  RadioButton(h5+30,v,0,0,"تاریخ جاری",DeliveryBasedOn);
  RadioButton(h5+30,v+=16,1,0,"تاریخ تحویل برنامه ریزی شده ",DeliveryBasedOn);  
  Tile(3,190,false,"3",PayDeal);
  EditField(h,v=6,25,"پرداخت فروش.دوره ها ",Normal,PayDeal,false,PDSClass);
  EditField(h,v+=vs,80,"حد اعتباری فروش ",Normal,CreditLimit,true,0);
  EditField(h,v+=vs,80,"روزهای مجاز فروش اعتباری ",Normal,CreditLimitDays,false,0);
  EditField(h,v+=vs,80,"خودمکمل رمز ",Normal,TheirCode,false,0);  
  EditField(h,v+=vs,80,"فاکتور به ",Normal,InvoiceToCode,false,CUSClass);
  EditField(h,v+=vs,80,"برنامه اطلاعات سودمند",Normal,ANACode,false,0);
  EditField(h,v+=vs,80,"میزان سود ",Normal,IntRate,false,0);
  EditField(h,v+=vs,80,"تاریخ ایجاد",ViewOnly,DateCreated,false,0);
  EditField(h,v+=vs,80,"شریک اصلی ",Normal,MainPartner,false,CUSClass);
  EditField(h2,v=6,25,"خرید.پرداخت . دوره ها ",Normal,VEPayDeal,false,PDSClass);
  EditField(h2,v+=vs,80,"محدودیت خرید اعتباری ",Normal,VECreditLimit,true,0);
  EditField(h2,v+=vs,80,"تعداد روزهای اعتبار خرید",Normal,VECreditLimitDays,false,0);
  EditField(h2,v+=vs,80,"کد مشتری خود ",Normal,VECustID,false,0);  
  EditField(h2,v+=vs,80,"فاکتور به ",Normal,VEInvoiceToCode,false,VESClass);
  EditField(h2,v+=vs,80,"عامل",Normal,VEFactoring,false,VESClass);
  EditField(h2,v+=vs,80,"حداقل .مجموعه سفارش ",Normal,MinOrdSum,false,0);
  EditField(h2,v+=vs,80,"مرجع",Normal,RefStr,false,0);
  EditField(h2,v+=vs,80,"اخرین تغییر ",Normal,DateChanged,false,0);
  CheckBox(h5,v=12,0,"بسته",blockedFlag);
  CheckBox(h5,v+=16,0,"در انتظار ",OnHoldFlag);
  CheckBox(h5,v+=16,0,"یاداوری ",RemndrFlag);
//  CheckBox(h5,v+=16,0,"مجموعه",ColectionFlag);
  CheckBox(h5,v+=16,0,"سود ",InterestFlag);
  CheckBox(h5,v+=16,0,"در حساب ",OnAccount);
  CheckBox(h5,v+=16,0,"بدون فاکتور",NoFactoringFlag);
  CheckBox(h5,v+=16,0,"بدون مالیات اضافی ",NoTax1);
  CheckBox(h5,v+=16,0,"فقط اطلاعات مقدماتی گروه ",GroupInv);
  CheckBox(h5,v+=16,0,"صورتحساب خود",SelfBilling);
  CheckBox(h4,v=12,0,"مشتری خود",EGOFlag);
  CheckBox(h4,v+=16,0,"تبادل الکترونیکی داده های مشتری",EDIFlag);
  CheckBox(h4,v+=16,0,"اجازه ورود به سیستم",AllowLogin);
//  CheckBox(h4,v+=16,0,"اجازه دستیابی انتقال فایل پروتکل",FTPLogin);
  CheckBox(h4,v+=16,0,"فقط فاکتور مالی",FiscalFlag);
  CheckBox(h4,v+=16,0,"بدون نامه گروهی",NoLetterPosting);
  CheckBox(h4,v+=16,0,"بدون ایمیل گروهی ",NoMailPosting);
  CheckBox(h4,v+=16,0,"بدون مالیات محیط زیست ",NoRepa);
  CheckBox(h4,v+=16,0,"بدون مشاهده بخش ",NoTax2);
  CheckBox(h4,v+=16,0,"F-Tax (Sweden)",FTax);
  Tile(4,110,false,"4",PLCode);
  EditField(h,v=6,  80,"ارز فروش ",Normal,CurncyCode,false,CurncyCodeSClass);
  EditField(h,v+=vs ,80, "لیست قیمت ",Normal,PLCode,false,PLDefSClass);
  EditField(h,v+=vs ,80, "ماتریس تخفیف",Normal,RebCode,false,RebSClass);
  EditField(h,v+=vs,80,"فروشنده",Normal,SalesMan,false,UserSClass);
  EditField(h,v+=vs,80," کالاهای پیش فرض",Normal,CompItemCode,false,CompItemSClass);
  EditField(h2,v=6,80,"خرید . ارز",Normal,VECurncyCode,false,CurncyCodeSClass);
  EditField(h2,v+=2*vs ,80, "ماتریکس تخفیف تولید کننده ",Normal,VERebCode,false,RebSClass);
  EditField(h2,v+=vs,80,"گروه فروش ",Normal,SalesGroup,false,SalesGroupSClass);
  ButtonFrame(h5,v=24,150,3,"قیمت پایه ");
  RadioButton(h5,v,0,0,"تاریخ سفارش ",PriceBasedOn);
  RadioButton(h5,v+=16,1,0,"حذف برنامه.تاریخ ",PriceBasedOn);
  RadioButton(h5,v+=16,2,0,"تاریخ فرستادن",PriceBasedOn);  
  Tile(5,180,false,"5",Comment);
  EditField(h,v=6,-20,"تفسیر",Normal,Comment,false,0);
  EditField(h,v+=vs,-20,"هشدار در فروش ",Normal,WarnText1,false,0);
  EditField(h,v+=vs,-20,"هشدار در خرید ",Normal,VEWarnText1,false,0);
  EditField(h,v+=vs,50,"زبان ",Normal,LangCode,false,LangSClass);
  EditField(h2-20,v,120," ثبت شماره  1",Normal,RegNr1,false,0);
//  EditField(h,v+=vs,50,"کشور",Normal,CountryCode,false,CountrySClass);
  EditField(h2-20,v+=vs,120," ثبت شماره  2",Normal,RegNr2,false,RegDefSClass);
  EditField(h,v+=vs,20,"حراج  مالیلت بر ارزش افزودهدستورالعمل ",Normal,VATCode,false,VATCodeSClass);
  EditField(h+125,v,50,"مالیات موقت فروش ",Normal,TaxTemplateCode,false,TaxTemplateSClass);
  HalPushButton(h2-20,v,h2-20+100,v+20,"به روز رسانی ادرس مشتری ","به روز رسانی ادرس ");
  EditField(h,v+=vs,20,"خرید. مالیات بر ارزش افزوده . دستورالعمل",Normal,VEVATCode,false,VATCodeSClass);
  EditField(h+125,v,50,"خرید . مالیات موقت ",Normal,VETaxTemplateCode,false,TaxTemplateSClass);
  ButtonFrame(h2-20,v+=vs,143,1,"نوع ");
  RadioButton(h2-20,v,0,0,"شرکت",CustType);
  RadioButton(h2+60,v,1,0,"شخص ",CustType);
  EditField(h,v,120,"شماره ثبت مالیات ارزش افزوده",Normal,VATNr,false,0);
//  EditField(h,v+=vs,120,"کانال ",Normal,WebServiceChannel,false,SetSClass);
  v = 84;
  v = VATZoneButtonsLabelsENG(h5+30,v,150,16);
  Tile(6,130,false,"6",AccAP);
  EditField(h,v=6,80,"ستون بستانکار حساب ",Normal,AccAP,false,AccSClass);
  EditField(h,v+=vs,80,"حساب رایج هزینه ها",Normal,AccCost,false,AccSClass);
  EditField(h,v+=vs,80,"میزان اعتبار حساب",Normal,OnAccAccAP,false,AccSClass);
  EditField(h,v+=vs,120,"اشیا فروش ",Normal,Objects,false,ObjSClass);
  EditField(h,v+=vs,200,"رمز شماره حساب بانک بین المللی ",Normal,IBANCode,false,0);
  EditField(h1,v=6,-20,"حساب بانکیٍ",Normal,BankAccount,false,0);
  EditField(h1,v+=vs,-20,"حساب بانکی2",Normal,Bank,false,0);
  EditField(h1,v+=vs,-20,"کاربر حساب ",Normal,AccOperator,false,BankSClass);  
  EditField(h1,v+=vs,120,"خرید .اشیا ",Normal,VEObjects,false,ObjSClass);
  EditField(h1,v+=vs,80,"کد مرتب سازی ",Normal,SortCode,false,0);
  EditField(h1,v+=vs,120,"حالت پرداخت موضوعی ",Normal,WithPayMode,false,PMSClass);
  Tile(7,70,false,"7",WebConf);
  EditField(h,vm=(v=6),120,"کنفرانس شبکه ",Normal,WebConf,true,0);
  EditField(h1,v,150,"طبقه بندی اصلی ",Normal,MainDispGroup,false,WebNGProductCatSClass);
  EditField(h,v+=vs,120,"صفحه شروع سایت ",Normal,WebStartPage,false,0);
  EditField(h1,v,150,"نمایش در وب",Normal,WebDisplays,false,WebDisplaySClass);
  EditField(h,v+=vs,120,"کد حمل و نقل ",Normal,FreightCode,false,WebFreightSClass);
  Tile(8,170,false,"8",Comment0);
  EditField(h,v=6,-20,"تفسیر",Normal,Comment0,false,0);
  EditField(h,v+=vs,-20,"",Normal,Comment1,false,0);
  EditField(h,v+=vs,-20,"",Normal,Comment2,false,0);
  EditField(h,v+=vs,-20,"عنوان غیر رسمی",Normal,Title,false,CourtesyTitlesSClass);
  EditField(h,v+=vs,-20,"عنوان شغلی ",Normal,JobDesc,false,JobTitleSClass);
  EditField(h,v+=vs,-20,"خوشامد 1",Normal,Salutation1,false,0);
  EditField(h,v+=vs,-20,"خوشامد 2",Normal,Salutation2,false,0);
  EditField(h,v+=vs,-20,"خوشامد 3",Normal,Salutation3,false,0);
  Tile(9,250,false,"9",DocType);
  EditField(h,v=6,100,"نوع مدارک",Normal,DocType,false,0);
  EditField(h2,v,-20,"شنا سایی ",Normal,PassportNr,false,0);
//  EditFieldTL(h,vm=(v+=20),100,"ملیت ",M4StrSet,Normal,423,Nationality,false,StrSetSClass);
  EditField(h,vm=(v+=20),100,"ملیت ",Normal,Nationality,false,CountrySClass);
  EditField(h,v+=20,100,"تاریخ تولد",Normal,BirthDate,false,0);
  EditField(h,v+=20,100,"حرفه ",Normal,Profesion,false,0);   
  EditField(h,v+=20,100,"روزنامه ",Normal,Newspaper,false,NewspaperSClass);
  EditField(h,v+=20,100,"عبارت عبور",Normal,Passphrase,false,0);
  EditField(h,v+=vs,100,"متصدی تور ",Normal,TourOperator,false,CUSClass);
  EditField(h,v+=vs,100,"نماینده",Normal,Agent,false,CUSClass);
  EditField(h,v+=vs,100,"توضیح پرداخت",Normal,DefGuestPayMode,false,PMSClass);
  EditField(h,v+=vs,100,"تعریف سازمان رزرو",Normal,BookOrigin,false,BookOrgSClass);
  EditField(h,v+=vs,300,"تذکرات رژیم غذایی",Normal,DietRemarks,false,0);
  EditField(h,v+=vs,300,"درخواست.اظهارات ",Normal,RequirementRemarks,false,0);

  ButtonFrame(h2,v=vm+20,100,2,"جنس ");
  RadioButton(h2,v,0,0,"مرد",Gender);
  RadioButton(h2,v+=17,1,0,"مونث",Gender);

  CheckBox(h2+130,v=vm+20,0,"فرد سیگاری ",Smoking);
  CheckBox(h2+130,v+=17,0,"لیست سیاه",Blacklist);

  ButtonFrame(h2,vm=(v+=40),100,4,"وضعیت تاهل");
  RadioButton(h2,v,0,0,"تک ",MarStatus);
  RadioButton(h2,v+=17,1,0,"متاهل",MarStatus);
  RadioButton(h2,v+=17,2,0,"تفکیک شده",MarStatus);
  RadioButton(h2,v+=17,3,0,"بیوه ",MarStatus);

  ButtonFrame(h2=h2+130,v=vm,100,3,"سن");
  RadioButton(h2,v,1,0,"خردسال ",AgeStatus);
  RadioButton(h2,v+=17,0,0,"بالغ",AgeStatus);
  RadioButton(h2,v+=17,2,0,"مستمری بگیر ",AgeStatus);

  Tile(10,270,false,"10",UserStr1);
  v=6;h=180;
  label = UserDefined("CUVc","UserStr1");
  if (nonblank(label)) then begin
    EditField(h,v,-20,label,Normal,UserStr1,false,0);
  end;
  label = UserDefined("CUVc","UserStr2");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,-20,label,Normal,UserStr2,false,0);
  end;
  label = UserDefined("CUVc","UserStr3");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,-20,label,Normal,UserStr3,false,0);
  end;
  label = UserDefined("CUVc","UserStr4");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,-20,label,Normal,UserStr4,false,0);
  end;
  label = UserDefined("CUVc","UserStr5");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,-20,label,Normal,UserStr5,false,0);
  end;
  label = UserDefined("CUVc","UserVal1");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,-20,label,Normal,UserVal1,false,0);
  end;
  label = UserDefined("CUVc","UserVal2");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,-20,label,Normal,UserVal2,false,0);
  end;
  label = UserDefined("CUVc","UserVal3");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,-20,label,Normal,UserVal3,false,0);
  end;
  label = UserDefined("CUVc","UserDate1");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,-20,label,Normal,UserDate1,false,0);
  end;
  label = UserDefined("CUVc","UserDate2");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,-20,label,Normal,UserDate2,false,0);
  end;
  label = UserDefined("CUVc","UserDate3");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,-20,label,Normal,UserDate3,false,0);
  end;
  
  EditField(h,v+=vs,-20,"آدرس کتاب",Normal,AddressBooks,false,0);
  
  if (UserCanReport("CustPSRn","",true)) then begin
    SpecialMenu("وضعیت مشتری",'e',0,"CUStatusCUDsm");
  end;
  SpecialMenu("لینک تماس موجود",' ',1,"AddContactCUDsm");
  SpecialMenu("ایجاد مخاطب جدید",' ',1,"NewContactCUDsm");
  SpecialMenu("حذف تماس مرتبط",' ',1,"DelContactCUDsm");
  SpecialMenu("ویرایش اطلاعات تماس مرتبط",' ',1,"EditContactCUDsm");
  SpecialMenu("ایجاد فعالیت",'c',2,"NewActCUDsm");
  SpecialMenu("ایجاد تصادفی رمز عبور ایمیل",' ',3,"RandomPassMailCUDsm");
  SpecialMenu("ایجاد ایمیل",'m',5,"NewMailCUDsm");
  if (UserCanReport("VEPSRn","",true)) then begin
    SpecialMenu("فروشندهوضعیت",'u',4,"VEStatusVEDsm");
  end;
  SpecialMenu("به روز رسانی تماس اشخاص ",' ',6,"UpdContactAddrCUDsm");
  if (GuiType==kGuiCocoa) then begin
    SpecialMenu("کپی کنید به کتاب ادرسهای محلی ",' ',7,"CopyToLocalAddressBookDsm");
  end;
  if (GuiType==kGuiiPhone) then begin
    SpecialMenu("تغییر رمز عبور",' ',1,"ChangePasswdCUDsm");
  end;
  EndWindow;
end;

window INLClass:3
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real pos;
  
  WindowBegin("کالاها",INLClass,CGmlist,-);
  SpawnClass(INDClass);
  SetWRect(64,80,609,298);
  Sizeable(-1,-1,0,0);
  UseView(INVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,    "شماره",Code,false,Code);
  pos = 111;
  if (HasItemGroups or HasLocalization("PRT")) then begin
    RlColKey(pos,pos,"گروه",Group,false,Group);
    pos = 181;
  end;
  if (HasModIN) then begin
    RlColKey(pos,pos,"توصیف",Name,false,Name);
  end else begin
    RlColKey(pos,pos,"نام",Name,false,Name);
  end;
  if (IsEnterprise) then begin
    RlColKey(-150,-150,"لیست کدهای مختلف",AlternativeCode,false,AlternativeCode);
  end;
  if (IsEnterprise) or (HasModIN) then begin
    RlCol(-70,-70,"قیمت اصلی",UPrice1,true);
  end else begin
    RlCol(-70,-70,"قیمت ",UPrice1,true);
  end;
  SearchField("جستجو ");
  if (GuiType==kGuiMetro) then begin
    RowMenuBegin("");
    if (HasModIN) then begin
      if (UserCanReport("INInfoRn","",true)) then begin
        RowMenuItem(1,"گزارش وضعیت کالا ",'I','I',4315,"OKIVLsm");
      end;
      RowMenuItem(2,"موقعیت کالا ",' ',' ',4315,"ItemStatusINLsm");
    end;
    if (IsEnterprise) then begin
      if (UserCanReport("INrsRn","INrsRClass",true)) then begin
        RowMenuItem(3,"تاریخچه کالا ",'h','h',4315,"INHistINLsm");
      end;
    end;
    if (HasJewelleryInterface) then begin
      RowMenuItem(4,"وضعیت کالا هر کد متناوب ",'I','I',4315,"ItemStatusAltINLsm");
    end;
    EndRowMenu;
    SpecMenuGroup("",kSpecMenuGroupTypeButtonsInBottomBarRight,0);
    SpecialMenuWithIcon("جستجو ",'F',4313,2,"INSearchLsm");
  end else begin
    if (HasModIN) then begin
      if (UserCanReport("INInfoRn","",true)) then begin
        SpecialMenu("گزارش وضعیت کالا ",'I',0,"INStatusINLsm");
      end;
      SpecialMenu("موقعیت کالا ",' ',1,"ItemStatusINLsm");
    end;
    if (IsEnterprise) then begin
      if (UserCanReport("INrsRn","INrsRClass",true)) then begin
        SpecialMenu("تاریخچه کالا ",'h',2,"INHistINLsm");
      end;
    end;
    SpecialMenu("جستجو ",'F',2,"INSearchLsm");
    if (HasJewelleryInterface) then begin
      SpecialMenu("وضعیت کالا هر کد متناوب ",'I',5,"ItemStatusAltINLsm");
    end;
  end;
  EndWindow;
end;

window INDClass:8
 wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  integer tilenr;
  real h,h1,h2,h3,h4,h5,v,vm,vs;
  string 255 label;
  WindowBegin("کالا ",INDClass,CGview,-);
  SetWRect(20,80,830,400);//##cc
  Sizeable(-1,-1,-1,0);
  DynamicWindow;
  UseView(INVc);
  Tile(0,87,false,"",Code); 
  v = 6; vs = 20; h = 155; h1 = 300; h2 = 385; h3 = 395; h4 = 285; h5 = 433;
  EditField(h,v, 150,"شماره",Normal,Code,false,0);
  EditField(h2,v,80,"گروه",Normal,Group,false,ITSClass);
  EditField(h,v+=vs,-40,"توصیف",Normal,Name,false,0);
  tilenr = 1;
  TileButton(tilenr,"قیمت گذاری "); tilenr = tilenr + 1;
  if (UserCanAction("AllowJewelleryInterface",false)) then begin
    TileButton(tilenr,"جواهر "); tilenr = tilenr + 1; 
    TileButton(tilenr,"ساعت "); tilenr = tilenr + 1;
  end;
  TileButton(tilenr,"موجودی"); tilenr = tilenr + 1;
  TileButton(tilenr,"انبار "); tilenr = tilenr + 1;
  if (UserCanAction("ViewCostPrice",true)) then begin
  TileButton(tilenr,"هزینه ها"); tilenr = tilenr + 1;
  end;
  TileButton(tilenr,"دستورالعمل "); tilenr = tilenr + 1;
  TileButton(tilenr,"حساب رایج"); tilenr = tilenr + 1;
  if (GuiType==kGuiiPhone) then begin
    TileButton(tilenr,"تصویر"); tilenr = tilenr + 1;
  end;
  TileButton(tilenr,"انواع "); tilenr = tilenr + 1;
  TileButton(tilenr,"متنها "); tilenr = tilenr + 1;
  TileButton(tilenr,"مدل هزینه"); //tilenr = tilenr + 1;
  //TileButton(tilenr,"ارزش کاربر ");
  tilenr = 1;
  CheckBox(h,v+=vs,0,"بسته",Terminated);
  CheckBox(h2,v,0,"غیر قابل فروش",NotForSales);
  Tile(tilenr,209,false,tilenr,Unittext); tilenr = tilenr + 1;
  EditField(h,v=6 ,100,"واحد ",Normal,Unittext,false,UnitSClass);
  if (UserCanAction("AllowJewelleryInterface",false)) and (UserCanAction("ViewCostPrice",true)) then begin
    //EditField(h,v+=vs,100,"هزینه ها",Normal,InPrice,true,0); 
  end;
  EditField(h,v+=vs,100,"قیمت اصلی",Normal,UPrice1,true,0);
  EditField(h,v+=vs,100,"تغییر قیمت پایه",ViewOnly,LastBasePriceChange,true,0);
  EditField(h,v+=vs,100,"عامل قیمت ",Normal,PriceFactor,true,0);
  EditField(h,v+=vs,100,"دستور کالا ",Normal,CalcPrice,false,CPMSClass);
  EditField(h,v+=vs,100,"درصد نرخ فروش ",Normal,Markup,true,0);
  EditField(h,v+=vs,100,"درصد پاداش",Normal,Bonus,true,0);
  EditField(h,v+=vs,-240,"کالاها  ",Normal,Objects,false,ObjSClass);
  EditField(h,v+=vs,-240,"طبقه بندی",Normal,DispGroups,false,DISClass);
  ButtonFrame(h1,v=24,130,4,"نوع کالا ");//##cc
  RadioButton(h1,v,kItemTypePlain,0,"ساده ",ItemType);
  RadioButton(h1,v+=16,kItemTypeStocked,0,"موجودیکالا",ItemType);
  RadioButton(h1,v+=16,kItemTypeStructured,0,"مورد ساختار ",ItemType);
  RadioButton(h1,v+=16,kItemTypeService,0,"خدمات ",ItemType);
  Pict_Field(-205,8,-35,178,"");
  if (GuiType==kGuiCocoa) then begin
    PushButton(-190,182,-50,202,ToolImagePicker,"ضمیمه کردن عکس");//##cc  
  end;
  CheckBox(h1,v+=32,0,"مربوط به کالا بعنوان مواد در پروژه ",ItemMaterial);
  if (UserCanAction("AllowJewelleryInterface",false)) then begin
    Tile(tilenr,110,false,tilenr,-); tilenr = tilenr + 1;
			EditField(h,v=6, 140,"فلز",Normal,Metal,false,0); 
			EditField(h,v+=vs, 140,"وزن ",Normal,RowWeight,false,0); 
			EditField(h,v+=vs, 140,"اندازه ",Normal,Size,false,0); 
			EditField(h,v+=vs, 140,"طول",Normal,Length,false,0); 
			EditField(h,v+=vs, 140,"مرجع",Normal,Reference,false,0); 
			v = 6; 
			EditField(h5+50,v, 140,"جزییات عمده سنگ",Normal,MajStoneDet,false,0); // Edit ************************** Thursday, 11 April 2013 11:43:09
			EditField(h5+50,v+=vs, 140,"رنگ",Normal,Colour,false,0); 
			EditField(h5+50,v+=vs, 140,"وضوح ",Normal,Clarity,false,0); 
			EditField(h5+50,v+=vs, 140,"سند رسمی",Normal,Cert,false,0); 
			EditField(h5+50,v+=vs, 140,"جزییات سنگ کوچک",Normal,MinStoneDet,false,0);
    Tile(tilenr,90,false,tilenr,-); tilenr = tilenr + 1;
			EditField(h,v=6, 140,"برند ساعت ",Normal,WatchBrand,false,0); 
			EditField(h,v+=vs, 140,"نام سبک ",Normal,StyleName,false,0); 
			EditField(h,v+=vs, 140,"فلز ساعت ",Normal,WatchMetal,false,0); 
			EditField(h,v+=vs, 140,"حرکت",Normal,Movement,false,0); 
			v = 6; 
			EditField(h5,v, 140,"دستبند/بند ",Normal,BrcStr,false,0); 
			EditField(h5,v+=vs, 140,"جنسیت ",Normal,Gender,false,0); 
			EditField(h5,v+=vs, 140,"سایر",Normal,Other,false,0); 
			EditField(h5,v+=vs, 140,"غیرها 2 ",Normal,Other2,false,0); 
  end;
  Tile(tilenr,170,false,tilenr,MinLevel);  tilenr = tilenr + 1; // Need to clean this Tile up!
  v = 6;
  vm = v;
  ButtonFrame(h1,v+=14,143,3,"ردیابی شماره سریال ");//##cc
  RadioButton(h1,v,0,0,"هیچ یک",SerNrf);
  RadioButton(h1,v+=16,1,0,"تعداد واحد ",SerNrf);
  RadioButton(h1,v+=16,2,0,"شماره دسته ",SerNrf);
  CheckBox(h1+200,v,0,"فاکتور مبالغ محصول لازم نمی باشد",DonotRequireBatchNrOnIVCash);
  EditField(h,v=6,100,"حداقل سطح",Normal,MinLevel,true,0);
  EditField(h,v+=vs,100,"حداکثر سطح",Normal,MaxLevel,true,0);
  EditField(h,v+=vs  ,100,"بخش",Normal,Department,false,DepSClass);
  EditField(h,v+=vs  ,100,"کد قفسه ",Normal,InvCode,false,0);
  EditField(h,v+=vs,100,"منبع پیش فرض",Normal,DefaultSource,false,SourceSClass);  
  EditField(h5,v ,50,"مالیات محیط زیست به ازای هر کیلو",Normal,RepaPricePerWeight,true,0);
  EditField(h,v+=vs ,100,"سطح خطر ",Normal,HazLevCode,false,HazLevSClass);
  EditField(h5,v ,50,"درصد الکل",Normal,AlcPrc,true,0);
  EditField(h,v+=vs ,100,"واحد 2 ",Normal,Unittext2,false,UnitSClass);
  EditField(h5,v ,50,"گفتگو 1",Normal,Conversion1,true,0);
  EditField(h,v+=vs,100,"ضریب واحد ",Normal,UnitCoefficient,true,0);
  EditField(h5,v ,50,"گفتگو 2",Normal,Conversion2,true,0);
  
  Tile(tilenr,170,false,tilenr,LocArea);  tilenr = tilenr + 1;
  EditField(h,vm=(v=6) ,100," پالت پیش فرض کالا",Normal,DefPalletItem,true,INSClass);
  EditField(h5,v ,80,"منطقه برداشت ",Normal,PickArea,false,LocAreaSClass);
  EditField(h,v+=vs ,100,"ناحیه موقعیت پیش فرض",Normal,LocArea,false,LocAreaSClass);
  EditField(h5,v ,50,"پالت چوبی در منطقه برداشت",Normal,PalletsInPickArea,true,0);
  EditField(h,v+=vs ,50," حداکثر.تعداد برای پالت",Normal,QtyonPallet,true,0);
  EditField(h4,v ,50,"لایه های پالت ",Normal,PalletLayers,true,0);
  EditField(h5,v ,50,"تعداد در هر لایه ",Normal,QtyonPalletLayer,true,0);
  EditField(h,v+=vs ,50,"عرض پالت کامل ",Normal,PalletWidth,true,0);
  EditField(h4,v ,50,"ارتفاع ",Normal,PalletHeight,true,0);
  EditField(h5,v ,50,"عمق",Normal,PalletDepth,true,0);
  EditField(h,v+=vs ,50,"عرض مکان پیش فرض",Normal,DefPosWidth,true,0);
  EditField(h4,v ,50,"ارتفاع ",Normal,DefPosHeight,true,0);
  EditField(h5,v ,50,"عمق",Normal,DefPosDepth,true,0);
  EditField(h,v+=vs ,50,"عرض کالا ",Normal,Width,true,0);
  EditField(h4,v ,50,"ارتفاع ",Normal,Height,true,0);
  EditField(h5,v ,50,"عمق",Normal,Depth,true,0);
  EditField(h,v+=vs ,50,"اندازه کالا ",Normal,Volume,true,0);
  EditField(h4,v ,50,"تراکم",Normal,Density,true,0);
  EditField(h5,v ,50,"وزن خالص ",Normal,NetWeight,true,0);
  EditField(h5,v+=vs ,50,"وزن ",Normal,Weight,true,0);
  if (UserCanAction("ViewCostPrice",true)) then begin
  Tile(tilenr,190,false,tilenr,InPrice);  tilenr = tilenr + 1;
  EditField(h+38,vm=(v=6),100,"هزینه ها",Normal,InPrice,true,0); //##cc
  EditField(h5,v,70,"تغییر قیمت هزینه ",ViewOnly,LastPriceChange,true,0);
  EditField(h+38,v+=vs ,100,"قیمت تمام شده در پایگاه 2",Normal,InPriceB2,true,0); //##cc
  ButtonFrame(h1,v+=24,264,4,"به روز رسانی. قیمت تمام شده فاکتور کالاها "); //##cc
  RadioButton(h1,v,0,0,"خیر",UpdateCost);
  RadioButton(h1,v+=16,1,0,"اخرین هزینه خرید(شامل.اضافی)",UpdateCost);
  RadioButton(h1,v+=16,2,0,"میانگین وزن ",UpdateCost);
  RadioButton(h1,v+=16,3,0,"اخرین هزینه خرید (جز.اضافی)",UpdateCost);
  ButtonFrame(h5=580,v=v-3*16,200,3,"به روز رسانی.قیمت تمام شده.سهام .تغییر ارزش پول"); //##cc
  RadioButton(h5,v,0,0,"خیر",SRUpdateCost);
  RadioButton(h5,v+=16,1,0,"اخرین هزینه تخمین ارزش پول",SRUpdateCost);
  RadioButton(h5,v+=16,2,0,"میانگین وزن ",SRUpdateCost);
  EditField(h+38,v=vm+2*vs,100,"هزینه اضافی",Normal,ExtraCost,true,0); //##cc
  EditField(h+38,v+=vs ,100,"میانگین وزن ",Normal,WeighedAvPrice,true,0); //##cc
  EditField(h+38,v+=vs ,100,"میانگین وزن. پایه 2",Normal,WeighedAvPriceB2,true,0); //##cc
  EditField(h+38,v+=vs ,100,"اخرین هزینه خرید (شامل.اضافی)",Normal,LastPurchPrice,true,0); //##cc
  EditField(h+38,v+=vs ,100,"اخرین قیمت خرید ([جز. اضافی)",Normal,LastPurchPrice2,true,0); //##cc
  EditField(h+38,v+=vs ,100,"اخرین خرید رایج",Normal,LastPurchCurncyCode,false,CurncyCodeSClass); //##cc
  EditField(h+38,v+=vs ,100,"کرایه حمل مقطوع ",Normal,FixedFreight,true,0); //##cc
  CheckBox(h1,v,0,"شامل هزینه ثابت کالا ",InclItemFreight);
  end;
  Tile(tilenr,170,false,tilenr,Recepy);  tilenr = tilenr + 1;
  EditField(h,v=6 ,120,"دستورالعمل ",Normal,Recepy,false,RecSClass);
  CheckBox(h1,v,0,"جابجایی قطعات در مدت ورود ",ExplodeRec);
  EditField(h,v+=vs ,120,"رسید فاکتور ",Normal,InvRecepy,false,RecSClass);
  EditField(h2,v,150,"بارکد",Normal,BarCode,false,0);
  EditField(h,v+=vs ,120,"مورد قرارداد",Normal,ContractItem,false,INSClass);
  EditField(h2,v,150,"کد کالا",Normal,EUCodex,false,CommoditySClass);
  EditField(h,v+=vs ,120,"صورتحساب اجاره ",Normal,RentalItem,false,INSClass);
  EditField(h2,v,150,"کد سفارت هلند",Normal,EKNCode,false,0); // i think it is same as Commodity Code
  EditField(h2,v+=vs,150,"طبقه بندی محصولات وسرویسها",Normal,CPSCode,false,0);// Edit ************************** Monday, 3 September 2012 09:29:01
  EditField(h,v+=vs ,120,"ماه گارانتی ",Normal,WarrantyLength,true,0);
  EditField(h2,v,150,"رنگ",Normal,colnr,false,SetSClass);
  EditField(h,v+=vs,-40,"کد جایگزین",Normal,AlternativeCode,false,0);
  EditField(h,v+=vs,-40,"هشدار ",Normal,WarnText1,false,0);
  Tile(tilenr,170,false,tilenr,SalesAcc);  tilenr = tilenr + 1;
  v = 6;
  vm = v;
  EditField(h,vm,55,"کارفرماحراج حساب فروش",Normal,SalesAcc,false,AccSClass);
  EditField(h,v+=vs,55,VATZoneNameRUS & "فروش حساب رایج ",Normal,EUSalesAcc,false,AccSClass);
  EditField(h,v+=vs,55,"فروش صادرات حساب رایج",Normal,ExpSalesAcc,false,AccSClass);
  EditField(h,v+=vs,55,"خدمات فروش حساب غیر محسوس",Normal,SVOInvbleSalesAcc,false,AccSClass); 
  EditField(h,v+=vs,55,"خدمات فروش گارانتی حساب ارزی ",Normal,SVOWarrantySalesAcc,false,AccSClass); 
  EditField(h,v+=vs,55,"خدمات قرارداد فروش حساب ",Normal,SVOContractSalesAcc,false,AccSClass); 
  EditField(h,v+=vs,55,"خدمات توافق فروش برای حساب ",Normal,SVOGoodwillSalesAcc,false,AccSClass); 

  EditField(h,v+=vs,55,"کاربرد قطعات",Normal,CompUsage,false,AccSClass);

  EditField(h2=360,v=vm,55,"کارفرماهزینه حساب رایج",Normal,CostAcc,false,AccSClass);
  EditField(h2,v+=vs,55,VATZoneNameRUS & "حساب رایج هزینه ها",Normal,EUCostAcc,false,AccSClass);
  EditField(h2,v+=vs,55,"هزینه صادرات حساب رایج",Normal,ExpCostAcc,false,AccSClass);
  EditField(h2,v+=vs,55,"خدمات هزینه حساب غیر محسوس",Normal,SVOInvbleCostAcc,false,AccSClass); 
  EditField(h2,v+=vs,55,"خدمات هزینه گارانتی حساب ارزی ",Normal,SVOWarrantyCostAcc,false,AccSClass); 
  EditField(h2,v+=vs,55,"خدمات قرارداد هزینه حساب ",Normal,SVOContractCostAcc,false,AccSClass); 
  EditField(h2,v+=vs,55,"خدمات توافق هزینه برای حساب ",Normal,SVOGoodwillCostAcc,false,AccSClass); 
  EditField(h2,v+=vs,55,"روند حساب جاری هتل ",Normal,HotelWIPAcc,false,AccSClass);

  EditField(h2=530,v=vm,20,"کارفرمامالیات ارزش بر افزودهکد",Normal,VATCode,false,VATCodeSClass);
  EditField(h2,v+=vs,20,VATZoneNameRUS & "کارفرمامالیات ارزش بر افزودهکد",Normal,VATCodeEU,false,VATCodeSClass);
  EditField(h2,v+=vs,20,"صادرات  مالیات بر ارزش افزوده برنامه",Normal,VATCodeExp,false,VATCodeSClass);
  CheckBox(h2,v+=20,0,"محاسبه مالیات",Perceptions);
  CheckBox(h2,v+=16,0,"محاسبه مالیات موضوعی",Withholdings);
  EditField(h2=670,v=vm,50,"کارفرمامالیات موقت",Normal,TaxTemplateCode,false,TaxTemplateSClass);
  EditField(h2,v+=vs,50,VATZoneNameRUS & "مالیات موقت ",Normal,TaxTemplateCodeEU,false,TaxTemplateSClass);
  EditField(h2,v+=vs,50,"مالیات موقتی صادرات",Normal,TaxTemplateCodeExp,false,TaxTemplateSClass);
  if (GuiType==kGuiiPhone) then begin
    Tile(tilenr,70,false,tilenr,-);  tilenr = tilenr + 1;
    AttachmentDisplay(10,10,200,200);
//    PushButton(30,10,-80,40,ToolImagePicker,"Take picture");
//    ControlLabel(0,0,0,0,"Take picture","SystemFont",17,kTextStyleBold,AdjCenter,patM4ReportsTextBlue);
  end;
  Tile(tilenr,70,false,tilenr,VARMask);  tilenr = tilenr + 1;
  EditField(h,v=6,-40,"ماسکهای مختلف ",Normal,VARMask,false,VARMasksSClass);
  EditField(h,v+=vs,-40,"ترتیب گزارش ",Normal,VARRepOrder,false,VARMasksSClass);
  EditField(h,v+=vs,-40,"زیر مجموعه ",Normal,VARSubsets,false,VARSubsetsSClass);
  Tile(tilenr,120,true,tilenr,Math);  tilenr = tilenr + 1;
  v = 24;
  MatrixBegin(4,v,-32,-40,-,99);
  MatCol(1,24,"زبان ",0,LangCode,false,LangSClass);
  MatCol(1,94,"متنها ",0,Text,false,0);
  EndMatrix;
  Tile(tilenr,220,false,tilenr,CostPerc);  tilenr = tilenr + 1;
  ButtonFrame(h=100,vm=(v=20),230,6,"نمونه هزینه اولیه ");
  RadioButton(h,v,0,0,"پیش فرض",PrimaryCostModel);
  RadioButton(h,v+=16,1,0,"قیمت تمام شده ",PrimaryCostModel);
  RadioButton(h,v+=16,2,0,"درصد _ قیمت اصلی",PrimaryCostModel);
  EditField(h+150,v,55,"%",Normal,CostPerc,true,0);
  RadioButton(h,v+=16,3,0,"میانگین وزن ",PrimaryCostModel);
  RadioButton(h,v+=16,4,0,"صف ",PrimaryCostModel);
  RadioButton(h,v+=16,kCostModelNoneItem,0,"هیچ یک",PrimaryCostModel);
  ButtonFrame(h,v+=40,230,3,"مدل هزینه در صف");
  RadioButton(h,v,0,0,"پیش فرض",QueuedCostModel);
  RadioButton(h,v+=16,1,0,"قیمت نفت صنعتی",QueuedCostModel);
  RadioButton(h,v+=16,2,0,"قیمت LIFO",QueuedCostModel);  
  
  ButtonFrame(h2=380,v=vm,250,3,"قیمت تمام شده برای شماره سریال");//##cc
  RadioButton(h2,v,0,0,"پیش فرض",FIFOPerSerialNr);
  RadioButton(h2,v+=16,1,0,"قیمت تمام شده برای شماره سریال نمی باشد",FIFOPerSerialNr);
  RadioButton(h2,v+=16,2,0,"قیمت تمام شده برای شماره سریال",FIFOPerSerialNr);  
  ButtonFrame(h2,v+=40,250,3,"مدل هزینه در صف بر اساس مکان");//##cc
  RadioButton(h2,v,0,0,"پیش فرض",FIFOPerLocation);
  RadioButton(h2,v+=16,1,0,"هزینه در صف نه بر اساس مکان",FIFOPerLocation);
  RadioButton(h2,v+=16,2,0,"مدل هزینه در صف بر اساس مکان",FIFOPerLocation);  
  ButtonFrame(h2,v+=40,250,3,"انبار هر موقعیت ");//##cc
  RadioButton(h2,v,0,0,"پیش فرض",WAPerLocation);
  RadioButton(h2,v+=16,1,0,"انبار نه در هر محل ",WAPerLocation);
  RadioButton(h2,v+=16,2,0,"انبار هر موقعیت ",WAPerLocation);  

  
  if (UserCanReport("INInfoRn","",true)) then begin 
  SpecialMenu("گزارش وضعیت کالا ",'I',0,"INStatusINDsm");
  end;
  SpecialMenu("ایجاد خرید کالا",' ',1,"PIFromINDsm");
  SpecialMenu("ایجاد رسید",' ',2,"RecFromINDsm");
//  SpecMenuItem("Recalculate Price List",' ',2);
  if (UserCanReport("INrsRn","INrsRClass",true)) then begin 
  SpecialMenu("تاریخچه کالا ",'h',3,"INHistINDsm");
  end;
  SpecialMenu("وضعیت موقعیتی کالا ",' ',4,"LocItemStatDsm");
  SpecialMenu("قیمت چاپ",' ',5,"DoPrintLablDsm");// Edit ************************** Tuesday, 27 May 2014 10:45:08
  if (UserCanAction("AllowJewelleryInterface",false)) and (UserCanReport("INInfoRn","",true)) then begin 
   // SpecialMenu("وضعیت کالا هر کد متناوب ",'S',5,"ItemStatusAltINDsm");
  end;
  EndWindow;
end;

window NewINDClass:1
 wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  integer tilenr,flipnr,f;
  real h,h1,h2,h3,h4,h5,v,vm,vs;
  string 255 label;
  WindowBegin("محصولات جدید",NewINDClass,CGview,-);
  SetWRect(20,80,830,400);//##cc
  Sizeable(-1,-1,-1,0);
  UseView(NewINVc);
  Tile(0,87,false,"",SerNr); 
  v = 6; vs = 20; h = 155; h1 = 300; h2 = 385; h3 = 395; h4 = 285; h5 = 433;
  EditField(h,v, 150,"شماره",Normal,SerNr,false,0);
  EditField(h2,v,80,"گروه",Normal,Group,false,ITSClass);
  EditField(h5+130,v,80,"کاربر",ViewOnly,SalesMan,false,0);
  v=v+vs;
  EditField(h5+130,v,80,"تاریخ",ViewOnly,TransDate,false,PasteCurDate);
  CheckBox(-110,v,0,"بوجود آوردن محصولات",OKFlag);
  
  //EditField(h,v+=vs,-40,"توصیف",Normal,Name,false,0);
  tilenr = 1;
  TileButton(tilenr,"قیمت گذاری "); tilenr = tilenr + 1;
	TileButton(tilenr,"جواهر "); tilenr = tilenr + 1; 
	//TileButton(tilenr,"ساعت "); tilenr = tilenr + 1;
  TileButton(tilenr,"موجودی"); tilenr = tilenr + 1;
  //TileButton(tilenr,"انبار "); tilenr = tilenr + 1;
  //TileButton(tilenr,"هزینه ها"); tilenr = tilenr + 1;
  TileButton(tilenr,"دستورالعمل "); tilenr = tilenr + 1;
  TileButton(tilenr,"حساب رایج"); tilenr = tilenr + 1;
  //TileButton(tilenr,"انواع "); tilenr = tilenr + 1;
  //TileButton(tilenr,"مدل هزینه"); //tilenr = tilenr + 1;
  TileButton(tilenr,"ماتریکس"); tilenr = tilenr + 1;
  tilenr = 1;
  //CheckBox(h,v+=vs,0,"بسته",Terminated);
  //CheckBox(h2,v,0,"غیر قابل فروش",NotForSales);
  
  
/*Цена*/  Tile(tilenr,209,false,tilenr,Unittext); tilenr = tilenr + 1;
		EditField(h,v=6 ,100,"واحد ",Normal,Unittext,false,UnitSClass);
		//EditField(h,v+=vs,100,"قیمت اصلی",Normal,UPrice1,true,0);
		//EditField(h,v+=vs,100,"تغییر قیمت پایه",ViewOnly,LastBasePriceChange,true,0);
		//EditField(h,v+=vs,100,"عامل قیمت ",Normal,PriceFactor,true,0);
		//EditField(h,v+=vs,100,"دستور کالا ",Normal,CalcPrice,false,CPMSClass);
		//EditField(h,v+=vs,100,"درصد نرخ فروش ",Normal,Markup,true,0);
		//EditField(h,v+=vs,100,"درصد پاداش",Normal,Bonus,true,0);
		EditField(h,v+=vs,-240,"کالاها  ",Normal,Objects,false,ObjSClass);
		EditField(h,v+=vs,-240,"طبقه بندی",Normal,DispGroups,false,DISClass);
		ButtonFrame(h5+150,v=24,130,4,"نوع کالا ");//##cc
		RadioButton(h5+150,v,kItemTypePlain,0,"ساده ",ItemType);
		RadioButton(h5+150,v+=16,kItemTypeStocked,0,"موجودیکالا",ItemType);
		RadioButton(h5+150,v+=16,kItemTypeStructured,0,"مورد ساختار ",ItemType);
		RadioButton(h5+150,v+=16,kItemTypeService,0,"خدمات ",ItemType);
		//CheckBox(h1,v+=32,0,"مربوط به کالا بعنوان مواد در پروژه ",ItemMaterial);
/*Ювелир*/	Tile(tilenr,110,false,tilenr,-); tilenr = tilenr + 1;
		EditField(h,v=6, 140,"فلز",Normal,Metal,false,0); 
		EditField(h,v+=vs, 140,"وزن ",Normal,RowWeight,false,0); 
		EditField(h,v+=vs, 140,"اندازه ",Normal,Size,false,0); 
		//EditField(h,v+=vs, 140,"طول",Normal,Length,false,0); 
		EditField(h,v+=vs, 140,"لینک",Normal,Reference,false,0); 
		v = 6; 
		EditField(h5+50,v, 140,"جزییات عمده سنگ",Normal,MajStoneDet,false,0); // Edit ************************** Thursday, 11 April 2013 11:43:09
		EditField(h5+50,v+=vs, 140,"رنگ",Normal,Colour,false,0); 
		//EditField(h5+50,v+=vs, 140,"وضوح ",Normal,Clarity,false,0); 
		//EditField(h5+50,v+=vs, 140,"سند رسمی",Normal,Cert,false,0); 
		//EditField(h5+50,v+=vs, 140,"جزییات سنگ کوچک",Normal,MinStoneDet,false,0);
/*Часы*/	/*Tile(tilenr,90,false,tilenr,-); tilenr = tilenr + 1;
		EditField(h,v=6, 140,"برند ساعت ",Normal,WatchBrand,false,0); 
		EditField(h,v+=vs, 140,"نام سبک ",Normal,StyleName,false,0); 
		EditField(h,v+=vs, 140,"فلز ساعت ",Normal,WatchMetal,false,0); 
		EditField(h,v+=vs, 140,"حرکت",Normal,Movement,false,0); 
		v = 6; 
		EditField(h5,v, 140,"دستبند/بند ",Normal,BrcStr,false,0); 
		EditField(h5,v+=vs, 140,"رود",Normal,Gender,false,0); 
		EditField(h5,v+=vs, 140,"سایر",Normal,Other,false,0); 
		EditField(h5,v+=vs, 140,"غیرها 2 ",Normal,Other2,false,0); */
/*Склад*/  Tile(tilenr,170,false,tilenr,SerNrf);  tilenr = tilenr + 1; // Need to clean this Tile up!
		v = 6;
		vm = v;
		ButtonFrame(h1,v+=14,143,3,"ردیابی شماره سریال ");//##cc
		RadioButton(h1,v,0,0,"هیچ یک",SerNrf);
		RadioButton(h1,v+=16,1,0,"تعداد واحد ",SerNrf);
		RadioButton(h1,v+=16,2,0,"شماره دسته ",SerNrf);
		//CheckBox(h1+200,v,0,"فاکتور مبالغ محصول لازم نمی باشد",DonotRequireBatchNrOnIVCash);
		/*EditField(h,v=6,100,"حداقل سطح",Normal,MinLevel,true,0);
		EditField(h,v+=vs,100,"حداکثر سطح",Normal,MaxLevel,true,0);
		EditField(h,v+=vs  ,100,"بخش",Normal,Department,false,DepSClass);
		EditField(h,v+=vs  ,100,"کد قفسه ",Normal,InvCode,false,0);
		EditField(h,v+=vs,100,"منبع پیش فرض",Normal,DefaultSource,false,SourceSClass);  
		EditField(h5,v ,50,"مالیات محیط زیست به ازای هر کیلو",Normal,RepaPricePerWeight,true,0);
		EditField(h,v+=vs ,100,"سطح خطر ",Normal,HazLevCode,false,HazLevSClass);
		EditField(h5,v ,50,"درصد الکل",Normal,AlcPrc,true,0);
		EditField(h,v+=vs ,100,"واحد 2 ",Normal,Unittext2,false,UnitSClass);
		EditField(h5,v ,50,"گفتگو 1",Normal,Conversion1,true,0);
		EditField(h,v+=vs,100,"ضریب واحد ",Normal,UnitCoefficient,true,0);
		EditField(h5,v ,50,"گفتگو 2",Normal,Conversion2,true,0);*/
/*Упр. складом*/  /*Tile(tilenr,170,false,tilenr,LocArea);  tilenr = tilenr + 1;
		EditField(h,vm=(v=6) ,100," پالت پیش فرض کالا",Normal,DefPalletItem,true,INSClass);
		EditField(h5,v ,80,"منطقه برداشت ",Normal,PickArea,false,LocAreaSClass);
		EditField(h,v+=vs ,100,"ناحیه موقعیت پیش فرض",Normal,LocArea,false,LocAreaSClass);
		EditField(h5,v ,50,"پالت چوبی در منطقه برداشت",Normal,PalletsInPickArea,true,0);
		EditField(h,v+=vs ,50," حداکثر.تعداد برای پالت",Normal,QtyonPallet,true,0);
		EditField(h4,v ,50,"لایه های پالت ",Normal,PalletLayers,true,0);
		EditField(h5,v ,50,"تعداد در هر لایه ",Normal,QtyonPalletLayer,true,0);
		EditField(h,v+=vs ,50,"عرض پالت کامل ",Normal,PalletWidth,true,0);
		EditField(h4,v ,50,"ارتفاع ",Normal,PalletHeight,true,0);
		EditField(h5,v ,50,"عمق",Normal,PalletDepth,true,0);
		EditField(h,v+=vs ,50,"عرض مکان پیش فرض",Normal,DefPosWidth,true,0);
		EditField(h4,v ,50,"ارتفاع ",Normal,DefPosHeight,true,0);
		EditField(h5,v ,50,"عمق",Normal,DefPosDepth,true,0);
		EditField(h,v+=vs ,50,"عرض کالا ",Normal,Width,true,0);
		EditField(h4,v ,50,"ارتفاع ",Normal,Height,true,0);
		EditField(h5,v ,50,"عمق",Normal,Depth,true,0);
		EditField(h,v+=vs ,50,"اندازه کالا ",Normal,Volume,true,0);
		EditField(h4,v ,50,"تراکم",Normal,Density,true,0);
		EditField(h5,v ,50,"وزن خالص ",Normal,NetWeight,true,0);
		EditField(h5,v+=vs ,50,"وزن ",Normal,Weight,true,0);*/
/*Стоимость*/  //Tile(tilenr,190,false,tilenr,InPrice);  tilenr = tilenr + 1;
		//EditField(h+38,vm=(v=6),100,"هزینه ها",Normal,InPrice,true,0); //##cc
		/*EditField(h5,v,70,"تغییر قیمت هزینه ",ViewOnly,LastPriceChange,true,0);
		EditField(h+38,v+=vs ,100,"قیمت تمام شده در پایگاه 2",Normal,InPriceB2,true,0); //##cc
		ButtonFrame(h1,v+=24,264,4,"به روز رسانی. قیمت تمام شده فاکتور کالاها "); //##cc
		RadioButton(h1,v,0,0,"خیر",UpdateCost);
		RadioButton(h1,v+=16,1,0,"اخرین هزینه خرید(شامل.اضافی)",UpdateCost);
		RadioButton(h1,v+=16,2,0,"میانگین وزن ",UpdateCost);
		RadioButton(h1,v+=16,3,0,"اخرین هزینه خرید (جز.اضافی)",UpdateCost);
		ButtonFrame(h5=580,v=v-3*16,200,3,"به روز رسانی.قیمت تمام شده.سهام .تغییر ارزش پول"); //##cc
		RadioButton(h5,v,0,0,"خیر",SRUpdateCost);
		RadioButton(h5,v+=16,1,0,"اخرین هزینه تخمین ارزش پول",SRUpdateCost);
		RadioButton(h5,v+=16,2,0,"میانگین وزن ",SRUpdateCost);
		EditField(h+38,v=vm+2*vs,100,"هزینه اضافی",Normal,ExtraCost,true,0); //##cc
		EditField(h+38,v+=vs ,100,"میانگین وزن ",Normal,WeighedAvPrice,true,0); //##cc
		EditField(h+38,v+=vs ,100,"میانگین وزن. پایه 2",Normal,WeighedAvPriceB2,true,0); //##cc
		EditField(h+38,v+=vs ,100,"اخرین هزینه خرید (شامل.اضافی)",Normal,LastPurchPrice,true,0); //##cc
		EditField(h+38,v+=vs ,100,"اخرین قیمت خرید ([جز. اضافی)",Normal,LastPurchPrice2,true,0); //##cc*/
		//EditField(h+38,v+=vs ,100,"اخرین خرید رایج",Normal,LastPurchCurncyCode,false,CurncyCodeSClass); //##cc
		/*EditField(h+38,v+=vs ,100,"کرایه حمل مقطوع ",Normal,FixedFreight,true,0); //##cc
		CheckBox(h1,v,0,"شامل هزینه ثابت کالا ",InclItemFreight);*/
/*Структура*/  Tile(tilenr,170,false,tilenr,Recepy);  tilenr = tilenr + 1;
		//EditField(h,v=6 ,120,"دستورالعمل ",Normal,Recepy,false,RecSClass);
		//CheckBox(h1,v,0,"جابجایی قطعات در مدت ورود ",ExplodeRec);
		//EditField(h,v+=vs ,120,"رسید فاکتور ",Normal,InvRecepy,false,RecSClass);
		EditField(h2,v=6,150,"بارکد",Normal,BarCode,false,0);
		//EditField(h,v+=vs ,120,"مورد قرارداد",Normal,ContractItem,false,INSClass);
		//EditField(h2,v+=vs,150,"کد کالا",Normal,EUCodex,false,CommoditySClass);
		//EditField(h,v+=vs ,120,"صورتحساب اجاره ",Normal,RentalItem,false,INSClass);
		EditField(h2,v+=vs,150,"کد سفارت هلند",Normal,EKNCode,false,0); // i think it is same as Commodity Code
		EditField(h2,v+=vs,150,"طبقه بندی محصولات وسرویسها",Normal,CPSCode,false,0);// Edit ************************** Monday, 3 September 2012 09:29:01
		//EditField(h,v+=vs ,120,"ماه گارانتی ",Normal,WarrantyLength,true,0);
		//EditField(h2,v,150,"رنگ",Normal,colnr,false,SetSClass);
		EditField(h,v+=vs,-40,"کد جایگزین",Normal,AlternativeCode,false,0);
		//EditField(h,v+=vs,-40,"هشدار ",Normal,WarnText1,false,0);
/*Счета*/  Tile(tilenr,170,false,tilenr,SalesAcc);  tilenr = tilenr + 1;
		v = 6;
		vm = v;
		/*EditField(h,vm,55,"کارفرماحراج حساب فروش",Normal,SalesAcc,false,AccSClass);
		EditField(h,v+=vs,55,VATZoneNameRUS & "فروش حساب رایج ",Normal,EUSalesAcc,false,AccSClass);
		EditField(h,v+=vs,55,"فروش صادرات حساب رایج",Normal,ExpSalesAcc,false,AccSClass);
		EditField(h,v+=vs,55,"خدمات فروش حساب غیر محسوس",Normal,SVOInvbleSalesAcc,false,AccSClass); 
		EditField(h,v+=vs,55,"خدمات فروش گارانتی حساب ارزی ",Normal,SVOWarrantySalesAcc,false,AccSClass); 
		EditField(h,v+=vs,55,"خدمات قرارداد فروش حساب ",Normal,SVOContractSalesAcc,false,AccSClass); 
		EditField(h,v+=vs,55,"خدمات توافق فروش برای حساب ",Normal,SVOGoodwillSalesAcc,false,AccSClass); 
		EditField(h,v+=vs,55,"کاربرد قطعات",Normal,CompUsage,false,AccSClass);
		EditField(h2=360,v=vm,55,"کارفرماهزینه حساب رایج",Normal,CostAcc,false,AccSClass);
		EditField(h2,v+=vs,55,VATZoneNameRUS & "حساب رایج هزینه ها",Normal,EUCostAcc,false,AccSClass);
		EditField(h2,v+=vs,55,"هزینه صادرات حساب رایج",Normal,ExpCostAcc,false,AccSClass);
		EditField(h2,v+=vs,55,"خدمات هزینه حساب غیر محسوس",Normal,SVOInvbleCostAcc,false,AccSClass); 
		EditField(h2,v+=vs,55,"خدمات هزینه گارانتی حساب ارزی ",Normal,SVOWarrantyCostAcc,false,AccSClass); 
		EditField(h2,v+=vs,55,"خدمات قرارداد هزینه حساب ",Normal,SVOContractCostAcc,false,AccSClass); 
		EditField(h2,v+=vs,55,"خدمات توافق هزینه برای حساب ",Normal,SVOGoodwillCostAcc,false,AccSClass); 
		EditField(h2,v+=vs,55,"روند حساب جاری هتل ",Normal,HotelWIPAcc,false,AccSClass);*/
		EditField(h2=530,v=vm,40,"کارفرمامالیات ارزش بر افزودهکد",Normal,VATCode,false,VATCodeSClass);
		/*EditField(h2,v+=vs,20,VATZoneNameRUS & "کارفرمامالیات ارزش بر افزودهکد",Normal,VATCodeEU,false,VATCodeSClass);
		EditField(h2,v+=vs,20,"صادرات  مالیات بر ارزش افزوده برنامه",Normal,VATCodeExp,false,VATCodeSClass);
		CheckBox(h2,v+=20,0,"محاسبه مالیات",Perceptions);
		CheckBox(h2,v+=16,0,"محاسبه مالیات موضوعی",Withholdings);
		EditField(h2=670,v=vm,50,"کارفرمامالیات موقت",Normal,TaxTemplateCode,false,TaxTemplateSClass);
		EditField(h2,v+=vs,50,VATZoneNameRUS & "مالیات موقت ",Normal,TaxTemplateCodeEU,false,TaxTemplateSClass);
		EditField(h2,v+=vs,50,"مالیات موقتی صادرات",Normal,TaxTemplateCodeExp,false,TaxTemplateSClass);*/
/*Варианты*/  /*Tile(tilenr,70,false,tilenr,VARMask);  tilenr = tilenr + 1;
		EditField(h,v=6,-40,"ماسکهای مختلف ",Normal,VARMask,false,VARMasksSClass);
		EditField(h,v+=vs,-40,"ترتیب گزارش ",Normal,VARRepOrder,false,VARMasksSClass);
		EditField(h,v+=vs,-40,"زیر مجموعه ",Normal,VARSubsets,false,VARSubsetsSClass);*/
/*Модель ст-ти*/	/*Tile(tilenr,220,false,tilenr,CostPerc);  tilenr = tilenr + 1;
		ButtonFrame(h=100,vm=(v=20),230,6,"نمونه هزینه اولیه ");
		RadioButton(h,v,0,0,"پیش فرض",PrimaryCostModel);
		RadioButton(h,v+=16,1,0,"قیمت تمام شده ",PrimaryCostModel);
		RadioButton(h,v+=16,2,0,"درصد _ قیمت اصلی",PrimaryCostModel);
		EditField(h+150,v,55,"%",Normal,CostPerc,true,0);
		RadioButton(h,v+=16,3,0,"میانگین وزن ",PrimaryCostModel);
		RadioButton(h,v+=16,4,0,"صف ",PrimaryCostModel);
		RadioButton(h,v+=16,kCostModelNoneItem,0,"هیچ یک",PrimaryCostModel);
		ButtonFrame(h,v+=40,230,3,"مدل هزینه در صف");
		RadioButton(h,v,0,0,"پیش فرض",QueuedCostModel);
		RadioButton(h,v+=16,1,0,"قیمت نفت صنعتی",QueuedCostModel);
		RadioButton(h,v+=16,2,0,"قیمت LIFO",QueuedCostModel);  
		ButtonFrame(h2=380,v=vm,250,3,"قیمت تمام شده برای شماره سریال");//##cc
		RadioButton(h2,v,0,0,"پیش فرض",FIFOPerSerialNr);
		RadioButton(h2,v+=16,1,0,"قیمت تمام شده برای شماره سریال نمی باشد",FIFOPerSerialNr);
		RadioButton(h2,v+=16,2,0,"قیمت تمام شده برای شماره سریال",FIFOPerSerialNr);  
		ButtonFrame(h2,v+=40,250,3,"مدل هزینه در صف بر اساس مکان");//##cc
		RadioButton(h2,v,0,0,"پیش فرض",FIFOPerLocation);
		RadioButton(h2,v+=16,1,0,"هزینه در صف نه بر اساس مکان",FIFOPerLocation);
		RadioButton(h2,v+=16,2,0,"مدل هزینه در صف بر اساس مکان",FIFOPerLocation);  
		ButtonFrame(h2,v+=40,250,3,"انبار هر موقعیت ");//##cc
		RadioButton(h2,v,0,0,"پیش فرض",WAPerLocation);
		RadioButton(h2,v+=16,1,0,"انبار نه در هر محل ",WAPerLocation);
		RadioButton(h2,v+=16,2,0,"انبار هر موقعیت ",WAPerLocation);  */
		/*Матрица*/	Tile(tilenr,400,true,tilenr,-);  tilenr = tilenr + 1;
		MatrixBegin(3,v+=32,-46,-20,-,1000);
		Flip(0);
		MatCol(1,28,"کالا ",0,Code,false,INSClass);
		flipnr = 1;
		Flip(flipnr); flipnr = flipnr + 1;
			MatCol(1,130,"توصیف",0,Name,false,0);
			MatCol(1,360,"گروه",0,Group,false,ITSClass);
			MatCol(1,-280,"واحد ",0,Unittext,false,UnitSClass);
			//MatCol(1,-240,"Тип",0,ItemType,true,0);
			MatCol(1,-200,"کالاها  ",0,Objects,false,ObjSClass);
			MatCol(1,-120,"طبقه بندی",0,DispGroups,false,DISClass);
		Flip(flipnr); flipnr = flipnr + 1;
		MatCol(1,100,"فلز",0,Metal,false,0);
		MatCol(1,200,"وزن ",0,RowWeight,false,0);
		MatCol(1,300,"اندازه ",0,Size,false,0);
		MatCol(1,350,"لینک",0,Reference,false,0);
		MatCol(1,-220,"جزییات عمده سنگ",0,MajStoneDet,true,0);
		MatCol(1,-80,"رنگ",0,Colour,false,0);
		Flip(flipnr); flipnr = flipnr + 1;
		MatCol(1,130,"توصیف",0,Name,false,0);
		MatCol(1,-50,"ثبت سریال",0,SerNrf,false,0);
		//MatCol(1,200,"Стоимость осн.вал.",0,InPrice,true,0);
		//MatCol(1,-240,"اخرین خرید رایج",0,LastPurchCurncyCode,true,CurncyCodeSClass);
		Flip(flipnr); flipnr = flipnr + 1;
		MatCol(1,100,"بارکد",0,BarCode,false,0);
		//MatCol(1,150,"کد کالا",0,EUCodex,true,0);
		MatCol(1,200,"کد سفارت هلند",0,EKNCode,false,0);
		MatCol(1,300,"طبقه بندی محصولات وسرویسها",0,CPSCode,false,0);
		MatCol(1,400,"کد جایگزین",0,AlternativeCode,false,0);
		Flip(flipnr); flipnr = flipnr + 1;
		MatCol(1,130,"توصیف",0,Name,false,0);
		MatCol(1,-160,"قیمت کالاهای فروخته شده",0,LastPurchPrice2,false,0);
		MatCol(1,-80,"ارزها",0,LastPurchCurncyCode,false,CurncyCodeSClass);
		EndMatrix;
		vs = 22;
		v = v+1; 
		for (f=1;f<flipnr;f=f+1) begin
			VTab(-35,v,-16,v+vs,ToolFlip,f,chr(asc("A") + f - 1)); 
			v = v + vs;
		end;
		
  EndWindow;
end;

window NewINLClass:1
 wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("محصولات جدید",NewINLClass,CGmlist,RcType);
  SetWRect(20,80,509,298);
  SpawnClass(NewINDClass);
  Sizeable(-1,-1,0,0);
  UseView(NewINVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"شماره",SerNr,false,SerNr);
  RlColKey(81,81,"تاریخ",TransDate,false,TransDate);
  RlColKey(240,79,"هدایت کردن",OKFlag,false,OKFlag);
  RlColKey(-150,-150,"کاربر",SalesMan,false,SalesMan);
  SearchField("جستجو ");
  EndWindow;
end;

//Валюта

window CurncyCodeDClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,h3,h4,v,vs;
  Integer tilenr;

  WindowBegin("ارز",CurncyCodeDClass,CGview,CurncyCodeView);
  SetWRect(64,80,540,377);
  Sizeable(-1,-1,0,0);
  UseView(CurncyCodeVc);
  h=70; h2=h+105; h3=h2+105; vs=20;
  Tile(0,50,false,"",CurncyCode);
  EditField(h,v=6,50,"کد",St_i,CurncyCode,false,0);
  EditField(h2,v,-50,"نام",Normal,Comment,false,0);
/* These values have been moved to a setting in the System Module called Currency Round Off */
/* For this to work, you need to add the currencies into this setting. */
//  EditField(h,v+=vs,50,"گرد کردن ",Normal,RndTotal,true,0);
  tilenr = 1;
  TileButton(tilenr,"طول "); tilenr = tilenr + 1;
  if (IsEnterprise) then begin
    TileButton(tilenr,"اتحادیه اقتصادی وپولی"); tilenr = tilenr + 1;
    TileButton(tilenr,"گرد کردن "); tilenr = tilenr + 1;
  end;
  TileButton(tilenr,"متن "); tilenr = tilenr + 1;
  if (IsEnterprise) then begin
    TileButton(tilenr,"سایر"); tilenr = tilenr + 1;
  end;
//  CheckBox(h2,v,0,"کاربرد گرد کردن برای سطر مبالغ ",RoundLines);
//  CheckBox(h2,v+=16,0,"کاربرد گرد کردنمالیات بر ارزش افزوده ",RoundVAT);
  tilenr = 1;
  Tile(tilenr,85,false,tilenr,DefaultFrom); tilenr = tilenr + 1;
  if (HasBase2) then begin
    StaticText(h,v=16,"ارز از",false);
    StaticText(h2,v,"ارز پایه 1",false);
    StaticText(h3,v,"ارز پایه 2",false);
    EditField(h,v+=6,80,"پیش فرض",Normal,DefaultFrom,true,0);
    EditField(h2,v,80,"",Normal,DefaultTo1,true,0);
    EditField(h3,v,80,"",Normal,DefaultTo2,true,0);
    EditField(h,v+=20,80,"حداقل ",Normal,MinFrom,true,0);
    EditField(h2,v,80,"",Normal,MinTo1,true,0);
    EditField(h3,v,80,"",Normal,MinTo2,true,0);
    EditField(h,v+=20,80,"حداکثر ",Normal,MaxFrom,true,0);
    EditField(h2,v,80,"",Normal,MaxTo1,true,0);
    EditField(h3,v,80,"",Normal,MaxTo2,true,0);
  end else begin
    StaticText(h,v=16,"ارز از",false);
    StaticText(h2,v,"ارز پایه",false);
    EditField(h,v+=6,80,"پیش فرض",Normal,DefaultFrom,true,0);
    EditField(h2,v,80,"",Normal,DefaultTo1,true,0);
    EditField(h,v+=20,80,"حداقل ",Normal,MinFrom,true,0);
    EditField(h2,v,80,"",Normal,MinTo1,true,0);
    EditField(h,v+=20,80,"حداکثر ",Normal,MaxFrom,true,0);
    EditField(h2,v,80,"",Normal,MaxTo1,true,0);
  end;
  if (IsEnterprise) then begin
    Tile(tilenr,60,false,tilenr,EMUDate); tilenr = tilenr + 1;
    CheckBox(h,v=6,0,"جلوگیری از تغییر نرخ پایه ",NoChangeBase);
    CheckBox(h,v+=16,0,"جلوگیری از تغییرات نرخ خارجی ",NoChangeForeign);
    CheckBox(h,v+=16,0,"عضو اتحادیه اقتصادی و مالی ",EMUCurncy);
    EditField(h3,v,80,"تاریخ",Normal,EMUDate,false,PasteCurDate);
    Tile(tilenr,50,false,tilenr,CurText); tilenr = tilenr + 1;
    EditField(h2,v=6,80,"دور خودکار محدود",Normal,AutoRoundof,false,0);
    EditField(h2,v+=20,80,"ارسال محدود بصورت خودکار",Normal,AutoWriteof,false,0);
  end;
  Tile(tilenr,130,false,tilenr,CurText); tilenr = tilenr + 1;
  EditField(h2,vs=(v=6),170,"مقدار نام متن ",Normal,CurText,false,0);
/*This is for more beautiful languages than English*/  
  EditField(h2,v+=20,170,"مقدار نام متن (2-4)",Normal,CurText1,false,0);
  EditField(h2,v+=20,170,"مقدار نام متن (5-)",Normal,CurText2,false,0); 
  ButtonFrame(h4=h3+100,v=(vs+16),80,2,"جنسیت ");
  RadioButton(h4,v,0,0,            "مردانه ",CurGender);
  RadioButton(h4,v+=16,1,0,        "زنانه",CurGender);  
  EditField(h2,vs=(v+=28),170,"نام ارز جزیی ",Normal,MinorCurText,false,0);
/*This is for more beautiful languages than English*/  
  EditField(h2,v+=20,170,"نام ارز جزیی (2-4)",Normal,MinorCurText1,false,0);
  EditField(h2,v+=20,170,"نام ارزجزیی(5)",Normal,MinorCurText2,false,0);
  ButtonFrame(h4=h3+100,v=(vs+10),80,2,"جنسیت ");
  RadioButton(h4,v,0,0,            "مردانه ",MinorCurGender);
  RadioButton(h4,v+=16,1,0,        "زنانه",MinorCurGender);  
  if (IsEnterprise) then begin
    Tile(tilenr,30,false,tilenr,TaxCode); tilenr = tilenr + 1;
    EditField(h2,vs=(v=6),80,"برنامه مالیات ",Normal,TaxCode,false,0);
  end;
  EndWindow;
end;

window CurncyCodeLClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("پولهای رایج",CurncyCodeLClass,CGmlist,CurncyCodeView);
  SpawnClass(CurncyCodeDClass);
  SetWRect(64,80,444,298);
  Sizeable(200,100,0,0);
  UseView(CurncyCodeVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"کد",CurncyCode,false,MainKey);
  RlCol(100,100,"نام",Comment,false);
//  RlCol(-50,-80,"گرد کردن ",RndTotal,false);
  SearchField("جستجو ");
  EndWindow;
end;

window CurncyCodeSClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer,android")
begin
  Integer icn;

  icn = StringToInt(USetStr(912));  
  WindowBegin("جابجایی ارز ",CurncyCodeSClass,CGslist,CurncyCodeView);
  SpawnClass(CurncyCodeDClass);
  UseView(CurncyCodeVc);
  if (GuiType==kGuiAndroid) then begin
    SetWRect(0,0,320,418);
    Sizeable(-1,-1,0,0);
    WindowTitleBar(6002,icn,6003,"جابجایی ارز ");
    RecordList(0,0,-1,-1);
    RLCellKey(0,12,280,12,CurncyCode,false,kFontSizeLarge,patM4curpen,CurncyCode);
    RLCell(0,56,280,56,Comment,false,kFontSizeSmall,patM4curpen);
  end else begin
    SetWRect(64,80,444,298);
    Sizeable(200,100,0,0);
    RecordList(4,17,-21,-39);
    if (GuiType==kGuiiPhone) then begin
      RLCellKey(10,6,280,19,CurncyCode,false,12,patM4blue,Comment);
      RLCell(10,26,280,39,Comment,false,12,patM4black);
    end else begin
      RlColKey(4,4,"کد",CurncyCode,false,MainKey);
      RlCol(100,100,"نام",Comment,false);
//  RlCol(-50,-80,"گرد کردن ",RndTotal,false);
    end;
    SearchField("جستجو ");
  end;
  EndWindow;
end;


//Курс

window ERDClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,h3,v;
  WindowBegin("نرخ ارز",ERDClass,CGview,ERView);
  SetWRect(64,80,509,237);
  UseView(ERVc);
  h=100;h2=167;h3=230;
  if (IsEnterprise) then begin
    Tile(0,70,false,"",CurncyCode);
  end;
  EditField(h,v=6,50,"ارز",St_i,CurncyCode,false,CurncyCodeSClass);
  EditField(h,v+=20,85,"تاریخ",Normal,Date,false,PasteCurDate);
  if (IsEnterprise) then begin
    TileButton(1,"نرخ ");
    TileButton(2,"فورکس");
    Tile(1,70,false,"1",ToRate1);
    v = 6;
  end else begin
    v = v + 20;
  end;
  EditField(h,v,50,"نرخ ",Normal,FrRate,true,0);
  EditField(h2,v,50,":",Normal,ToRate1,true,0);
  if (HasBase2) then begin
    StaticText(h3,v+12,"ارز پایه 1",false);
    EditField(h2,v+=20,50,":",Normal,ToRate2,true,0);
    StaticText(h3,v+12,"پایه ارز 2",false);
  end else begin
    StaticText(h3,v+14,"پایه ارز",false);
  end;
  if (IsEnterprise) then begin
    Tile(2,70,false,"1",SalesRateTo1);
    EditField(h,v=6,50,"نرخ فروش ",Normal,FrRate,true,0);
    EditField(h2,v,50,":",Normal,SalesRateTo1,true,0);
    if (HasBase2) then begin
      StaticText(h3,v+14,"ارز پایه 1",false);
    end;
    EditField(h,v+=20,50,"نرخ خرید ",Normal,FrRate,true,0);
    EditField(h2,v,50,":",Normal,PurchaseRateTo1,true,0);
    if (HasBase2) then begin
      StaticText(h3,v+14,"ارز پایه 1",false);
    end;
  end;
  EndWindow;
end;

window ERLClass:2
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("نرخ ارزها",ERLClass,CGmlist,ERView);
  SpawnClass(ERDClass);
  if (HasBase2) then begin
    SetWRect(20,80,530,298);
  end else begin
    SetWRect(20,80,380,298);
  end;
  Sizeable(200,100,0,0);
  UseView(ERVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"ارز",CurncyCode,false,CDKey);
  RlColKey(66,66,"تاریخ",Date,false,DCKey);
  if (HasBase2) then begin
    RlCol(-300,-300,"نرخ از ",FrRate,false);
    RlCol(-200,-200,"پایه نرخ 1 ",ToRate1,false);
    RlCol(-100,-100,"پایه نرخ 2",ToRate2,false);
  end else begin
    RlCol(-200,-200,"نرخ از ",FrRate,false);
    RlCol(-100,-100,"نرخ پایه",ToRate1,false);
  end;
  SearchField("جستجو ");    
  if (IsEnterprise) then begin
    if (GuiType==kGuiMetro) then begin
      SpecMenuGroup("",kSpecMenuGroupTypeButtonsInBottomBarRight,0);
      SpecialMenuWithIcon("نرخ ارز بانک مرکزی",' ',4313,1,"NationalBankExchRateERLsm");
    end else begin
      SpecialMenu("نرخ ارز بانک مرکزی",'r',0,"NationalBankExchRateERLsm");
    end;
  end;
  EndWindow;
end;

//Сотрудники

window UserLClass:3
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("اشخاص ",UserLClass,CGmlist,UserView);
  SetWRect(64,80,564,298);
  SpawnClass(USDClass);
  Sizeable(-1,-1,0,0);
  UseView(UserVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"امضا ",Code,false,Code);
  RlColKey(81,81,"نام",Name,false,Name);
  SearchField("جستجو ");
//  SpecialMenu("Open Mailbox",' ',0,"OpenMailboxUserLsm");
  if (Left(BuildProductCode,8)=="استاندارد ") then begin
    if (GuiType==kGuiMetro) then begin
      RowMenuBegin("");
      RowMenuItem(0,"تغییر رمز عبور",' ',' ',4300,"ChangePasswdUserLsm");
      RowMenuItem(1,"فعال کردن دسکتاپ شخصی",' ',' ',4300,"ActivatePersDesktopLsm");
      EndRowMenu;
      SpecMenuGroup("",kSpecMenuGroupTypeButtonsInBottomBarRight,0);
      SpecialMenuWithIcon("ایجاد کاربر",' ',4313,1,"CreateNewUser");
    end else begin
      SpecialMenu("تغییر رمز عبور",' ',1,"ChangePasswdUserLsm");
      SpecialMenu("فعال کردن دسکتاپ شخصی",' ',2,"ActivatePersDesktopLsm");  
      SpecialMenu("ایجاد کاربر",' ',4,"CreateNewUser");
    end;
  end else begin
    if (BuildProductCode=="SmartApps") then begin
      SpecialMenu("تغییر رمز عبور",' ',1,"ChangePasswdUserLsm");
      SpecialMenu("فهرست کارها ",' ',2,"ToDoUserLsm");
    end else begin
      if (GuiType==kGuiMetro) then begin
        RowMenuBegin("");
        RowMenuItem(0,"تغییر رمز عبور",' ',' ',4300,"ChangePasswdUserLsm");
        RowMenuItem(1,"ایجاد میل باکس",' ',' ',4300,"CreateMailboxUserLsm");
        RowMenuItem(2,"تقویم علنی ",' ',' ',4300,"OpenCalendarUserLsm");
        RowMenuItem(3,"فهرست کارها ",' ',' ',4300,"ToDoUserLsm");
        EndRowMenu;
        SpecMenuGroup("",kSpecMenuGroupTypeButtonsInBottomBarRight,0);
        SpecialMenuWithIcon("ایجاد کاربر",' ',4313,1,"CreateNewUser");
      end else begin
        SpecialMenu("تغییر رمز عبور",' ',1,"ChangePasswdUserLsm");
        SpecialMenu("فهرست کارها ",' ',2,"ToDoUserLsm");
        SpecialMenu("تقویم علنی ",' ',2,"OpenCalendarUserLsm");  
        SpecialMenu("ایجاد میل باکس",' ',3,"CreateMailboxUserLsm");
        SpecialMenu("ایجاد کاربر",' ',4,"CreateNewUser");
      end;
    end;
  end;
  EndWindow;
end;

window USDClass:5
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h1,h2,h3,v,vm,vs;
  WindowBegin("شخص ",USDClass,CGview,UserView);
  SetWRect(64,80,509,380);
  Sizeable(-1,-1,0,0);
  UseView(UserVc);
  Tile(0,70,false,"",Code);
  vs = 20; h=150; h2 = 290; h3 = 350;
  EditField(h,v=6, 55,"امضا ",St_i,Code,false,0);
  EditField(h,v+=vs,300,"نام",Normal,Name,false,0);
  TileButton(1,"دسترسی");
  TileButton(2,"مجموعه تعداد ");
  TileButton(3,"حراج ");
  TileButton(4,"حسابها");
  TileButton(5,"هزینه کار ");
  TileButton(6,"وب ");
  TileButton(7,"ورود زمان ");
  TileButton(8,"تاریخ و شماره ها");
  CheckBox(h2,6,0,"بسته",Closed);
  Tile(1,210,false,"1",AccessGroup);
  EditField(h,v=6,300,"دسترسی گروهی",Normal,AccessGroup,false,AccessSClass);
  EditField(h,v+=vs,100,"شروع سطح دسترسی ",Normal,StartLevel,false,SetSClass);
  EditField(h,v+=vs,100,"عملکرد واحد ",Normal,OneFunction,false,OneFunctionSClass);
  EditField(h,v+=vs,100,"گروه فروش ",Normal,SalesGroup,false,SalesGroupSClass);
  EditField(h,v+=vs,100,"زبان ",Normal,LangCode,false,LangSClass);
  EditField(h,v+=vs,100,"محدودیت مشتری",Normal,CanUseOS,false,SetSClass);
  EditField(h,v+=vs,100,"کد تماس ",Normal,CustCode,false,ContactCUSClass);
//  EditField(h,v+=vs,100,"رمز عبور تخفیف",Normal,OldPassWord,false,0);
  ButtonFrame(h2,v=44,165,3,"دسترسی محدود");
  RadioButton(h2,v,kLimitedAccessNoLimitation,0,"بدون محدودیت ",limitedAccess);
  RadioButton(h2,v+=16,kLimitedAccessGroupOnly,0,"منحصرا گروه ",limitedAccess);
  RadioButton(h2,v+=16,kLimitedAccessUserOnly,0,"تنها کاربر ",limitedAccess);
if (HansaWorld) then begin
  ButtonFrame(h2,v+=40,195,4,"نوع کاربر ");
  RadioButton(h2,v,0,kTypeOfUserNamed,"نامیده شده",TypeOfUser);
  RadioButton(h2,v+=16,kTypeOfUserConcurrent,0,"همزمان",TypeOfUser);
  RadioButton(h2,v+=16,kTypeOfUserBusinessCommunicator,0,"ارتباط کسب و کار",TypeOfUser);
  RadioButton(h2,v+=16,kTypeOfUserTimekeeper,0,"وقت نگهدار ",TypeOfUser);
  CheckBox(h2,v+=25,0,"رمز عبور هرگزمنقضی نمی شود ",PasswordNeverExpires);
end;
  Pict_Field(-175,8,-5,178,"");
  if (GuiType==kGuiCocoa) then begin
    PushButton(-160,182,-80,202,ToolImagePicker,"ضمیمه کردن عکس");  
  end;
//  CheckBox(h2,v+=25,0,"اجازه دستیابی انتقال فایل پروتکل",FTPLogin);
//  CheckBox(h2,v+=vs,0,"تنها صدا وارد سیستم می شود ",OnlyVoiceLogin); // No code for this
  Tile(2,150,false,"2",LastOrdNr);
  EditField(h,vm=(v=6),65,"تعداد سفارش ",Normal,LastOrdNr,false,0);
  EditField(h,v+=vs,65,"تعداد تحویل",Normal,LastShipNr,false,0);
  EditField(h,v+=vs,65,"تعداد فاکتور ",Normal,LastInvNr,false,0);
  EditField(h,v+=vs,65,"ثبت تعداد محصولات ",Normal,LastPurNr,false,0);
  EditField(h,v+=vs,65,"شماره پول نقد ورودی",Normal,LastCLInNr,false,0);
  EditField(h,v+=vs,65,"فاکتور اعتباری ",Normal,LastIVCashNr,false,0);
  EditField(h,v+=vs,65,"فاکتور ",Normal,LastRestAccNr,false,0);
//  EditField(h,v+=vs,100,"تعداد سرمایه گزاری رسمی ",Normal,LastOfficialSerNr,false,0);
  EditField(h3,v=vm,65,"شماره فاکتور",Normal,LastPayNr,false,0);
  EditField(h3,v+=vs,65,"تعداد حمل و نقل ",Normal,LastTRNr,false,0);
  EditField(h3,v+=vs,65," شماره صورت کالا خرید",Normal,LastVINr,false,0);
  EditField(h3,v+=vs,65,"تعداد پرداخت ",Normal,LastOPNr,false,0);
  EditField(h3,v+=vs,65,"تعداد سفارش خرید",Normal,LastPONr,false,0);
  EditField(h3,v+=vs,65,"شماره پول نقد خروجی",Normal,LastCLOutNr,false,0);
  EditField(h3,v+=vs,120,"شناسه های شخصی ",Normal,IDCode,false,0);
  Tile(3,170,false,"3",Bonus);
  EditField(h,vm=(v=6),65,"پاداش",Normal,Bonus,true,0);
  EditField(h3,v,120,"مرجع ما ",Normal,CurOurContact,false,0);
  EditField(h3+260,v,-20,"حداقل لیست قیمت ",Normal,MinPLCode,false,PLDefSClass);
  EditField(h,v+=vs,65,"موقعیت",Normal,Location,false,LocationSClass);
  EditField(h3,v,120,"بخش",Normal,Department,false,DepSClass);
  EditField(h,v+=vs,65,"محل خدمات ",Normal,ServLocation,false,LocationSClass);
  EditField(h3,v,120,"تلفن 1 ",Normal,Phone1,false,0);
  EditField(h,v+=vs,65,"سفارش ذخیره.موقعیت ",Normal,ReservLocation,false,LocationSClass);
  EditField(h3,v,120,"تلفن 2",Normal,Phone2,false,0);
  EditField(h,v+=vs,-20,"سفارش ذخیره.دسترسی ",Normal,ReservLocAccess,false,ReservLocAccessSClass);
  EditField(h,v+=vs,-20,"ادرس ایمیل",Normal,emailAddr,false,0);
  EditField(h,v+=vs,-20,"مشخصات ",Normal,Spec,false,0);
  EditField(h,v+=vs,-20,"تفسیر",Normal,Comment,false,0);
//  EditField(h,v+=vs,65,"هزینه حساب رایج",Normal,CostAcc,false,AccSClass);
  Tile(4,50,false,"4",PersAcc);
  EditField(h,vm=(v=6),65,"حساب",Normal,PersAcc,false,AccSClass);
  EditField(h3,v,-20,"کالا",Normal,PersObjx,false,ObjSClass);
  EditField(h,v+=vs,120,"نام بانک",Normal,BankName,false,BankSClass);
  EditField(h3,v,-20,"بانک حساب رایج",Normal,BankAcc,false,0);
//  EditField(h,v+=vs,65,"هزینه حساب رایج",Normal,CostAcc,false,AccSClass);
  Tile(5,170,true,"5",JobGroup);
  EditField(h,vm=(v=6),55,"گروه شغلی ",Normal,JobGroup,false,EGSClass);
  EditField(h,v+=vs,100,"شرح کار ",Normal,Job,false,0);
  EditField(h,v+=vs,80,"هزینه هر ساعت",Normal,CostPrHour,false,0);
  EditField(h,vm=(v+=vs),80,"قیمت در ساعت ",Normal,PricePrHour,false,0);
  EnterSkip(Math);
  CheckBox(h2,v=20,0,"اجازه دسترسی با کد اختصاری",DisAllowOther);
//  CheckBox(h2,v,0,"دسترسی محدود",limitedAccess);
  v = v+50;
  MatrixBegin(h-50,v=(vm+40),h+350,-7,-,99);
  MatCol(1,24,"کد اختصاری",0,Code,false,0);
  MatCol(1,110,"پروژه ",0,PRCode,false,PRSClass);
  MatCol(1,200,"تفسیر",0,Comment,false,0);
  EndMatrix;
  Tile(6,30,false,"6",WebConf);
  EditField(h,vm=(v=6),65,"کنفرانس شبکه ",Normal,WebConf,true,0);
  EditField(h3,v,65,"صفحه شروع سایت ",Normal,WebStartPage,false,0);
  Tile(7,50,false,"7",Supervisor);
  v = 6;
  EditField(h,vm=v,80,"برتر ",Normal,Supervisor,false,UserSClass);
  EditField(h,v+=20,80,"تاریخ ایجاد",ViewOnly,DateCreated,false,0);
  CheckBox(h2,v=vm,0,"نیروی ورودی زمان ",ForceTimeEntry);
  Tile(8,210,false,"8",LeadingZDay);
  h = 70; h1 = h + 210; h2 = h + 330;
  
  if (GuiType==kGuiCocoa) then begin
    CheckBox(h,v,0,"کاربرد تنظیمات شخصی ",UserEditCtlf);
  end else begin  
    StaticText(190,v+=vs,"شیوه ویندو ",true);
    DropDownMenu(200,v=6,282,"نوع ویندو ",320);  
    CheckBox(h,v+=20,0,"کاربرد تنظیمات شخصی ",UserEditCtlf);
  end;
  ButtonFrame(h,vm=(v+=42),200,5,"تاریخ سفارش");
  RadioButton(h,v,0,0,"ماه، روز،سال",DateOrder);
  RadioButton(h,v+=16,1,0,"روز، ماه ، سال",DateOrder);
  RadioButton(h,v+=16,2,0,"سال،ماه،روز",DateOrder);
  RadioButton(h,v+=16,m4_hijri,0,"هجری ",DateOrder); // We have some enum already in BCD that goes from 0 to 5..
  RadioButton(h,v+=16,m4_persian_date,0,"فارسی ",dateOrder);
  CheckBox(h,v+=24,0,"مبدا عمده قبل از روز",LeadingZDay);
  CheckBox(h1,v,0,"صفحه نمایش جداگانه هزار",thousSepf);
  CheckBox(h,v+=16,0,"مبدا اصلی قبل از ماه",LeadingZMonth);
  CheckBox(h,v+=16,0,"قرن",LeadingCentury);
  EditField(h2,v=vm,20,"مجزا کننده تاریخ ",Normal,DateSep,false,0);
  EditField(h2,v+=20,20,"جدا کننده اعشار",Normal,DecimalPt,false,0);
  EditField(h2,v+=20,20,"هزاران جداکننده ",Normal,ThousandSep,false,0);
  SpecialMenu("ایجاد کالا",'o',1,"CreateObjUserDsm");
  EndWindow;
end;

//Таблица скидок

window RebDClass:2
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h1,h2,l,v,vs;
  WindowBegin("ماتریس تخفیف",RebDClass,CGview,RebView);
  UseView(RebVc);
  SetWRect(20,80,647,333);
  Sizeable(-1,-1,-1,0);
  vs=20;
  Tile(0,40,false,"",Code);
  EditField(h=90,v=6,50,"کد",Normal ,Code,false,0);
  EditField(230,v,-40,"تفسیر",Normal,Comment,false,0);
  EditField(h,v+=vs,80,"دوره ",Normal,FromDate,false,PasteCurDate);
  EditField(230,v,80,"-",Normal,ToDate,false,PasteCurDate);
  EditField(440,v,-40,"جایگزین",Normal,Replaces,false,RebSClass);
  TileButtons(v,2);
  Tile(1,110,false,"1",StaffCode);
  h = 110; h1 = 200; h2 = 300; vs = 20;
  EditField(h,v=6,50,"بخش تعداد .تخفیف ",Normal,StaffCode,false,StaffSClass);
  EditField(h,v+=vs,50,"ستون 0 ",Normal,vra0,false,0);
  EditField(h,v+=vs,50,"ستون 1 ",Normal,vra1,false,0);
  EditField(h1,v,50,"2",Normal,vra2,false,0);
  EditField(h2,v,50,"3",Normal,vra3,false,0);
  EditField(h,v+=vs,50,"Column 4",Normal,vra4,false,0);
  EditField(h1,v,50,"5",Normal,vra5,false,0);
  EditField(h2,v,50,"6",Normal,vra6,false,0);
  EditField(h,v+=vs,50,"Column 7",Normal,vra7,false,0);
  EditField(h1,v,50,"8",Normal,vra8,false,0);
  EditField(h2,v,50,"9",Normal,vra9,false,0);
  Tile(2,120,true,"2",Math);
  StaticText(h=46,v=27,"کالا ",false);
  StaticText(h+=64,v=27,"کالا ",false);
  StaticText(h+=69,v,"بخش تعداد ",false);
  StaticText(248,v,"ستون ",false);
  h = 10; v=v+20; l = 30;
  MatrixBegin(h,v,h+240+11*l,-10,-,200);
  MatCol(1,h=30,"کد",0,CodeType,false,SetSClass);
  MatCol(1,h=94,"گروه",0,ITCode,false,ITSClass);
  MatCol(1,h+=70,"تخفیف",0,StaffCode,false,StaffSClass);
  MatCol(1,h+=70,"0",0,vra0,false,0);
  MatCol(1,h+=l,"1",0,vra1,false,0);
  MatCol(1,h+=l,"2",0,vra2,false,0);
  MatCol(1,h+=l,"3",0,vra3,false,0);
  MatCol(1,h+=l,"4",0,vra4,false,0);
  MatCol(1,h+=l,"5",0,vra5,false,0);
  MatCol(1,h+=l,"6",0,vra6,false,0);
  MatCol(1,h+=l,"7",0,vra7,false,0);
  MatCol(1,h+=l,"8",0,vra8,false,0);
  MatCol(1,h+=l,"9",0,vra9,false,0);
  EndMatrix;
/*  noone uses this one
  Tile(3,70,false,"3",DiscAcc);
  EditField(h=150,v=6,50,"حساب تخفیف",Normal,DiscAcc,false,AccSClass);
  EditField(h,v+=20,50,"درصد تخفیف",Normal,DiscPerc,false,0);
  EditField(h,v+=20,50,"مالیات ارزش افزودهکد",Normal,VATCode,false,VATCodeSClass);
*/  
  EndWindow;
end;

window RebLClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("ماتریس های تخفیف",RebLClass,CGmlist,RebView);
  SpawnClass(RebDClass);
  SetWRect(64,80,509,298);
  Sizeable(-1,-1,0,0);
  UseView(RebVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"کد",Code,false,Code);
  RlCol(75,75, "تفسیر",Comment,false);
  SearchField("جستجو ");
  EndWindow;
end;

//Reports

window SalesReportExtRClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;
WindowBegin("گزارش فروش پیشرفته",SalesReportExtRClass,CGRcW,RcType);
  SetWRect(20,80,400,250);
  v = 6; vs = 20; h = 120;
  PeriodField(h,v,"دوره ");
  EditFieldTL(h,v+=vs,150,"Склад(магазин)",M4Str,Normal,41,f1,false,LocationSClass);
  EditFieldTL(h,v+=vs,150,"طبقه بندی",M4Str,Normal,200,f2,false,DISClass);
  EditFieldTL(h,v+=vs,150,"برند",M4UStr,Normal,41,f4,false,DI2SClass);//carefull we run ARRn
  EditFieldTL(h,v+=vs,150,"مدل",M4UStr,Normal,41,f5,false,DI3SClass);//carefull we run ARRn
  EndWindow;
end;

window CuArtSTRClass:2
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;
  WindowBegin("مشخص مشتری/ مورد آمار",CuArtSTRClass,CGRcW,RcType);
  SetWRect(20,80,460,330);
  vs = 20;
  EditFieldTL(h=160,v=6, 150,"مشتریان",   M4UStr,Normal,50,f1,false,CUSClass);
  EditFieldTL(h,v+=20, 150,"مجموعه ها",   M4UStr,Normal,30,ObjStr,false,CCatSClass);
  if (HasContactClassification) then begin
    EditFieldTL(h,v+=20, 150,"طبقه بندی", M4UStr,Normal,60,f4,false,CClassSClass);
  end;
  EditFieldTL(h,v+=20, 150,"تعداد کالا ",   M4UStr,Normal,41,f2,false,INSClass);
  if (IsEnterprise) then begin
    EditFieldTL(h,v+=20, 150,"گروه های کالا",   M4UStr,Normal,20,f3,false,ITSClass);
  end;
  if (HasItemClassification) then begin
    EditFieldTL(h,v+=20, 150,"طبقه بندی کالا ", M4UStr,Normal,60,f5,false,DISClass); 
  end;
  if (IsEnterprise) then begin
    EditFieldTL(h,v+=vs, 150,"شعبه",   M4UStr,Normal,20,f6,false,CUSClass);
    EditFieldTL(h,v+=vs, 100,"کلاس فاکتور",   M4UStr,Normal,10,LastAcc,false,RestAccClassSClass);
  end;
  EditFieldTL(h,v+=20, 150,"این بازه زمانی",M4UStr,Normal,21,Period2Str,false,PerSClass);
  EditFieldTL(h,v+=20, 150,"دوره مقایسه",M4UStr,Normal,21,Stext,false,PerSClass);
  if (HasObjects) then begin
    EditFieldTL(h,v+=20, 150,"کالا از مشتری",M4UStr,Normal,20,AccStr,false,ObjSClass);
  end;
  if (IsEnterprise) then begin
    EditFieldTL(h,v+=20, 100,"کشور مشتری",M4UStr,Normal,5,TransStr,false,CountrySClass);
    CheckBox(h,v+=20,0,"نمایش گروه کالا",flags[1]);
    CheckBox(h,v+=16,0,"نمایش انواع ",flags[2]);
  end;
  EndWindow;
end;

window CustSTRClass:3
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;
  WindowBegin("تعیین آمار مشتری ",CustSTRClass,CGRcW,RcType);
  SetWRect(20,80,410,340);
  vs = 20;
  if (IsEnterprise) then begin
    h = 160;
  end else begin
    h = 140;
  end;
  PeriodField(h,v=6,"دوره ");
  EditFieldTL(h,v+=vs, 150,"مشتریان",   M4UStr,Normal,30,f1,false,CUSClass);
  EditFieldTL(h,v+=vs, 150,"مجموعه ها",   M4UStr,Normal,30,f3,false,CCatSClass);
  if (HasContactClassification) then begin
    EditFieldTL(h,v+=vs,150,"طبقه بندی",M4UStr,Normal,30,Stext,false,CClassSClass);
  end;
  if (HasModCO) then begin
    EditFieldTL(h,v+=vs, 150,"کالا ",   M4UStr,Normal,41,f2,false,INSClass);
  end;
  if (IsEnterprise) then begin
    EditFieldTL(h,v+=vs ,100,"فروشنده (از مشتری)",M4UStr,Normal,10,AccStr,false,UserSClass);
    EditFieldTL(h,v+=vs ,100,"گروه فروشنده",M4UStr,Normal,5,Language,false,SalesGroupSClass);
  end;
  if (HasModCO) then begin
    EditFieldTL(h,v+=vs ,100,"حداقل گردش مالی",M4Val,Normal,0,vals0,true,0);
  end;
  if (IsEnterprise) then begin
    EditFieldTL(h,v+=vs ,100,"حداقل سود",M4Val,Normal,0,vals1,true,0);
  end;
  if (HasObjects) then begin
    EditFieldTL(h,v+=vs, 150,"کالا بر مشتری",M4UStr,Normal,20,ObjStr,false,ObjSClass);
  end;
  if (IsEnterprise) then begin
    EditFieldTL(h,v+=vs, 100,"کشور بر مشتری",M4UStr,Normal,5,TransStr,false,CountrySClass);
    ButtonFrame(h,v+=40,130,2,"مرتب سازی ");
    RadioButton(h,v,0,0,"شماره",flags[1]);
    RadioButton(h,v+=16,1,0,"نام",flags[1]);
    CheckBox(h,v+=26,0,"تنها اطلاعات مشتری",flags[2]);
  end;
  EndWindow;
end;

window CustSalesRClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vm,vs;
  WindowBegin("مشخص فروش به مشتری آمار",CustSalesRClass,CGRcW,RcType);
  SetWRect(20,80,450,300);
  h = 150; vs = 20;
  PeriodField(h,v=6,"دوره ");
  EditFieldTL(h,v+=vs, 150,"مشتریان",   M4UStr,Normal,50,f1,false,CUSClass);
  EditFieldTL(h,v+=vs, 150,"طبقه بندی مشتری",   M4UStr,Normal,5,f2,false,CCatSClass);  
  EditFieldTL(h,v+=vs,150,"طبقه بندی",M4UStr,Normal,30,f4,false,CClassSClass);
  EditFieldTL(h,v+=vs, 50,"تعداد مشتریان نشان داده شده است",   M4Long,Normal,0,long1,false,0);
  ButtonFrame(h,vm=(v+=41),133,3,"عملکرد");
  RadioButton(h,v,0,0,"بالاترین فروش",ArtMode);
  RadioButton(h,v+=16,1,0,"کمترین فروش",ArtMode);
  RadioButton(h,v+=16,2,0,"بالاترین سود ناخالص",ArtMode);
  CheckBox(h,v+=30,0,"شامل مشتریان با فروش",flags[1]);
  EndWindow;
end;

window ItemSalesRClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vm,vs;
  WindowBegin("تعیین آمار فروش کالا",ItemSalesRClass,CGRcW,RcType);
  SetWRect(20,80,400,300);
  h = 130; vs = 20;
  PeriodField(h,v=6,"دوره ");
  EditFieldTL(h,v+=vs, 150,"کالاها",   M4UStr,Normal,50,f1,false,INSClass);
  EditFieldTL(h,v+=vs, 150,"دسته کالا ",   M4UStr,Normal,5,f2,false,ITSClass);
  EditFieldTL(h,v+=vs, 150,"طبقه بندی کالا ", M4UStr,Normal,60,f4,false,DISClass); 
  EditFieldTL(h,v+=vs, 50,"تعداد کالاهای نمایش داده شده",   M4Long,Normal,0,long1,false,0);
  EditFieldTL(h,v+=vs, 150,"شعبه",   M4UStr,Normal,20,f6,false,CUSClass);
  EditFieldTL(h,v+=vs, 100,"کلاس فاکتور",   M4UStr,Normal,10,LastAcc,false,RestAccClassSClass);
  ButtonFrame(h,vm=(v+=41),123,3,"عملکرد");
  RadioButton(h,v,0,0,"بیشترین تعداد فروخته شده",ArtMode);
  RadioButton(h,v+=16,1,0,"کمترین تعداد فروخته شده",ArtMode);
  RadioButton(h,v+=16,2,0,"بیشترین گردش مالی",ArtMode);
  CheckBox(h,v+=30,0,"به حساب آوردن کالاهای بدون فروش",flags[1]);
  CheckBox(h,v+=16,0,"نمایش انواع ",flags[2]);
  EndWindow;
end;

window INQtyRClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;
  WindowBegin("تعیین آمار کالا/تعداد",INQtyRClass,CGRcW,RcType);
  SetWRect(20,80,400,150);
  vs = 20; h = 140; v = 6;
  EditFieldTL(h,v,100,"کالا ",   M4UStr,Normal,41,f1,false,INSClass);
  EditFieldTL(h,v+=vs,100,"طبقه بندی کالا ", M4UStr,Normal,60,f4,false,DISClass); 
  EditFieldTL(h,v+=vs ,100,"موقعیت",M4UStr,Normal,21,f2,false,LocationSClass);
  CheckBox(h,v+=vs,0,"به حساب آوردن کالاهایساختار بندی شده",flags[0]);
  EndWindow;
end;

window IStatRClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vm,vs;
  WindowBegin("تعیین آمار کالا/فروشنده",IStatRClass,CGRcW,RcType);
  SetWRect(20,80,400,300);
  vs=20;
  PeriodField(h=120,v=6,"دوره ");
  EditFieldTL(h,v+=vs, 150,"فاکتورها",M4UStr,Normal,50,f3,false,0);
  EditFieldTL(h,v+=vs, 150,"فروشنده",   M4UStr,Normal,50,f1,false,UserSClass);
  EditFieldTL(h,v+=vs, 150,"کالاها",   M4UStr,Normal,50,f2,false,INSClass);
  EditFieldTL(h,v+=vs, 150,"دسته کالا ",M4UStr,Normal,30,Stext,false,ITSClass);
  EditFieldTL(h,v+=vs, 150,"طبقه بندی کالا ", M4UStr,Normal,60,f4,false,DISClass); 
  EditFieldTL(h,v+=vs, 150,"مشتریان",M4UStr,Normal,41,ObjStr,false,CUSClass);
  EditFieldTL(h,v+=vs, 150,"گروه مشتری",M4UStr,Normal,60,LastAcc,false,CCatSClass);
 /* ButtonFrame(h=20,vm=(v+=40),200,2,"تعیین");
  CheckBox(h,v,0,"قبول شده",flags[1]);
  CheckBox(h,v+=16,0,"قبول نشده",flags[2]);*/
  ButtonFrame(h=120,vm=(v+=40),200,2,"مرتب شده بر اساس");
  RadioButton(h,v,0,0,"کالا/فروشنده",flags[3]);
  RadioButton(h,v+=16,1,0,"فروشنده/کالا",flags[3]);
  EndWindow;
end;

window IStatRClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vm,vs;
  WindowBegin("بالانس گردش مالی بر اساس کالا ",ItemSaldoRClass,CGRcW,RcType);
  SetWRect(20,80,400,250);
  v = 6; vs = 20; h = 120;
  PeriodField(h,v,"دوره ");
  EditFieldTL(h,v+=vs,150,"موجودی",M4Str,Normal,41,f1,false,LocationSClass);
  EditFieldTL(h,v+=vs,150,"طبقه بندی",M4Str,Normal,11,f2,false,DISClass);
  ButtonFrame(h,v+=vs+16,123,2,"فاکتور های حمل نشده");
  RadioButton(h,v,0,0,"چشم پوشی",flags[0]);
  RadioButton(h,v+=vs,1,0,"	",flags[0]);
  
  StaticText(50,v+=40,"وصیه میشود در فرم اکسل یا فایل نمایش داده شود",false);
  StaticText(50,v+=vs,"این گزارش دارای تعداد ستونهای بالاست و ت",false);
  
  EndWindow;
end;



window INrsRClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,h3,h4,v,vm,vs;
  WindowBegin("تعیین تاریخچه کالا",INrsRClass,CGRcW,RcType);
  SetWRect(20,80,550,460);
  v = 6; vs = 20; h = 160; h2 = 30; h3 = 180; h4 = 340;
  PeriodField(h,v,"دوره ");
  EditFieldTL(h,v+=vs,150,"تعداد کالا ",M4UStr,Normal,50,f1,false,INSClass);
  EditFieldTL(h,v+=vs,150,"دسته کالا ",M4UStr,Normal,5,f3,false,ITSClass);
  if (HasItemClassification) then begin
    EditFieldTL(h,v+=vs,150,"طبقه بندی کالا ", M4UStr,Normal,60,f4,false,DISClass); 
    EditFieldTL(h,v+=vs,150,"نوع طبقه بندی ",M4UStr,Normal,60,f5,false,CTypeSClass);
  end;
  if (IsEnterprise) then begin
    EditFieldTL(h,v+=vs,150,"موقعیت",M4Code,Normal,21,f6,false,LocationSClass);
    EditFieldTL(h,v+=vs,150,"محل گروه ",M4Code,Normal,10,f7,false,LocGrSClass);
    EditFieldTL(h,v+=vs,150,"طبقه بندی محل ",M4List,Normal,200,f8,false,LocClSClass);
    EditFieldTL(h,v+=vs,150,"بخش",M4UStr,Normal,10,AccStr,false,DepSClass);
    EditFieldTL(h,v+=vs,150,"پیش فرض  فروشنده ",M4UStr,Normal,10,f2,false,VESClass);
  end;
  if (IsEnterprise) then begin
    CheckBox(h2,v+=26,0,"فقط  انبار شده  کالاها",flags[11]);
//  CheckBox(h2,v+=16,0,"نمایش مقدار 2 ",flags[12]);
    CheckBox(h2,v+=16,0,"نمایش بالانس برای کالا بدون تاریخچه",flags[13]);
    CheckBox(h2,v+=16,0,"شامل رکوردهای آینده",flags[14]);
    CheckBox(h2,v+=16,0,"هر موقعیت ",flags[15]);
    CheckBox(h2,v+=16,0,"شامل جزئیات شماره سریال",AccSpec);
  end;
//  CheckBox(h2,v+=16,0,"شامل تاریخچه قبل  پیگیری ",flags[19]);
  ButtonFrame(h2,vm=(v+=38),130,2,"عملکرد");
  RadioButton(h2,v,0,0,"مرور کلی ",flags[9]);
  RadioButton(h2,v+=16,1,0,"جزییات",flags[9]);
  if (IsEnterprise) then begin
    ButtonFrame(h2,v+=40,130,2,"مرتب سازی ");
    RadioButton(h2,v,0,0,"تاریخ هزینه ",flags[10]);
    RadioButton(h2,v+=16,1,0,"تاریخ انتقال",flags[10]);
  end;
  ButtonFrame(h3,v=vm,140,3,"عملکرد");
  RadioButton(h3,v,0,0,"تعداد",ArtMode);
  if (IsEnterprise) then begin
    RadioButton(h3,v+=16,3,0,"تعداد و نوع",ArtMode);
  end;
  RadioButton(h3,v+=16,1,0,"تعداد و ارزش",ArtMode); // 2 Has some code for it, don't know what....
  EndFrame;
  if (IsEnterprise) then begin
    ButtonFrame(h4,v=vm,150,3,"عملکرد");//  CheckBox(20,v+=16,0,"نمایش مقدار 2 ",flags[12]);
    RadioButton(h4,v,0,0,"عدم نمایش تعداد 2",flags[12]);
    RadioButton(h4,v+=16,1,0,"نمایش مقدار 2 ",flags[12]);
    RadioButton(h4,v+=16,2,0,"نمایش ضریب",flags[12]);
    ButtonFrame(h4,v=30,150,12,"ثبت شده ها");
  end else begin
    ButtonFrame(h4,v=vm,150,12,"ثبت شده ها");
  end;
  if (HasModSO) then begin
    CheckBox(h4,v,0,"تحویلی ها",flags[2]); v = v + 16;
  end;
  CheckBox(h4,v,0,"کالاهای دریافتی دفتر روزنامه",flags[3]); v = v + 16;
  CheckBox(h4,v,0,"فاکتورها",flags[1]); v = v + 16;
//  CheckBox(h4,v,0,"فاکتورهای POS",flags[16]); v = v + 16;
  if (HasModProd) then begin
    CheckBox(h4,v,0,"سفارش تولید",flags[18]); v = v + 16;
    CheckBox(h4,v,0,"تولید  ",flags[5]); v = v + 16;
    CheckBox(h4,v,0,"فرآیندهای تولید",flags[20]); v = v + 16;
  end;
  if (IsEnterprise) then begin
    CheckBox(h4,v,0,"اجناس مرجوعی",flags[8]); v = v + 16;
    CheckBox(h4,v,0,"اجناس مرحوعی به  فروشنده",flags[19]); v = v + 16;
  end;
  CheckBox(h4,v,0,"استهلاک موجودی انبار",flags[6]); v = v + 16;
  if (IsEnterprise) then begin
    CheckBox(h4,v,0," حرکت موجودی انبار ",flags[4]); v = v + 16;
    CheckBox(h4,v,0,"ارزش گذاری مجدد موجودی انبار ",flags[21]); v = v + 16;
    CheckBox(h4,v,0,"انتقالات موجودی انبار ",flags[17]); v = v + 16;
  end;
  if (HasModSVO) then begin
    CheckBox(h4,v,0,"برگه کاری",flags[7]); v = v + 16;
  end;
  EndFrame;
  EndWindow;
end;

window ItemStockStatRClass:1
 wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v;
  WindowBegin("گزارش بالانس بر اساس موجودی",ItemStockStatRClass,CGRcW,RcType);
  SetWRect(20,80,440,150);
  h=100;
  EditFieldTL(h,v+=20,150,"کالا ",M4UStr,Normal,41,f1,false,INSClass);//carefull we run ARRn
  EditFieldTL(h,v+=20,150,"موجودی",M4UStr,Normal,41,f2,false,LocationSClass);//carefull we run ARRn
  EditFieldTL(h,v+=20,150,"طبقه بندی",M4UStr,Normal,41,f3,false,DISClass);//carefull we run ARRn
  EditFieldTL(h,v+=20,150,"برند",M4UStr,Normal,41,f4,false,DI2SClass);//carefull we run ARRn
  EditFieldTL(h,v+=20,150,"مدل",M4UStr,Normal,41,f5,false,DI3SClass);//carefull we run ARRn
  EndWindow;
end;

window STCompRClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vm,vs;
  WindowBegin("تعیین انبارگردانی  مقایسه",STCompRClass,CGRcW,RcType);
  v = 190;
  if (HasItemClassification) then begin
    v = v + 40;
  end;
  if (HasMultiLocations) then begin
    v = v + 20;
  end;
  if (IsEnterprise) then begin
    v = v + 150;
  end;
  SetWRect(20,80,470,v);
  v = 6; vs = 20; h = 140;
  EditFieldTL(h,v, 150,"تعداد کالا ",   M4UStr,Normal,50,f1,false,INSClass);
  if (HasItemGroups) then begin
    EditFieldTL(h,v+=vs, 150,"گروه",   M4UStr,Normal,5,f3,false,ITSClass);
  end;
  if (HasItemClassification) then begin
    EditFieldTL(h,v+=vs, 150,"طبقه بندی کالا ", M4UStr,Normal,60,f4,false,DISClass); 
    EditFieldTL(h,v+=vs, 80,"نوع طبقه بندی ",M4UStr,Normal,60,f5,false,CTypeSClass);
  end;
  if (HasMultiLocations) then begin
    EditFieldTL(h,v+=vs, 150,"موقعیت",   M4Code,Normal,10,AccStr,false,LocationSClass);
  end;
  if (IsEnterprise) then begin
    EditFieldTL(h,v+=vs, 150,"موقعیت ",   M4Code,Normal,10,LastAcc,false,PosSClass);
  end;
  EditFieldTL(h,v+=vs, 80,"تاریخ",   M4Date,Normal,0,RegDate,false,PasteCurDate);
  if (IsEnterprise) then begin
    EditFieldTL(h,v+=vs, 80,"واریانس ارزش",M4Val,Normal,0,vals0,true,0);
  end;
  ButtonFrame(h=30,vm=(v+=50),355,3,"اگر کالا ثبت نشده در  انبارگردانی  گزارش روز خاص");
  RadioButton(h,v,0,0,"فرض کن تعداد شمارش شده صفر است",flags[3]);
//  RadioButton(h,v+=16,1,0,"اگر کالا در آخرین  انبارگردانی  فرض 0 در  موجودی",flags[3]);
  RadioButton(h,v+=16,2,0,"فرض کن تعداد تنظیم شده صفر است",flags[3]);
  RadioButton(h,v+=16,3,0,"عدم نمایش کالا در گزارش ",flags[3]);
  if (IsEnterprise) then begin
    ButtonFrame(h,vm=(v+=40),150,3,"مرتب سازی ");
    RadioButton(h,v,0,0,"کالا ",flags[2]);
    RadioButton(h,v+=16,1,0,"دسته کالا ",flags[2]);
    RadioButton(h,v+=16,2,0,"کد قفسه ",flags[2]);

    ButtonFrame(h=230,v=vm,155,3,"عملکرد");
    RadioButton(h,v,0,0,"نمایش تعداد",flags[1]);
    RadioButton(h,v+=16,1,0,"نمایش قیمت ها",flags[1]);
    RadioButton(h,v+=16,2,0,"کد قفسه ",flags[1]);

    CheckBox(h=30,vm=(v+=28),0,"نمایش مقدار 2 ",flags[0]);
    CheckBox(h=160,v=vm,0,"حذف کالا در صورت صفر بودن تعداد تنظیم شده",flags[4]);
  end;
  EndWindow;
end;

window RetJRClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vm,vs;
  WindowBegin("تعیین کالاهای مرجوعی بر اساس دفتر روزنامه",RetJRClass,CGRcW,RcType);
  SetWRect(20,80,400,250);
  vs = 20; h = 110; v = 6-vs; 
  EditFieldTL(h,v+=vs, 150,"شماره",   M4Str,Normal,30,f1,false,0);
  PeriodField(h,v+=vs,"دوره ");
  EditFieldTL(h,v+=vs ,150,"مشتری",M4Str,Normal,60,f2,false,CUSClass);
  EditFieldTL(h,v+=vs ,150,"تعداد سفارش ",M4Str,Normal,20,TransStr,false,0);
  EditFieldTL(h,v+=vs ,150,"دلیل",M4Str,Normal,20,AccStr,false,StandProblemsSClass);
  EditFieldTL(h,v+=vs ,150,"Service Ord. No.",M4Str,Normal,21,f4,false,0);
  ButtonFrame(h=50,vm=(v+=40),123,2,"عملکرد");
  RadioButton(h,v,0,0,"مرور کلی ",ArtMode);
  RadioButton(h,v+=16,1,0,"جزییات",ArtMode);
  ButtonFrame(h+=148,v = vm,123,2,"تعیین");
  CheckBox(h,v,0,"قبول نشده",flags[1]);
  CheckBox(h,v+=16,0,"قبول شده",flags[2]);  
  EndWindow;
end;

window SDJRClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vm,vs;
  WindowBegin("تعیین  استهلاک موجودی  بر اساس دفتر روزنامه",SDJRClass,CGRcW,RcType);
  SetWRect(20,80,460,298);
  vs = 20; h = 150;
  EditFieldTL(h,v=6, 150," موجودی  استهلاک شماره",M4Str,Normal,30,f1,false,0);
  PeriodField(h,v+=vs,"دوره ");
  if (HasMultiLocations) then begin
    EditFieldTL(h,v+=vs ,150,"موقعیت",M4UStr,Normal,60,f3,false,LocationSClass);
  end;
  if (HasModNL) then begin
    EditFieldTL(h,v+=vs ,150,"حساب هزینه",M4Str,Normal,20,TransStr,false,AccSClass);
  end;
  if (HasObjects) then begin
    EditFieldTL(h,v+=vs ,150,"کالا",M4Str,Normal,60,f2,false,ObjSClass);
  end;
  ButtonFrame(h=30,vm=(v+=40),123,2,"عملکرد");
  RadioButton(h,v,0,0,"مرور کلی ",ArtMode);
  RadioButton(h,v+=16,1,0,"جزییات",ArtMode);
  if (IsEnterprise) then begin
    CheckBox(h,v+=25,0,"نمایش مقدار 2 ",flags[3]);
  end;
  ButtonFrame(h+=145,v = vm,123,2,"وضعیت");
  CheckBox(h,v,0,"قبول نشده",flags[1]);
  CheckBox(h,v+=16,0,"قبول شده",flags[2]);
  if (IsEnterprise) then begin
    ButtonFrame(h+=145,v = vm,100,3,"ارزش");
    RadioButton(h,v,0,0,"بدون ازرش",flags[4]);
    RadioButton(h,v+=16,1,0,"هزینه های ارسالی",flags[4]);
    RadioButton(h,v+=16,2,0,"قیمت اصلی",flags[4]);  
  end;
  EndWindow;
end;

window StockMovJRClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vm,vs;
  WindowBegin("تعیین  موجودی  گردش دفتر روزنامه",StockMovJRClass,CGRcW,RcType);
  SetWRect(20,80,450,380);
  vs = 20; h = 150; v = 6; 
  EditFieldTL(h,v,150,"شماره",   M4Str,Normal,30,f1,false,0);
  PeriodField(h,v+=vs,"دوره ");
  EditFieldTL(h,v+=vs,80,"از مکان",   M4UStr,Normal,30,f2,false,LocationSClass);
  EditFieldTL(h,v+=vs,80,"به مکان",   M4UStr,Normal,30,f3,false,LocationSClass);
  EditFieldTL(h,v+=vs,80,"از طریق مکان",   M4UStr,Normal,10,FirstAcc,false,LocationSClass);
  EditFieldTL(h,v+=vs,150,"کالا ",   M4UStr,Normal,41,f4,false,INSClass);
  EditFieldTL(h,v+=vs,80,"برای تولید", M4Long,Normal,0,long1,false,ProdSClass);
  vm = v+40;
  ButtonFrame(h=20,v = vm,123,2,"عملکرد");
  RadioButton(h,v,0,0,"مرور کلی ",ArtMode); 
  RadioButton(h,v+=16,1,0,"جزییات",ArtMode);
  ButtonFrame(h+=138,v = vm,123,3,"ارزش");
  RadioButton(h,v,0,0,"قیمت جدید واحد",flags[4]);
  RadioButton(h,v+=16,1,0,"قیمت قدیم واحد",flags[4]);
  RadioButton(h,v+=16,2,0,"قیمت اصلی",flags[4]);
  vm = v + 48;
  ButtonFrame(h=20,v=vm,123,3,"وضعیت تائید شده");
  RadioButton(h,v,1,0,"فقط تائید نشده",flags[1]);
  RadioButton(h,v+=16,2,0,"فقط تائید شده",flags[1]);
  RadioButton(h,v+=16,0,0,"هر دو",flags[1]);
  ButtonFrame(h+=138,v=vm,123,3,"وضعیت ارسال شده");
  RadioButton(h,v,1,0,"فقط ارسال نشده",flags[2]);
  RadioButton(h,v+=16,2,0,"فقط ارسال شده",flags[2]);
  RadioButton(h,v+=16,0,0,"هر دو",flags[2]);
  ButtonFrame(h+=138,v=vm,123,3,"وضعیت دریافت شده");
  RadioButton(h,v,1,0,"فقط ادریافت نشده",flags[5]);
  RadioButton(h,v+=16,2,0,"فقط دریافت شده",flags[5]);
  RadioButton(h,v+=16,0,0,"هر دو",flags[5]);
  CheckBox(h=20,v+=32,0,"اکنون بین موقعیت ها",flags[3]);//?
  EndWindow;
end;

window RGJRClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vm,vs;
  WindowBegin("تعیین کالاهای مرجوعی بر اساس دفتر روزنامه",RGJRClass,CGRcW,RcType);
  SetWRect(20,80,430,220);
  vs = 20; h = 150; v = 6-vs; 
  EditFieldTL(h,v+=vs, 150,"شماره سریال",   M4Str,Normal,30,f1,false,0);
  PeriodField(h,v+=vs,"دوره ");
  EditFieldTL(h,v+=vs ,150,"مشتری",M4UStr,Normal,60,f2,false,CUSClass);
  EditFieldTL(h,v+=vs ,150,"تعداد سفارش ",M4Str,Normal,20,TransStr,false,0);
  EditFieldTL(h,v+=vs ,150,"موقعیت",M4Str,Normal,20,f3,false,LocationSClass);
  ButtonFrame(h=60,vm=(v+=40),123,2,"عملکرد");
  RadioButton(h,v,0,0,"مرور کلی ",ArtMode);
  RadioButton(h,v+=16,1,0,"جزییات",ArtMode);
  ButtonFrame(h+=148,v = vm,123,2,"وضعیت");
  CheckBox(h,v,0,"قبول شده",flags[1]);
  CheckBox(h,v+=16,0,"قبول نشده",flags[2]);
  EndWindow;
end;

window SHJRClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vm,vs;
  WindowBegin("مشخص تحویل مجله",SHJRClass,CGRcW,RcType);
  v = 210;
  if (IsEnterprise) then begin
    v = v + 80;
  end;
  if (HasMultiLocations) then begin
    v = v + 20;
  end;
  SetWRect(20,80,440,v);
  vs = 20; h = 150; v = 6-vs; 
  PeriodField(h,v+=vs,"دوره ");
  EditFieldTL(h,v+=vs,150,"شماره تحویل",M4Str,Normal,30,f1,false,0);
  EditFieldTL(h,v+=vs ,150,"مشتری",M4UStr,Normal,60,f2,false,CUSClass);
  EditFieldTL(h,v+=vs ,150,"تعداد سفارش ",M4Str,Normal,20,TransStr,false,0);
  if (IsEnterprise) then begin
    EditFieldTL(h,v+=vs ,150,"حالت تحویل",M4UStr,Normal,30,f3,false,DMSClass);
  end;
  if (HasMultiLocations) then begin
    EditFieldTL(h,v+=vs ,150,"موقعیت",M4UStr,Normal,30,f4,false,LocationSClass);
  end;
  if (IsEnterprise) then begin
    EditFieldTL(h,v+=vs ,150,"کالا ",M4UStr,Normal,41,LastAcc,false,INSClass);
    StaticText(h+160,v+12, "فقط جزئیات",false);
    EditFieldTL(h,v+=vs ,150,"دسته کالا ",M4UStr,Normal,21,Stext,false,ITSClass);
    StaticText(h+160,v+12, "فقط جزئیات",false);
    EditFieldTL(h,v+=vs ,150,"کلاس سفارش",M4UStr,Normal,5,f5,false,OrderClassSClass);
  end;
  ButtonFrame(h=60,vm=(v+=40),123,2,"عملکرد");
  RadioButton(h,v,0,0,"مرور کلی ",ArtMode);
  RadioButton(h,v+=16,1,0,"جزییات",ArtMode);
  ButtonFrame(h+=148,v = vm,123,2,"وضعیت");
  CheckBox(h,v,0,"قبول نشده",flags[1]);
  CheckBox(h,v+=16,0,"قبول شده",flags[2]);
  CheckBox(h=60,v+=28,0,"صفحه جدید برای هر یک از مشتریان",flags[3]);
  EndWindow;
end;

window RetPUJRClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vm,vs;
  WindowBegin("تعیین کالاهای مرجوعی به  فروشنده   بر اساس دفتر روزنامه",RetPUJRClass,CGRcW,RcType);
  SetWRect(20,80,420,220);
  vs = 20; h = 120; v = 6-vs; 
  EditFieldTL(h,v+=vs, 150,"شماره",   M4Str,Normal,30,f1,false,0);
  PeriodField(h,v+=vs,"دوره ");
  EditFieldTL(h,v+=vs ,150,"فروشنده",M4Str,Normal,60,f2,false,VESClass);
  EditFieldTL(h,v+=vs ,150,"دلیل",M4Str,Normal,20,AccStr,false,StandProblemsSClass);
  EditFieldTL(h,v+=vs ,150,"تعداد سفارش ",M4Str,Normal,20,TransStr,false,0);
  ButtonFrame(h=70,vm=(v+=40),123,2,"عملکرد");
  RadioButton(h,v,0,0,"مرور کلی ",ArtMode);
  RadioButton(h,v+=16,1,0,"جزییات",ArtMode);
  ButtonFrame(h+=148,v = vm,123,2,"تعیین");
  CheckBox(h,v,0,"قبول نشده",flags[1]);
  CheckBox(h,v+=16,0,"قبول شده",flags[2]);  
  EndWindow;
end;

window ItemStockStatExtWebRClass:1
 wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;
  WindowBegin("گزارش بالانس بر اساس موجودی",ItemStockStatExtWebRClass,CGEcW,RcType);
  SetWRect(20,80,440,150);
  vs = 20;
  h=100;
  EditFieldTL(h,v+=20,150,"تاریخ",M4Date,Normal,41,d1,false,PasteCurDate);//carefull we run ARRn
  EditFieldTL(h,v+=20,150,"کالا ",M4UStr,Normal,41,f1,false,INSClass);//carefull we run ARRn
  EditFieldTL(h,v+=20,150,"موجودی",M4UStr,Normal,41,f2,false,LocationSClass);//carefull we run ARRn
  EditFieldTL(h,v+=20,150,"طبقه بندی",M4UStr,Normal,41,f3,false,DISClass);//carefull we run ARRn
  EditFieldTL(h,v+=20,150,"برند",M4UStr,Normal,41,f4,false,DI2SClass);//carefull we run ARRn
  EditFieldTL(h,v+=20,150,"مدل",M4UStr,Normal,41,f5,false,DI3SClass);//carefull we run ARRn
  //EditField(h,v+=vs,-100,"IP",Normal,f6,false,0);
	//HalPushButton(-90,v,-10,v+20,"OstatkiSKartinkamiRn","Запуск");
  EndWindow;
end;

window PUJRClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vm,vs;
  WindowBegin("تعیین کالاهای دریافتی دفتر روزنامه",PUJRClass,CGRcW,RcType);
  SetWRect(20,80,475,340);
  vs = 20; h = 150; v = 6-vs; 
  PeriodField(h,v+=vs,"دوره ");
  EditFieldTL(h,v+=vs,150,"شماره کالاهای دریافتی",M4Str,Normal,30,f1,false,0);
  EditFieldTL(h,v+=vs ,150,"فروشنده",M4UStr,Normal,60,f2,false,VESClass);
  if (IsEnterprise) then begin
    EditFieldTL(h,v+=vs ,150,"شماره پستی",M4Str,Normal,20,TransStr,false,0);
    EditFieldTL(h,v+=vs ,150,"موقعیت",M4UStr,Normal,20,f3,false,LocationSClass);  
    EditFieldTL(h,v+=vs ,150,"کالا ",M4UStr,Normal,41,LastAcc,false,INSClass);
    StaticText(h+160,v+12, "فقط جزئیات",false);
    EditFieldTL(h,v+=vs ,150,"دسته کالا ",M4UStr,Normal,21,Stext,false,ITSClass);
    StaticText(h+160,v+12, "فقط جزئیات",false);
  end;
  ButtonFrame(h=30,vm=(v+=40),123,2,"عملکرد");
  RadioButton(h,v,0,0,"مرور کلی ",ArtMode);
  RadioButton(h,v+=16,1,0,"جزییات",ArtMode);
  ButtonFrame(h+=140,v = vm,123,2,"تعیین");
  CheckBox(h,v,0,"قبول نشده",flags[1]);
  CheckBox(h,v+=16,0,"قبول شده",flags[2]);
  if (IsEnterprise) then begin
    ButtonFrame(h+=140,v = vm,123,3,"مرتب سازی بر اساس");
    RadioButton(h,v,0,0,"شماره",flags[5]); 
    RadioButton(h,v+=16,1,0,"تاریخ",flags[5]); 
    RadioButton(h,v+=16,2,0,"موقعیت",flags[5]);
    ButtonFrame(h=30,v=vm+75,170,3,"عملکرد");
    RadioButton(h,vm=v,0,0,"شامل محموله  سهام ",flags[6]);
    RadioButton(h,v+=16,1,0,"رد محمولهسهام",flags[6]);
    RadioButton(h,v+=16,2,0,"محمولهسهاممنحصرا",flags[6]);
    ButtonFrame(h+=195,v=vm,170,3,"کالاهای TREO");
    RadioButton(h,vm=v,0,0,"شامل کالاهای TREO",flags[7]);
    RadioButton(h,v+=16,1,0,"بدون کالاهای TREO",flags[7]);
    RadioButton(h,v+=16,2,0,"فقط کالاهای TREO",flags[7]);
  end;
  EndWindow;
end;

window OrderStatusRClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
	real h,v,vm,vs;
WindowBegin("تعریف گزارش بر اساس حساب مشتریان",OrderStatusRClass,CGRcW,RcType);
		SetWRect(20,80,400,250);
			v = 6; vs = 20; h = 100;
			PeriodField(h,v,"دوره ");
			EditField(h,v+=vs,100, "شماره",Normal,long1,false,0);
			EditField(h,v+=vs,100, "نوع حساب",Normal,f1,false,OrderClassSClass);
			EditField(h,v+=vs,100, "موجودی",Normal,f2,false,LocationSClass);
		
			ButtonFrame(h=250,v=42,100,3,"فیلتر");
			RadioButton(h,v,0,0,"همه",flags[0]);
			RadioButton(h,v+=16,1,0,"بسته",flags[0]);
			RadioButton(h,v+=16,2,0,"باز",flags[0]);
		EndWindow;
end;

window CustDebByCompRClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
	real h,v,vm,vs;
WindowBegin("گزارش بدهی مشتریان",CustDebByCompRClass,CGRcW,RcType);
		SetWRect(20,80,400,250);
		v = 6; vs = 20; h = 100;
		EditField(h,v+=vs,100, "مشتری",Normal,f1,false,CUSClass);
		EndWindow;
end;

window PLLClass:2
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("قیمتها ",PLLClass,CGmlist,-);
  SpawnClass(PLDClass);
  SetWRect(64,80,609,320);
  Sizeable(-1,-1,0,0);
  UseView(PLVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,2,"کالا ",ArtCode,false,ArtCode);
  RlColKey(100,100, "لیست قیمت ",PLCode,false,PLCode);
  if (IsEnterprise or HasStandardCRM) then begin
    RlCol(180,180,"مشتری",CustCode,false);
    RlColKey(270,270, "تفسیر",Comment,false,Comment);
  end else begin
    RlColKey(180,180, "تفسیر",Comment,false,Comment);
  end;
  RlCol(-115,-30,"قیمت ",ExVatPrice,true);
  SearchField("جستجو ");
  EndWindow;
end;

window PLDClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vm,vs;
  WindowBegin("قیمت ",PLDClass,CGview,-);
  SetWRect(64,80,509,330);
  UseView(PLVc);
  v = 10; vs = 20; h = 120;
  EditField(h,v, 100,"کالا ",Normal,ArtCode,false,INSClass);
  EditField(h,v+=vs,50,"لیست قیمت ",Normal,PLCode,false,PLDefSClass);
  EditField(h,v+=vs,307,"تفسیر",Normal,Comment,false,0);
  EditField(h,v+=vs ,70,"قیمت ",Normal,ExVatPrice,true,0);
  if (HasModNL) then begin
    EditField(h,vm=(v+=vs),70,"فروش حساب رایج ",Normal,SalesAcc,false,AccSClass);
  end;
//  EditField(h,v+=vs,70,"مالیات ارزش افزودهکد",Normal,VATCode,false,VATCodeSClass);
  if (IsEnterprise or HasStandardCRM) then begin
    EditField(h,v+=vs,70,"مشتری",Normal,CustCode,false,CUSClass);
  end;
  if (IsEnterprise) then begin
    EditField(h,v+=vs ,70,"قیمت تمام شده ",Normal,CostPrice,true,0);
    EditField(h,v+=20,70,"حساب مرجوعی",Normal,BBVarAcc,false,AccSClass);
  end;
  if (IsEnterprise or HasStandardCRM) then begin
    CheckBox(80,v+=30,0,"استفاده از این قیمت ، قیمت گذاری دیگر را بکار نبرید ",NoOtherPricing);
    CheckBox(80,v+=16,0,"انجام ندادن حساب مجدد",DonotRecalculate);
  end;
  if (IsEnterprise) then begin
    CheckBox(80,v+=16,0,"تولید معامله خرید متقابل ",BBGenTrans);
  end;
  EndWindow;
end;

window INDClass:8
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  integer tilenr;
  real h,h1,h2,h3,h4,h5,v,vm,vs;
  string 255 label;
  WindowBegin("کالا ",INDClass,CGview,-);
  SetWRect(20,80,800,400);
  Sizeable(-1,-1,-1,0);
  DynamicWindow;
  UseView(INVc);
  Tile(0,87,false,"",Code);
  v = 6; vs = 20; h = 155; h1 = 300; h2 = 385; h3 = 395; h4 = 285; h5 = 433;
  EditField(h,v, 150,"شماره",Normal,Code,false,0);
  EditField(h2,v,80,"گروه",Normal,Group,false,ITSClass);
  EditField(h,v+=vs,-40,"توصیف",Normal,Name,false,0);
  tilenr = 1;
  TileButton(tilenr,"قیمت گذاری "); tilenr = tilenr + 1;
  if (HasJewelleryInterface) then begin
    TileButton(tilenr,"جواهر "); tilenr = tilenr + 1;
    TileButton(tilenr,"ساعت "); tilenr = tilenr + 1;
  end;
  TileButton(tilenr,"موجودی"); tilenr = tilenr + 1;
  TileButton(tilenr,"انبار "); tilenr = tilenr + 1;
  if (UserCanAction("ViewCostPrice",true)) then begin
    TileButton(tilenr,"هزینه ها"); tilenr = tilenr + 1;
  end;
  TileButton(tilenr,"دستورالعمل "); tilenr = tilenr + 1;
  TileButton(tilenr,"حساب رایج"); tilenr = tilenr + 1;
  if (GuiType==kGuiiPhone) then begin
    TileButton(tilenr,"تصویر"); tilenr = tilenr + 1;
  end;
  TileButton(tilenr,"انواع "); tilenr = tilenr + 1;
  TileButton(tilenr,"متنها "); tilenr = tilenr + 1;
  TileButton(tilenr,"مدل هزینه"); tilenr = tilenr + 1;
  TileButton(tilenr,"ارزش کاربر ");
  tilenr = 1;
  CheckBox(h,v+=vs,0,"بسته",Terminated);
  CheckBox(h2,v,0,"غیر قابل فروش",NotForSales);
  Tile(tilenr,209,false,tilenr,Unittext); tilenr = tilenr + 1;
  EditField(h,v=6 ,100,"واحد ",Normal,Unittext,false,UnitSClass);
  if (HasJewelleryInterface) and (UserCanAction("ViewCostPrice",true)) then begin
    EditField(h,v+=vs,100,"قیمت تمام شده ",Normal,InPrice,true,0);
  end;
  EditField(h,v+=vs,100,"قیمت اصلی",Normal,UPrice1,true,0);
  EditField(h,v+=vs,100,"تغییر قیمت پایه",ViewOnly,LastBasePriceChange,true,0);
  EditField(h,v+=vs,100,"عامل قیمت ",Normal,PriceFactor,true,0);
  EditField(h,v+=vs,100,"دستور کالا ",Normal,CalcPrice,false,CPMSClass);
  EditField(h,v+=vs,100,"درصد نرخ فروش ",Normal,Markup,true,0);
  EditField(h,v+=vs,100,"درصد پاداش",Normal,Bonus,true,0);
  EditField(h,v+=vs,-240,"کالاها  ",Normal,Objects,false,ObjSClass);
  EditField(h,v+=vs,-240,"طبقه بندی",Normal,DispGroups,false,DISClass);
  ButtonFrame(h1,v=24,120,4,"نوع کالا ");
  RadioButton(h1,v,kItemTypePlain,0,"ساده ",ItemType);
  RadioButton(h1,v+=16,kItemTypeStocked,0,"موجودیکالا",ItemType);
  RadioButton(h1,v+=16,kItemTypeStructured,0,"مورد ساختار ",ItemType);
  RadioButton(h1,v+=16,kItemTypeService,0,"خدمات ",ItemType);
  Pict_Field(-205,8,-35,178,"");
  if (GuiType==kGuiCocoa) then begin
    PushButton(-160,182,-80,202,ToolImagePicker,"ضمیمه کردن عکس");  
  end;
  CheckBox(h1,v+=32,0,"مربوط به کالا بعنوان مواد در پروژه ",ItemMaterial);
  if (HasJewelleryInterface) then begin
    Tile(tilenr,110,false,tilenr,Metal); tilenr = tilenr + 1;
    EditField(h,v=6, 140,"فلز",Normal,Metal,false,0);
    EditField(h,v+=vs, 140,"وزن ",Normal,RowWeight,false,0);
    EditField(h,v+=vs, 140,"اندازه ",Normal,Size,false,0);
    EditField(h,v+=vs, 140,"طول",Normal,Length,false,0);
    EditField(h,v+=vs, 140,"مرجع",Normal,Reference,false,0);
    v = 6; 
    EditField(h5,v, 140,"جزییات عمده سنگ",Normal,MajStoneDet,false,0);
    EditField(h5,v+=vs, 140,"رنگ",Normal,Colour,false,0);
    EditField(h5,v+=vs, 140,"وضوح ",Normal,Clarity,false,0);
    EditField(h5,v+=vs, 140,"سند رسمی",Normal,Cert,false,0);
    EditField(h5,v+=vs, 140,"جزییات سنگ کوچک",Normal,MinStoneDet,false,0);
    Tile(tilenr,90,false,tilenr,WatchBrand); tilenr = tilenr + 1;
    EditField(h,v=6, 140,"برند ساعت ",Normal,WatchBrand,false,0);
    EditField(h,v+=vs, 140,"نام سبک ",Normal,StyleName,false,0);
    EditField(h,v+=vs, 140,"فلز ساعت ",Normal,WatchMetal,false,0);
    EditField(h,v+=vs, 140,"حرکت",Normal,Movement,false,0);
    v = 6; 
    EditField(h5,v, 140,"دستبند/بند ",Normal,BrcStr,false,0);
    EditField(h5,v+=vs, 140,"جنسیت ",Normal,Gender,false,0);
    EditField(h5,v+=vs, 140,"سایر",Normal,Other,false,0);
    EditField(h5,v+=vs, 140,"غیرها 2 ",Normal,Other2,false,0);
  end;
  Tile(tilenr,170,false,tilenr,MinLevel);  tilenr = tilenr + 1; // Need to clean this Tile up!
  v = 6;
  vm = v;
  ButtonFrame(h1,v+=24,143,3,"ردیابی شماره سریال ");
  RadioButton(h1,v,0,0,"هیچ یک",SerNrf);
  RadioButton(h1,v+=16,1,0,"تعداد واحد ",SerNrf);
  RadioButton(h1,v+=16,2,0,"شماره دسته ",SerNrf);
  CheckBox(h1+200,v,0,"فاکتور مبالغ محصول لازم نمی باشد",DonotRequireBatchNrOnIVCash);
  EditField(h,v=6,100,"حداقل سطح",Normal,MinLevel,true,0);
  EditField(h,v+=vs,100,"حداکثر سطح",Normal,MaxLevel,true,0);
  EditField(h,v+=vs  ,100,"بخش",Normal,Department,false,DepSClass);
  EditField(h,v+=vs  ,100,"کد قفسه ",Normal,InvCode,false,0);
  EditField(h,v+=vs,100,"منبع پیش فرض",Normal,DefaultSource,false,SourceSClass);  
  EditField(h5,v ,50,"مالیات محیط زیست به ازای هر کیلو",Normal,RepaPricePerWeight,true,0);
  EditField(h,v+=vs ,100,"سطح خطر ",Normal,HazLevCode,false,HazLevSClass);
  EditField(h5,v ,50,"درصد الکل",Normal,AlcPrc,true,0);
  EditField(h,v+=vs ,100,"واحد 2 ",Normal,Unittext2,false,UnitSClass);
  EditField(h5,v ,50,"گفتگو 1",Normal,Conversion1,true,0);
  EditField(h,v+=vs,100,"ضریب واحد ",Normal,UnitCoefficient,true,0);
  EditField(h5,v ,50,"گفتگو 2",Normal,Conversion2,true,0);
  Tile(tilenr,170,false,tilenr,LocArea);  tilenr = tilenr + 1;
  EditField(h,vm=(v=6) ,100," پالت پیش فرض کالا",Normal,DefPalletItem,true,INSClass);
  EditField(h5,v ,80,"منطقه برداشت ",Normal,PickArea,false,LocAreaSClass);
  EditField(h,v+=vs ,100,"ناحیه موقعیت پیش فرض",Normal,LocArea,false,LocAreaSClass);
  EditField(h5,v ,50,"پالت چوبی در منطقه برداشت",Normal,PalletsInPickArea,true,0);
  EditField(h,v+=vs ,50," حداکثر.تعداد برای پالت",Normal,QtyonPallet,true,0);
  EditField(h4,v ,50,"لایه های پالت ",Normal,PalletLayers,true,0);
  EditField(h5,v ,50,"تعداد در هر لایه ",Normal,QtyonPalletLayer,true,0);
  EditField(h,v+=vs ,50,"عرض پالت کامل ",Normal,PalletWidth,true,0);
  EditField(h4,v ,50,"ارتفاع ",Normal,PalletHeight,true,0);
  EditField(h5,v ,50,"عمق",Normal,PalletDepth,true,0);
  EditField(h,v+=vs ,50,"عرض مکان پیش فرض",Normal,DefPosWidth,true,0);
  EditField(h4,v ,50,"ارتفاع ",Normal,DefPosHeight,true,0);
  EditField(h5,v ,50,"عمق",Normal,DefPosDepth,true,0);
  EditField(h,v+=vs ,50,"عرض کالا ",Normal,Width,true,0);
  EditField(h4,v ,50,"ارتفاع ",Normal,Height,true,0);
  EditField(h5,v ,50,"عمق",Normal,Depth,true,0);
  EditField(h,v+=vs ,50,"اندازه کالا ",Normal,Volume,true,0);
  EditField(h4,v ,50,"تراکم",Normal,Density,true,0);
  EditField(h5,v ,50,"وزن خالص ",Normal,NetWeight,true,0);
  EditField(h5,v+=vs ,50,"وزن ",Normal,Weight,true,0);
  if (UserCanAction("ViewCostPrice",true)) then begin
  Tile(tilenr,190,false,tilenr,InPrice);  tilenr = tilenr + 1;
  EditField(h,vm=(v=6),100,"قیمت تمام شده ",Normal,InPrice,true,0);
  EditField(h5,v,70,"تغییر قیمت هزینه ",ViewOnly,LastPriceChange,true,0);
  EditField(h,v+=vs ,100,"قیمت تمام شده در پایگاه 2",Normal,InPriceB2,true,0);
  ButtonFrame(h1,v+=24,200,4,"به روز رسانی. قیمت تمام شده فاکتور کالاها ");
  RadioButton(h1,v,0,0,"خیر",UpdateCost);
  RadioButton(h1,v+=16,1,0,"اخرین هزینه خرید(شامل.اضافی)",UpdateCost);
  RadioButton(h1,v+=16,2,0,"میانگین وزن ",UpdateCost);
  RadioButton(h1,v+=16,3,0,"اخرین هزینه خرید (جز.اضافی)",UpdateCost);
  ButtonFrame(h5=540,v=v-3*16,200,3,"به روز رسانی.قیمت تمام شده.سهام .تغییر ارزش پول");
  RadioButton(h5,v,0,0,"خیر",SRUpdateCost);
  RadioButton(h5,v+=16,1,0,"اخرین هزینه تخمین ارزش پول",SRUpdateCost);
  RadioButton(h5,v+=16,2,0,"میانگین وزن ",SRUpdateCost);
  EditField(h,v=vm+2*vs,100,"هزینه اضافی",Normal,ExtraCost,true,0);
  EditField(h,v+=vs ,100,"میانگین وزن ",Normal,WeighedAvPrice,true,0);
  EditField(h,v+=vs ,100,"میانگین وزن. پایه 2",Normal,WeighedAvPriceB2,true,0);
  EditField(h,v+=vs ,100,"اخرین هزینه خرید (شامل.اضافی)",Normal,LastPurchPrice,true,0);
  EditField(h,v+=vs ,100,"اخرین قیمت خرید ([جز. اضافی)",Normal,LastPurchPrice2,true,0);
  EditField(h,v+=vs ,100,"اخرین خرید رایج",Normal,LastPurchCurncyCode,false,CurncyCodeSClass);
  EditField(h,v+=vs ,100,"کرایه حمل مقطوع ",Normal,FixedFreight,true,0);
  CheckBox(h1,v,0,"شامل هزینه ثابت کالا ",InclItemFreight);
  end;
  Tile(tilenr,170,false,tilenr,Recepy);  tilenr = tilenr + 1;
  EditField(h,v=6 ,120,"دستورالعمل ",Normal,Recepy,false,RecSClass);
  CheckBox(h1,v,0,"جابجایی قطعات در مدت ورود ",ExplodeRec); // "Show components on documents" is better English but VERY confusing
  EditField(h,v+=vs ,120,"رسید فاکتور ",Normal,InvRecepy,false,RecSClass);
  EditField(h2,v,150,"بارکد",Normal,BarCode,false,0);
  EditField(h,v+=vs ,120,"مورد قرارداد",Normal,ContractItem,false,INSClass);
  EditField(h2,v,150,"کد کالا",Normal,EUCodex,false,CommoditySClass);
  EditField(h,v+=vs ,120,"صورتحساب اجاره ",Normal,RentalItem,false,INSClass);
  EditField(h2,v,150,"کد سفارت هلند",Normal,EKNCode,false,0); // i think it is same as Commodity Code
  EditField(h2,v+=vs,150,"طبقه بندی محصولات وسرویسها",Normal,CPSCode,false,0);
  EditField(h,v+=vs ,120,"ماه گارانتی ",Normal,WarrantyLength,true,0);
  EditField(h2,v,150,"رنگ",Normal,colnr,false,SetSClass);
  EditField(h,v+=vs,-40,"کد جایگزین",Normal,AlternativeCode,false,0);
  EditField(h,v+=vs,-40,"هشدار ",Normal,WarnText1,false,0);
  Tile(tilenr,170,false,tilenr,SalesAcc);  tilenr = tilenr + 1;
  v = 6;
  vm = v;
  EditField(h,vm,55,"کارفرماحراج حساب فروش",Normal,SalesAcc,false,AccSClass);
  EditField(h,v+=vs,55,VATZoneNameENG & "فروش حساب رایج ",Normal,EUSalesAcc,false,AccSClass);
  EditField(h,v+=vs,55,"فروش صادرات حساب رایج",Normal,ExpSalesAcc,false,AccSClass);
  EditField(h,v+=vs,55,"خدمات فروش حساب غیر محسوس",Normal,SVOInvbleSalesAcc,false,AccSClass);
  EditField(h,v+=vs,55,"خدمات فروش گارانتی حساب ارزی ",Normal,SVOWarrantySalesAcc,false,AccSClass);
  EditField(h,v+=vs,55,"خدمات قرارداد فروش حساب ",Normal,SVOContractSalesAcc,false,AccSClass);
  EditField(h,v+=vs,55,"خدمات توافق فروش برای حساب ",Normal,SVOGoodwillSalesAcc,false,AccSClass);

  EditField(h,v+=vs,55,"کاربرد قطعات",Normal,CompUsage,false,AccSClass);

  EditField(h2=360,v=vm,55,"کارفرماهزینه حساب رایج",Normal,CostAcc,false,AccSClass);
  EditField(h2,v+=vs,55,VATZoneNameENG & "حساب رایج هزینه ها",Normal,EUCostAcc,false,AccSClass);
  EditField(h2,v+=vs,55,"هزینه صادرات حساب رایج",Normal,ExpCostAcc,false,AccSClass);
  EditField(h2,v+=vs,55,"خدمات هزینه حساب غیر محسوس",Normal,SVOInvbleCostAcc,false,AccSClass);
  EditField(h2,v+=vs,55,"خدمات هزینه گارانتی حساب ارزی ",Normal,SVOWarrantyCostAcc,false,AccSClass);
  EditField(h2,v+=vs,55,"خدمات قرارداد هزینه حساب ",Normal,SVOContractCostAcc,false,AccSClass);
  EditField(h2,v+=vs,55,"خدمات توافق هزینه برای حساب ",Normal,SVOGoodwillCostAcc,false,AccSClass);
  EditField(h2,v+=vs,55,"روند حساب جاری هتل ",Normal,HotelWIPAcc,false,AccSClass);

  EditField(h2=530,v=vm,20,"کارفرمامالیات ارزش بر افزودهکد",Normal,VATCode,false,VATCodeSClass);
  EditField(h2,v+=vs,20,VATZoneNameENG & "مالیات ارزش افزودهکد",Normal,VATCodeEU,false,VATCodeSClass);
  EditField(h2,v+=vs,20,"صادرات  مالیات بر ارزش افزوده برنامه",Normal,VATCodeExp,false,VATCodeSClass);
  CheckBox(h2,v+=20,0,"محاسبه مالیات",Perceptions);
  CheckBox(h2,v+=16,0,"محاسبه مالیات موضوعی",Withholdings);
  EditField(h2=670,v=vm,50,"کارفرمامالیات موقت",Normal,TaxTemplateCode,false,TaxTemplateSClass);
  EditField(h2,v+=vs,50,VATZoneNameENG & "مالیات موقت ",Normal,TaxTemplateCodeEU,false,TaxTemplateSClass);
  EditField(h2,v+=vs,50,"مالیات موقتی صادرات",Normal,TaxTemplateCodeExp,false,TaxTemplateSClass);
  if (GuiType==kGuiiPhone) then begin
    Tile(tilenr,70,false,tilenr,-);  tilenr = tilenr + 1;
    AttachmentDisplay(10,10,200,200);
//    PushButton(30,10,-80,40,ToolImagePicker,"Take picture");
//    ControlLabel(0,0,0,0,"Take picture","SystemFont",17,kTextStyleBold,AdjCenter,patM4ReportsTextBlue);
  end;
  Tile(tilenr,70,false,tilenr,VARMask);  tilenr = tilenr + 1;
  EditField(h,v=6,-40,"ماسکهای مختلف ",Normal,VARMask,false,VARMasksSClass);
  EditField(h,v+=vs,-40,"ترتیب گزارش ",Normal,VARRepOrder,false,VARMasksSClass);
  EditField(h,v+=vs,-40,"زیر مجموعه ",Normal,VARSubsets,false,VARSubsetsSClass);
  Tile(tilenr,120,true,tilenr,Math);  tilenr = tilenr + 1;
  v = 24;
  MatrixBegin(4,v,-32,-40,-,99);
  MatCol(1,24,"زبان ",0,LangCode,false,LangSClass);
  MatCol(1,94,"متن ",0,Text,false,0);
  EndMatrix;
  Tile(tilenr,220,false,tilenr,CostPerc);  tilenr = tilenr + 1;
  ButtonFrame(h=100,vm=(v=20),230,6,"نمونه هزینه اولیه ");
  RadioButton(h,v,0,0,"پیش فرض",PrimaryCostModel);
  RadioButton(h,v+=16,1,0,"قیمت تمام شده ",PrimaryCostModel);
  RadioButton(h,v+=16,2,0,"درصد _ قیمت اصلی",PrimaryCostModel);
  EditField(h+150,v,55,"%",Normal,CostPerc,true,0);
  RadioButton(h,v+=16,3,0,"میانگین وزن ",PrimaryCostModel);
  RadioButton(h,v+=16,4,0,"صف ",PrimaryCostModel);
  RadioButton(h,v+=16,kCostModelNoneItem,0,"هیچ یک",PrimaryCostModel);
  ButtonFrame(h,v+=40,230,3,"مدل هزینه در صف");
  RadioButton(h,v,0,0,"پیش فرض",QueuedCostModel);
  RadioButton(h,v+=16,1,0,"قیمت نفت صنعتی",QueuedCostModel);
  RadioButton(h,v+=16,2,0,"قیمت LIFO",QueuedCostModel);  
  
  ButtonFrame(h2=380,v=vm,200,3,"قیمت تمام شده برای شماره سریال");
  RadioButton(h2,v,0,0,"پیش فرض",FIFOPerSerialNr);
  RadioButton(h2,v+=16,1,0,"قیمت تمام شده برای شماره سریال نمی باشد",FIFOPerSerialNr);
  RadioButton(h2,v+=16,2,0,"قیمت تمام شده برای شماره سریال",FIFOPerSerialNr);  
  ButtonFrame(h2,v+=40,200,3,"مدل هزینه در صف بر اساس مکان");
  RadioButton(h2,v,0,0,"پیش فرض",FIFOPerLocation);
  RadioButton(h2,v+=16,1,0,"هزینه در صف نه بر اساس مکان",FIFOPerLocation);
  RadioButton(h2,v+=16,2,0,"هزینه در صف بر اساس مکان",FIFOPerLocation);  
  ButtonFrame(h2,v+=40,200,3,"انبار هر موقعیت ");
  RadioButton(h2,v,0,0,"پیش فرض",WAPerLocation);
  RadioButton(h2,v+=16,1,0,"انبار نه در هر محل ",WAPerLocation);
  RadioButton(h2,v+=16,2,0,"انبار هر موقعیت ",WAPerLocation);  
/*5.3  
  ButtonFrame(h2,v+=40,200,3,"قیمت تمام شده در هر محل");
  RadioButton(h2,v,0,0,"پیش فرض",CostPricePerLocation);
  RadioButton(h2,v+=16,1,0,"قیمت دتمام شده برای هر موقعیتی نمی باشد",CostPricePerLocation);
  RadioButton(h2,v+=16,2,0,"قیمت تمام شده در هر محل",CostPricePerLocation);  
*/  
  Tile(tilenr,240,false,tilenr,-);
  h = 180; v = 6;
  label = UserDefined("INVc","UserStr1");
  if (nonblank(label)) then begin
    EditField(h,v=6 ,-40,label,Normal,UserStr1,false,0);
  end;
  label = UserDefined("INVc","UserStr2");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,-40,label,Normal,UserStr2,false,0);
  end;
  label = UserDefined("INVc","UserStr3");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,-40,label,Normal,UserStr3,false,0);
  end;
  label = UserDefined("INVc","UserStr4");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,-40,label,Normal,UserStr4,false,0);
  end;
  label = UserDefined("INVc","UserStr5");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,-40,label,Normal,UserStr5,false,0);
  end;
  label = UserDefined("INVc","UserVal1");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,50,label,Normal,UserVal1,true,0);
  end;
  label = UserDefined("INVc","UserVal2");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,50,label,Normal,UserVal2,true,0);
  end;
  label = UserDefined("INVc","UserVal3");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,50,label,Normal,UserVal3,true,0);
  end;
  label = UserDefined("INVc","UserDate1");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,80,label,Normal,UserDate1,true,PasteCurDate);
  end;
  label = UserDefined("INVc","UserDate2");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,80,label,Normal,UserDate2,true,PasteCurDate);
  end;
  label = UserDefined("INVc","UserDate3");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,80,label,Normal,UserDate3,true,PasteCurDate);
  end;
  if (UserCanReport("INInfoRn","",true)) then begin
    SpecialMenu("گزارش وضعیت کالا ",'I',0,"INStatusINDsm");
  end;
  SpecialMenu("ایجاد خرید کالا",' ',1,"PIFromINDsm");
  SpecialMenu("ایجاد رسید",' ',2,"RecFromINDsm");
//  SpecMenuItem("Recalculate Price List",' ',2);
  if (UserCanReport("INrsRn","INrsRClass",true)) then begin
    SpecialMenu("تاریخچه کالا ",'h',3,"INHistINDsm");//CMD H DOES HIDE HANSA
  end;
  SpecialMenu("وضعیت موقعیتی کالا ",' ',4,"LocItemStatDsm");
  if (HasJewelleryInterface) and (UserCanReport("INInfoRn","",true)) then begin
    SpecialMenu("وضعیت کالا هر کد متناوب ",'S',5,"ItemStatusAltINDsm");
  end;
  EndWindow;
end;

window LocalMachineTClass:2
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vm,vs;
  string 255 label;
  Integer tilenr;

  WindowBegin("ماشین محلی ",LocalMachineTClass,CGSbl,-);
  SetWRect(64,80,600,610);
  SetBlid(LocalMachineBlock);
  vs = 20;
  Tile(0,50,false,"",LocalMachineCode);
  EditField(h=200,v=6,60,"کد",Normal,LocalMachineCode,false,LocalMachineSClass);
  tilenr = 1;
  TileButton(tilenr,"پیش فرض ها"); tilenr = tilenr + 1;
  TileButton(tilenr,"فونت"); tilenr = tilenr + 1;
  if (HasHotelInterface) then begin // Hotel
    TileButton(tilenr,"هتل "); tilenr = tilenr + 1;
  end else begin
    TileButton(tilenr,"برنامه ریزی منابع"); tilenr = tilenr + 1;
  end;
  TileButton(tilenr,"ادغام "); tilenr = tilenr + 1;
  TileButton(tilenr,"تعریف شده توسط کاربر "); tilenr = tilenr + 1;
  TileButton(tilenr,"اعتباری "); tilenr = tilenr + 1;
  tilenr = 1;
  Tile(tilenr,475,false,tilenr,DefLocation); tilenr = tilenr + 1;
  v = 6;
  EditField(h,v,60,"موقعیت پیش فرض",Normal,DefLocation,false,LocationSClass);
  EditField(h,v+=vs,60,"محل بازگشت پیش فرض",Normal,DefReturnLocation,false,LocationSClass);
  EditField(h,v+=vs,120,"پرینتر پیش فرض",Normal,DefPrinter,false,0);
  EditFieldTL(h,v+=vs,180,"صفحه کد صادرات پیش فرض",M4StrSet,Normal,89,DefExpCodepage,false,StrSetSClass);
  EditField(h,v+=vs,60,"مشتری پیش فرض",Normal,DefCustCode,false,CUSClass);
  EditField(h,v+=vs,60,"پیش فرضرستوراننوع کالا",Normal,DefRestDisp,false,DISClass);
  EditField(h,v+=vs,100,"شعبه",Normal,BranchID,false,ContactCUSClass);
  EditField(h,v+=vs,100,"چاپگر",Normal,FiscalPrinter,false,SetSClass);  
  EditField(h,v+=vs,60,"نقطه شروع زمان گرینویچ ",Normal,GMTOffset,false,0);  
  ButtonFrame(h2=30,vm=(v+=40),153,4,"جابه جایی خاص کالا ");
  RadioButton(h2,v,0,0,"سیستم پیش فرض",ItemPasteSpecial);
  RadioButton(h2,v+=16,1,0,"بدون طبقه بندی ",ItemPasteSpecial);
  RadioButton(h2,v+=16,2,0,"با طبقه بندی ",ItemPasteSpecial);
  RadioButton(h2,v+=16,3,0,"بدون برنامه ",ItemPasteSpecial);

  ButtonFrame(h2=30,v+=40,153,3,"فعال کردن برنامه پیست اسپشیال");
  RadioButton(h2,v,0,0,"سیستم پیش فرض",ActTypePastePerClass);
  RadioButton(h2,v+=16,1,0,"فعال کردن طبقه بندی هر نوع کالا",ActTypePastePerClass);
  RadioButton(h2,v+=16,2,0,"نوع فعالیتهای مورد علاقه ",ActTypePastePerClass);
  ButtonFrame(h2=30,v+=40,153,4,"حمل صندوق پستی ویژه");
  RadioButton(h2,v,3,0,"روابط تماس ",MailboxPasteSpecial);
  RadioButton(h2,v+=16,1,0,"مشتریان",MailboxPasteSpecial);
  RadioButton(h2,v+=16,2,0,"فروشنده ها",MailboxPasteSpecial);
  RadioButton(h2,v+=16,0,0,"صندوق پستها / کنفرانسها ",MailboxPasteSpecial);
  CheckBox(h,v=vm,0,"به موقع هنگام پاک کردن ",WarnOnDelete);
  CheckBox(h,v+=17,0,"نمایش راهنمای ابزار لازم نمی باشد",NoToolTips);
  CheckBox(h,v+=17,0,"بار تب فعال ",OneBarTabWindow);
  CheckBox(h,v+=17,0,"حذف پس زمینه ",NoBackGround);
  CheckBox(h,v+=17,0,"نوارهای مرورگر گسترده ",WideScrollBars);
  CheckBox(h,v+=17,0,"سرور بلا استفاده است وقتی غیر فعال است ",NoServerModeIdle);
  CheckBox(h,v+=17,0,"پس زمینه همگام ایمیل",BackgroundMailSync);  
  CheckBox(h,v+=17,0,"وضعیت خودکار صفحه نمایش مشتری بر روی تماس های ورودی",CustPSOnCall);  
  Tile(tilenr,70,false,tilenr,entryFont); tilenr = tilenr + 1;
  v = 6;
  EditField(h,v,-20,"ویرایش فونت",Normal,entryFont,false,FontNameSClass);
  EditField(h,v+=vs,-20,"فونت گزارش  ",Normal,reportFont,false,FontNameSClass);
  EditField(h,v+=vs,50,"اندازه فونت گزارش ",Normal,reportFontSize,false,0);
  v = 6;
  if (HasHotelInterface) then begin // Hotel
    Tile(tilenr,100,false,tilenr,ResLoc); tilenr = tilenr + 1;
    EditField(h,v,60,"محل اتاق ",Normal,ResLoc,false,ResLocSClass);
    EditField(h,v+=vs,150,"طبقه بندی اتاق ",Normal,ResClass,false,ResClasSClass);
    EditField(h,v+=vs,60,"تعداد سیستم قفل رمز گذار",Normal,LockSysEncoderNo,false,0);
  end else begin
    Tile(tilenr,50,false,tilenr,ResLoc); tilenr = tilenr + 1;
    EditField(h,v,60,"محل منابع ",Normal,ResLoc,false,ResLocSClass);
    EditField(h,v+=vs,150,"طبقه بندی منابع ",Normal,ResClass,false,ResClasSClass);
  end;
  Tile(tilenr,130,false,tilenr,SkypeInt); tilenr = tilenr + 1;
  ButtonFrame(h,v=20,123,3,"تماس از طریق اسکایپ");
  RadioButton(h,v,1,0,"بله ",SkypeInt);
  RadioButton(h,v+=16,2,0,"خیر",SkypeInt);
  RadioButton(h,v+=16,0,0,"بدون تصمیم گیری",SkypeInt);

  CheckBox(h,v+=30,0,"کالاها و قیمتهای هماهنگ برای",SyncRecordforPOS);  
  EditField(h,v+=vs,-40,"نوع کالا .از نظر هماهنگی ",Normal,SyncINClass,false,DISClass);

  Tile(tilenr,300,false,tilenr,UserStr1); tilenr = tilenr + 1;
  label = UserDefined("LocalMachineSetVc","UserStr1");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,-20,label,Normal,UserStr1,false,0);
  end;
  label = UserDefined("LocalMachineSetVc","UserStr2");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,-20,label,Normal,UserStr2,false,0);
  end;
  label = UserDefined("LocalMachineSetVc","UserStr3");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,-20,label,Normal,UserStr3,false,0);
  end;
  label = UserDefined("LocalMachineSetVc","UserStr4");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,-20,label,Normal,UserStr4,false,0);
  end;
  label = UserDefined("LocalMachineSetVc","UserStr5");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,-20,label,Normal,UserStr5,false,0);
  end;
  Tile(tilenr,450,false,tilenr,Supervisor); tilenr = tilenr + 1;
  EditField(h=200,v=6,60,"سر پرست ",Normal,Supervisor,false,UserSClass);
  EditField(h,v+=20,60,"بسته بندی",Normal,Bagger,false,BaggerSClass);
  EditField(h,v+=vs,60,"لیست قیمت ",Normal,PLCode,false,PLDefSClass);
  EditField(h,v+=vs,150,"گروه دکمه اعتباری ",Normal,POSButtonGroup,false,POSButtonGroupsSClass);
  EditField(h,v+=20,150,"چاپ الکترونیکی مالی.مسیر مجله ",Normal,FiscalPrinterEJournalPath,false,0);
  EditField(h,v+=20,150,"چاپ الکترونیکی مالی.مسیر مجله 2 ",Normal,FiscalPrinterEJournalPath2,false,0);
  EditField(h,v+=20,150,"مشاهده جدول ",Normal,TableViewCode,false,TablesViewsSClass);
  EditField(h,v+=20,150,"کلاس فاکتور",Normal,RestAccClass,false,RestAccClassSClass);
  EditField(h,v+=vs,100,"شناسه ترمینال ",Normal,TerminalID,false,0);
  CheckBox(h,v+=20,0,"رابط صفحه نمایش لمسی ",TouchScreenLook);
  CheckBox(h,v+=16,0,"فروشنده پیش فرض سرپرست و فروشنده در رسید",DefaulBaggerSupervisor);
  CheckBox(h,v+=16,0,"ارایه فروشنده روی فاکتوراعتباری ",ShowBaggerSupervisor);
  CheckBox(h,v+=16,0,"کیفیت نهان روی فاکتور اعتباری ",HideQty);
  CheckBox(h,v+=16,0,"نیازبه کد مجاز برای پرداختهای کارت اعتباری ",CCRequireAuthCode);
  CheckBox(h,v+=16,0,"چاپ رسید افزایشی ",IncrementalReceiptPrinting);  
  CheckBox(h,v+=16,0,"استفاده از صفحه نمایش نقدی ",UseDisplay);
  CheckBox(h,v+=16,0,"استفاده از صفحه نمایش مشتری ",UseCustomerDisplay);
  ButtonFrame(h,v+=40,100,2,"موقعیت دکمه ها");
  RadioButton(h,v,kPOSButtonsPositionLeft,0,"چپ",POSButtonsPosition);
  RadioButton(h,v+=16,kPOSButtonsPositionRight,0,"راست",POSButtonsPosition);
  ButtonFrame(h,v+=40,100,3,"اندازه فونت قطعه ");
  RadioButton(h,v,0,0,"22",POSFontSize);
  RadioButton(h,v+=16,1,0,"16",POSFontSize);
  RadioButton(h,v+=16,2,0,"11",POSFontSize);
  EndWindow;
end;

window CULClass:10
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("تماس ها",CULClass,CGmlist,-);
  SpawnClass(CUDClass);
  SetWRect(20,80,760,300);
  Sizeable(-1,-1,0,0);
  UseView(CUVc);
//  FormName(CustRn);  // Crash in multiuser
//  h = 20; HalPushButton(h,v=3,h=h+100,v+vs,"VEList","فروشنده ها");
//  HalPushButton(h=h+50,v=3,h=h+100,v+vs,"CUList","مشتریان");
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"شماره",Code,false,Code);
  RlColKey(96,96,"کوتاه ",SearchKey,false,SearchKey);
  RlColKey(145,140,"مقوله",CustCat,false,Group);
  RlColKey(190,190,"نام",Name,false,Name);
  RlColKey(-420,-420,"تلفن ",Phone,false,Phone);
  RlColKey(-325,-325,"تماس",Person,false,Person);
  RlColKey(-215,-215,"بخش",Department,false,Department);
  if (CUVATNrColumn) then begin
    RlColKey(-125,-125,"شماره ثبت مالیات ارزش افزوده",VATNr,false,VATNr);
  end else begin
    RlColKey(-125,-125," ثبت شماره ",RegNr1,false,RegNr1);
  end;
  RlColKey(-50,-50,"حساب بانکی",BankAccount,false,BankAccount);
  SearchField("جستجو ");
  CommunicateButton;
  if (HasLimitedAccess) then begin 
    BrowseSubsetButton(-40,-15);
  end;
  SpecialMenu("وضعیت مشتری",'e',0,"CUStatusCULsm");
  SpecialMenu("فروشندهوضعیت",'u',2,"VEStatusLsm");
  SpecialMenu("تغییر رمز عبور",' ',1,"ChangePasswdCULsm");
  SpecialMenu("جستجو ",'F',3,"CUSearchLsm");
  SpecialMenu("ایجاد فعالیت",'c',4,"NewActCULsm");
  if (GuiType==kGuiCocoa) then begin
    SpecialMenu("واردات دفترچه آدرس",' ',5,"ImportAddressbooksm");
  end;
  EndWindow;
end;

window CUSClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","android,computer,iPad,iPhone")
begin
  Integer pos;
  
  WindowBegin("جابجایی مشتری ",CUSClass,CGslist,-);
  if (HasStandardCRM or HasStandardCommunicator or HasStandardOrganizer or IsEnterprise) then begin
    SetWRect(20,80,600,298);
  end else begin
    if (HasLocalization("POL")) then begin
      SetWRect(20,80,560,298);  
    end else begin
      SetWRect(20,80,530,298);  
    end;
  end;
  Sizeable(-1,-1,0,0);
  UseView(CUVc);
  SpawnClass(CUDClass);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"شماره",Code,false,ActCode);
  pos = 96;
  if (HasLocalization("POL")) and (IsEnterprise==false) then begin
    RlColKey(pos,pos,"کوتاه ",SearchKey,false,SearchKey);
    pos = 160;
  end;
  if (HasStandardCommunicator or IsEnterprise) then begin
    RlColKey(pos,pos,"کوتاه ",SearchKey,false,ActSearchKey);
    pos = pos + 50;
    RlColKey(pos,pos,"مقوله",CustCat,false,ActGroup);
    pos = pos + 50;
    RlColKey(pos,pos,"نام",Name,false,ActName);
  end else begin
    if (HasStandardCRM or HasStandardOrganizer) then begin
      RlColKey(pos,pos,"نام",Name,false,ActName);
      pos = pos + 50;
    end else begin
      if (HasLocalization("POL")) then begin
        RlColKey(pos,pos,"شماره ثبت مالیات ارزش افزوده",VATNr,false,VATNr);
        pos = pos + 120;
      end;
      RlColKey(pos,pos,"نام",Name,false,ActName);
    end;
  end;
  if (HasStandardCommunicator or IsEnterprise) then begin
    RlColKey(-180,-180,"بخش",Department,false,ActDepartment);
    if (CUVATNrColumn) then begin
      RlColKey(-80,-80,"شماره ثبت مالیات ارزش افزوده",VATNr,false,ActVATNr);
    end else begin
      RlColKey(-80,-80," ثبت شماره ",RegNr1,false,ActRegNr1);
    end;
  end;
  if (HasLimitedAccess) then begin 
    BrowseSubsetButton(-40,-15);
  end;
  SearchField("جستجو ");
  if (HasStandardCRM or HasStandardCommunicator or HasModCO or IsEnterprise) then begin
    SpecialMenu("وضعیت مشتری",'e',0,"CUStatusCUSsm");
  end;
  if (BuildProductCode!="StandardProjects") and (BuildProductCode!="StandardHotel") then begin
    SpecialMenu("جستجو ",'F',1,"CUSearchLsm");
  end;
  EndWindow;
end;

window INSClass:4
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer,android,iPad,iPhone")
begin
  real v;
  Integer icn;

  icn = StringToInt(USetStr(912));
  WindowBegin("مورد چسباندن ",INSClass,CGslist,-);
  Sizeable(-1,-1,0,0);
  UseView(INVc);
  SpawnClass(INDClass);
  if (GuiType==kGuiAndroid) then begin
    SetWRect(0,0,320,418);
    WindowTitleBar(6002,icn,6003,"مورد چسباندن ");
    RecordList(0,0,-1,-1);
    RLCellKey(0,12,280,12,Code,false,kFontSizeLarge,patM4curpen,Code);
    RLCell(0,56,80,56,Group,false,kFontSizeSmall,patM4curpen);
    RLCell(80,56,280,56,Name,false,kFontSizeSmall,patM4curpen);
    RLCell(-50,56,-1,56,UPrice1,false,kFontSizeSmall,patM4curpen);
  end else begin
    if (GuiType==kGuiiPhone) then begin
      RecordList(4,17,-21,-39);
      RLCellKey(10,6,150,19,Code,false,12,patM4blue,Code);
      RLCell(210,6,280,19,Group,false,12,patM4black);
      RLCell(10,26,150,39,Name,false,12,patM4black);
      RLCell(210,26,280,39,UPrice1,false,12,patM4black);
    end else begin
      v = 0;
      if (GuiType==kGuiCocoa) then begin
        SetWRect(210,80,850,498);
        FlowView(0,0,-1,200);
        v = v+200;
      end else begin
        SetWRect(210,80,850,298);
      end;
      RecordList(4,v+17,-21,-39);
      RlColKey(4,4,"شماره",Code,false,ActCode);
      if (HasModIN) then begin
        RlColKey(105,105,"گروه",Group,false,ActGroup);
        RlColKey(160,160,"توصیف",Name,false,ActName);
      end else begin
        RlColKey(105,105,"توصیف",Name,false,ActName);
      end;
      if (IsEnterprise) then begin
        RlColKey(-250,-250,"لیست کدهای مختلف",AlternativeCode,false,ActAlternativeCode);
      end;
      if (IsEnterprise) or (HasModIN) then begin
        RlCol(-120,-120,"قیمت اصلی",UPrice1,true);
      end else begin
        RlCol(-120,-120,"قیمت ",UPrice1,true);
      end;
      if (IsEnterprise) then begin
        CalculatedColumn(-50,-50,"در انبار ","INSClassInStock",true);
      end;
      SearchField("جستجو ");
      if (HasModIN) then begin
        if (UserCanReport("INInfoRn","",true)) then begin
          SpecialMenu("گزارش وضعیت کالا ",'I',0,"INStatusINSsm");
        end;
      end;
      if (IsEnterprise) then begin
        SpecialMenu("جستجو ",'F',1,"INSearchSsm");
        SpecialMenu("آیتم های جایگزین ",'l',2,"AltItemINSsm");
        SpecialMenu("آیتم صلیب فروش ",'r',2,"CrossItemINSsm");
      end;
    end;
    SearchField("جستجو ");
  end;
  EndWindow;
end;

window PLDefDClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,l,v;
  WindowBegin("لیست قیمت ",PLDefDClass,CGview,-);
  UseView(PLDefVc);
  SetWRect(20,80,550,370);
  EditField(h=110,v=10,50,"کد",St_i,Code,false,0);
  EditField(250,v,-40,"توصیف",Normal,Comment,false,0);
  if (IsEnterprise) then begin
    EditField(h,v+=20,80,"دوره ",Normal,StartDate,false,PasteCurDate);
    EditField(250,v,80,"-",Normal,EndDate,false,PasteCurDate);
    EditField(400,v,80,"ارز",Normal,CurncyCode,false,CurncyCodeSClass);
    EditField(h,v+=20,80,"زمان",Normal,StartTime,false,PasteCurTime);
    EditField(250,v,80,"-",Normal,EndTime,false,PasteCurTime);
    EditField(h,v+=20,80,"جایگزین",Normal,PLReplCode,false,PLDefSClass);
    EditField(h,v+=20,80,"تامین کننده بیع متقابل",Normal,BBVECode,false,VESClass);
    EditField(h,v+=20,80,"حساب مرجوعی",Normal,BBVarAcc,false,AccSClass);
  end else begin
    if (HasMultiCurrency) then begin
      EditField(h,v+=20,80,"ارز",Normal,CurncyCode,false,CurncyCodeSClass);
    end;
  end;
//  EditField(230,v,80,"کد مالیات بر ارزش افزوده",Normal,VATCode,false,VATCodeSClass);
  if (IsEnterprise or HasAdvancedPricing) then begin
    h = 7; v=v+19; l = 35;
    MatrixBegin(h,v+=22,h+320,-11,-,200);
    //StaticText(h=45,v-5,"کد",false);
    MatCol(1,h=34,"نوع ردیف",0,CodeType,false,SetSClass);
    MatCol(1,h+=84,"مورد / مورد گروه",60,ItemCode,false,ITSClass);
    MatCol(1,-100,"فرم قیمت",5,Formula,false,PFormSClass);
    MatCol(1,-30,"کد مالیات بر ارزش افزوده",5,VATCode,false,VATCodeSClass);
    EndMatrix;
    ButtonFrame(h=360,v=83,150,3,"مالیات بر ارزش افزوده");
  end else begin
    ButtonFrame(h=250,v+=40,150,3,"مالیات بر ارزش افزوده");
  end;
  RadioButton(h,v,0,0,"منحصر به فرد",InclVAT);
  if (IsEnterprise) then begin
    RadioButton(h,v+=16,1,0,"فراگیر، شامل داخلی. مالیات",InclVAT);
  end;
  RadioButton(h,v+=16,2,0,"فراگیر",InclVAT);
  EndFrame;
  if (HasAdvancedPricing) then begin
    ButtonFrame(h=360,v+=40,150,3,"نوع ");
    RadioButton(h,v,0,0,"تخفیف",DepPrice);
    RadioButton(h,v+=16,1,0,"ارزش تعداد بخش",DepPrice);
    if (IsEnterprise) then begin
      RadioButton(h,v+=16,2,0,"فروش بازگشت",DepPrice);
    end;
    EndFrame;
  end;
  EndWindow;
end;

window PLDefLClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("لیست قیمت",PLDefLClass,CGmlist,PLDefView);
  SpawnClass(PLDefDClass);
  SetWRect(64,80,509,298);
  Sizeable(-1,-1,0,0);
  UseView(PLDefVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"کد",Code,false,Code);
  RlCol(75,75,"توصیف",Comment,false);
  SearchField("جستجو ");
  EndWindow;
end;

window PLDefSClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("چسباندن لیست قیمت",PLDefSClass,CGslist,PLDefView);
  SetWRect(240,80,470,298);
  Sizeable(-1,-1,0,0);
  UseView(PLDefVc);
  SpawnClass(PLDefDClass);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"کد",Code,false,Code);
  RlCol(75,75, "توصیف",Comment,false);
  SearchField("جستجو ");
  EndWindow;
end;

window LoyaltyCardDClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,h3,v,vm,vs;
  WindowBegin("کارت وفاداری ",LoyaltyCardDClass,CGview,-);
  SetWRect(64,80,640,230);
  UseView(LoyaltyCardVc);
  ActiveFieldOnNew("کد مشتری");
  v = 16; vs = 20; h = 120; h2 = 300; h3 = 440;
  EditField(h,vm=v, 80,"شماره",St_i,SerNr,false,0);
  EditField(h,v+=20,80, "مشتری",Normal,CustCode,false,CUSClass);
  EnterSkip(StartDate);
  EditField(h2,v,-40, "نام",Normal,CustName,false,0);
  EditField(h,v+=20,70,"تاریخ شروع ",Normal,StartDate,false,PasteCurDate);
  EditField(h2,v,70,"تاریخ انقضا ",Normal,ExpiryDate,false,PasteCurDate);
  EditField(h,v+=20,80,"سطح عضویت",Normal,LCMLevel,false,LCMemberLevelSClass);
  EditField(h2,v,70,"امتیاز کلی",ViewOnly,PointsBalance,true,0);
  EditField(h3,v,-40,"امتیاز به ",Normal,PointsTo,false,LoyaltyCardSClass);
  CheckBox(h,v+=20,0,"بسته",Closed);
  EndWindow;
end;

window LoyaltyCardLClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("کارت های وفاداری ",LoyaltyCardLClass,CGmlist,-);
  SetWRect(64,80,749,298);
  SpawnClass(LoyaltyCardDClass);
  Sizeable(-1,-1,0,0);
  UseView(LoyaltyCardVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"شماره",SerNr,false,SerNr);
  RlColKey(84,84,"مشتری",CustCode,false,CustCode);
  RlColKey(164,164,"نام",CustName,false,CustName);
  RlCol(-240,-240,"تاریخ شروع ",StartDate,true);
  RlCol(-160,-160,"تاریخ انقضا ",ExpiryDate,true);
  RlColKey(-80,-80,"امتیاز به ",PointsTo,true,PointsTo);
  SearchField("جستجو ");
  EndWindow;
end;

window LoyaltyCardRClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vm,vs;
  WindowBegin("بیانیه کارت صداقت مشخص ",LoyaltyCardRClass,CGRcW,RcType);
  SetWRect(20,80,400,250);
  v = 6; vs = 20; h = 130;
  PeriodField(h,v,"دوره ");
  EditFieldTL(h,v+=vs,100,"کارت وفاداری ",M4UStr,Normal,50,f1,false,LoyaltyCardSClass);
  EditFieldTL(h,v+=vs,100,"مشتری",M4UStr,Normal,50,f2,false,CUSClass);
  EditFieldTL(h,v+=vs,100,"طبقه بندی مشتری",M4UStr,Normal,11,f4,false,CCatSClass);
  EditFieldTL(h,v+=vs, 150,"طبقه بندی",   M4UStr,Normal,50,f3,false,CClassSClass);
  EditFieldTL(h,v+=vs,100,"موقعیت",M4UStr,Normal,10,LastAcc,false,LocationSClass);
  ButtonFrame(h,vm=(v+=41),150,2,"عملکرد");
  RadioButton(h,v,0,0,"مرور کلی ",ArtMode);
  RadioButton(h,v+=16,1,0,"جزییات",ArtMode);
  CheckBox(h,v+=30,0,"نمایش کارتهای دارای گردش",flags[1]);
  EndWindow;
end;

window PecuniaryRClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vm,vs;
WindowBegin("گزارش مواد",PecuniaryRClass,CGRcW,RcType);
  SetWRect(20,80,400,250);
  v = 6; vs = 20; h = 120;
  EditFieldTL(h,v,150,"تاریخ",M4Date,Normal,0,d1,false,PasteCurDate);
  EditFieldTL(h,v+=vs,150,"فروشگاه",M4Str,Normal,20,f2,false,LocationSClass);
  EditFieldTL(h,v+=vs,150,"ماشین محلی ",M4Str,Normal,20,f1,false,LocalMachineSClass);
  EndWindow;
End;  

window RebItemSalesRClass:1 //Edit ************************** Sasha2, Friday, 27 June 2013 {
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;
  WindowBegin("تعریف یک گزارش در مورد قاچاق محصولات تبلیغاتی",RebItemSalesRClass,CGRcW,RcType);
  SetWRect(20,80,410,340);
  vs = 20;
  h = 160;

  PeriodField(h,v=6,"دوره ");
  EditFieldTL(h,v+=vs, 150,"موجودی",   M4UStr,Normal,30,f1,false,LocationSClass);
	//EditFieldTL(h,v+=vs, 150,"تخفیف جدول (سهم)",   M4UStr,Normal,30,f2,false,RebSClass);
	
  EndWindow;
end;

window MiddleInvoiceRClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v;
  WindowBegin("گزارش متوسط چک ",MiddleInvoiceRClass,CGRcW,RcType);
  SetWRect(20,80,440,150);
  h=100;
  PeriodField(h=100,v=6,"دوره ");
  EditFieldTL(h,v+=20,150,"فروشگاه",M4UStr,Normal,41,f1,false,LocalMachineSClass);
  EditFieldTL(h,v+=20,150,"فروشنده ",M4UStr,Normal,41,f2,false,UserSClass);//carefull we run ARRn
  EndWindow;
end;

 
window LoyaltyCardSClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("حمل کارت وفاداری ",LoyaltyCardSClass,CGslist,-);
  SetWRect(64,80,749,298);
  SpawnClass(LoyaltyCardDClass);
  Sizeable(-1,-1,0,0);
  UseView(LoyaltyCardVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"شماره",SerNr,false,ActSerNr);
  RlColKey(84,84,"مشتری",CustCode,false,ActCustCode);
  RlColKey(164,164,"نام",CustName,false,ActCustName);
  RlCol(-240,-240,"تاریخ شروع ",StartDate,true);
  RlCol(-160,-160,"تاریخ انقضا ",ExpiryDate,true);
  RlColKey(-80,-80,"امتیاز به ",PointsTo,true,ActPointsTo);
  SearchField("جستجو ");
  EndWindow;
end;

window CPMDClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,l,v,vs;
  WindowBegin("دستور کالا ",CPMDClass,CGview,CPMView);
  SetWRect(64,80,509,380);
//  Sizeable(-1,-1,0,0);
  UseView(CPMVc);
  v = 6; vs = 20; h = 120;
  EditField(h,v, 70,"کد",Normal,Code,false,0);
  EditField(h,v+=vs ,200,"تفسیر",Normal,Comment,false,0);
//  StaticText(h=160,v+=37,"کالا ",false);//no support for items
  h = 120; v=v+20; l = 35;
  MatrixBegin(h,v+=20,h+300,-10,PLDefRowType,200);
  MatCol(1,h=34,"دسته کالا ",0,ItemGroups,false,ITSClass);
  MatCol(1,h+=100,"از",0,FromAmount,false,0);
  MatCol(1,h+=55,"به مکان",0,ToAmount,false,0);
  MatCol(1,h+=55,"%",0,Val,false,0);
  EndMatrix;
  EndWindow;
end;

window CPMLClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("مورد فرمولها",CPMLClass,CGmlist,CPMView);
  SpawnClass(CPMDClass);
  SetWRect(64,80,509,298);
  Sizeable(-1,-1,0,0);
  UseView(CPMVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"کد",Code,false,Code);
  RlCol(75,75, "تفسیر",Comment,false);
  SearchField("جستجو ");
  EndWindow;
end;

window CPMSClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("فرمول مورد چسباندن",CPMSClass,CGslist,CPMView);
  SetWRect(240,80,600,298);
  Sizeable(-1,-1,0,0);
  UseView(CPMVc);
  SpawnClass(CPMDClass);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"کد",Code,false,Code);
  RlCol(75,75, "تفسیر",Comment,false);
  SearchField("جستجو ");
  EndWindow;
end;

window MatReportRClass:1 
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;
  WindowBegin("گزارش یک ماده جدید(Pecuniary report)",MatReportRClass,CGRcW,RcType);
  SetWRect(20,80,410,340);
  vs = 20;
  h = 160;

		PeriodField(h,v+=6,"دوره ");
	  EditFieldTL(h,v+=vs, 150,"فروشگاه",M4UStr,Normal,30,f1,false,LocationSClass);
	  
  EndWindow;
end;

window PecuniaryRClass:1 
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;
WindowBegin("(Pecuniary report) گزارش مواد",PecuniaryRClass,CGRcW,RcType);
  SetWRect(20,80,400,250);
  v = 6; vs = 20; h = 120;
  EditFieldTL(h,v,150,"دوره",M4Date,Normal,0,d1,false,PasteCurDate);
  EditFieldTL(h,v+=vs,150,"فروشگاه",M4Str,Normal,20,f2,false,LocationSClass);
  EditFieldTL(h,v+=vs,150,"ماشین محلی ",M4Str,Normal,20,f1,false,LocalMachineSClass);
  EndWindow;
end;

window SumCostByPeriodRClass:1 
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;
WindowBegin("گزارش خلاصه برای دوره",SumCostByPeriodRClass,CGRcW,RcType);
  SetWRect(20,80,400,250);
  v = 6; vs = 20; h = 130;
  PeriodField(h,v,"دوره");
  EditFieldTL(h,v+=vs,150,"مخزن",M4Str,Normal,41,f1,false,LocationSClass);
  if(currentcompany!=1)then begin
    EditField(h,v+=vs,150,"در ارز در حال حاضر نرخ ارز",Normal,f2,false,CurncyCodeSClass);
  end;
  EndWindow;
end;

window SalesWithImagesRClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;
  WindowBegin("گزارش فروش با تصاویر",SalesWithImagesRClass,CGEcW,RcType);
  SetWRect(20,80,440,150);
  vs = 20;
  h=100;
  v = 6; vs = 20; h = 120;
  PeriodField(h,v,"دوره");
  EditFieldTL(h,v+=vs,150,"انبار (فروشگاه)",M4Str,Normal,41,f1,false,LocationSClass);
  EditFieldTL(h,v+=vs,150,"طبقه بندی",M4Str,Normal,200,f2,false,DISClass);
  EditFieldTL(h,v+=vs,150,"نام تجاری",M4UStr,Normal,41,f4,false,DI2SClass);//carefull we run ARRn
  //EditFieldTL(h,v+=vs,150,"نوع",M4UStr,Normal,41,f5,false,DI3SClass);//carefull we run ARRn
  EndWindow;
end;