external function Integer OpenMasterWClass();

SetLangMode(LangRussian,"RUS",0); 

function boolean CustCodeEditAfter(Integer wn,string fieldname,Integer fn, Integer rownr,Integer changed)
begin
record MarketingVc Marketingr;
record CUVc CUr;
string 200 adr;
  
  
  if(changed==1)then begin
    getwindowrecord(wn,Marketingr);
    CUr.Code = Marketingr.CustCode;
    if(Readfirstmain(CUr,1,true))then begin
		Marketingr.Name = CUr.Name;
		adr = CUr.InvAddr0 & " " & CUr.InvAddr1 & " " & CUr.InvAddr2;
		Marketingr.Phone1 = CUr.Phone;
		Marketingr.Phone2 = CUr.Mobile;
		Marketingr.eMail = CUr.eMail;	
	end;
	
	Marketingr.Address = adr;
	
	putwindowrecord(wn,Marketingr);   
  end;
  
CustCodeEditAfter = true;
return;
end;

function boolean NationalityTxtEditAfter(Integer wn,string fieldname,Integer fn, Integer rownr,Integer changed)
begin
record MarketingVc Marketingr;
string 200 adr;
  
  if(changed>0)then begin
    getwindowrecord(wn,Marketingr);
	
	Marketingr.NationalityRbtn = 2;
		
	putwindowrecord(wn,Marketingr);   
  end;
  
NationalityTxtEditAfter = true;
return;
end;

function boolean ReferenceTxtEditAfter(Integer wn,string fieldname,Integer fn, Integer rownr,Integer changed)
begin
record MarketingVc Marketingr;
string 200 adr;
  
  if(changed>0)then begin
    getwindowrecord(wn,Marketingr);
	
	Marketingr.ReferenceRbtn = 5;
		
	putwindowrecord(wn,Marketingr);   
  end;
  
ReferenceTxtEditAfter = true;
return;
end;

function boolean CityTxtEditAfter(Integer wn,string fieldname,Integer fn, Integer rownr,Integer changed)
begin
record MarketingVc Marketingr;
string 200 adr;
  
  if(changed>0)then begin
    getwindowrecord(wn,Marketingr);
	
	Marketingr.CityRbtn = 0;
		
	putwindowrecord(wn,Marketingr);   
  end;
  
CityTxtEditAfter = true;
return;
end;

function boolean InvNrEditAfter(Integer wn,string fieldname,Integer fn, Integer rownr,Integer changed)
begin
record MarketingVc Marketingr;
string 200 adr;
  
  getwindowrecord(wn,Marketingr);
  if((changed>0) or nonblank(Marketingr.InvNr))then begin
  	
	Marketingr.ResultRbtn = 2;
		
	putwindowrecord(wn,Marketingr);   
  end;
  
InvNrEditAfter = true;
return;
end;

function boolean ResultTxtEditAfter(Integer wn,string fieldname,Integer fn, Integer rownr,Integer changed)
begin
record MarketingVc Marketingr;
string 200 adr;
  
  getwindowrecord(wn,Marketingr);
  if((changed>0) or nonblank(Marketingr.ResultTxt))then begin
  	
	Marketingr.ResultRbtn = 1;
		
	putwindowrecord(wn,Marketingr);   
  end;
  
ResultTxtEditAfter = true;
return;
end;

global
function Boolean MarketingDClassAfterEditField(Integer wn,string fieldname,Integer fn, Integer rownr,Integer changed)
BEGIN
  Boolean res;
  
  res = inner.MarketingDClassAfterEditField(wn,fieldname,fn,rownr,changed);
  
  switch (fieldname) begin
    case "CustCode": res = CustCodeEditAfter(wn,fieldname,fn,rownr,changed);
    case "NationalityTxt": res = NationalityTxtEditAfter(wn,fieldname,fn,rownr,changed);
    case "ReferenceTxt": res = ReferenceTxtEditAfter(wn,fieldname,fn,rownr,changed);
    case "CityTxt": res = CityTxtEditAfter(wn,fieldname,fn,rownr,changed);
    case "InvNr": res = InvNrEditAfter(wn,fieldname,fn,rownr,changed);
    case "ResultTxt": res = ResultTxtEditAfter(wn,fieldname,fn,rownr,changed);
        
  end;
  MarketingDClassAfterEditField = res;
  RETURN;
END;

global updating
function Boolean MarketingDClassOnClose(Integer wn,Integer wn2)
begin
  Integer nwn;
  record MarketingVc Mrkr;
  boolean res;
  
  res = !WindowDoOk(wn,0);

  MarketingDClassOnClose = res;
  return;
end;

global
procedure MarketingDClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
    duplOK = false;
    restOK = false;
  return;
end;

global
procedure MarketingLClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  return;
end;