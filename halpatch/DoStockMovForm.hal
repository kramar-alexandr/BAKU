external function string 255 SAFTHashControl(string);
external procedure GetFieldArgument(record DocVc,Integer,var string);
external procedure PrintNote(record NotepadVc);
external function Boolean ReadFirstItem(string,var record INVc,Boolean,Boolean);
external procedure GetMonthText(string,Date,var string);
external procedure GetCurUser(var record UserVc);
external procedure ValToText(val,Integer,string,string,var string);
external function Boolean FindFormcode(Integer,Integer);
external procedure SetConversionFields(record INVc,val,var val,var val,var val);
external procedure PrintValue(string,val,Integer,record LangNrVc,record SysFormatBlock,Boolean);
external procedure BC39(string,var string);
external procedure ItemBC39(string,var string);
external procedure ItemBCEAN(string,var string);
external procedure ItemBCEAN13(string,var string);
external procedure RussianPaymentNr(LongInt,var string);
external procedure CommonDocumentFields(record RcVc);
external function Boolean Getformcode(Integer,Integer,string,string,string,LongInt,LongInt,string,string,Integer,string,var string);
external function Integer NumberofDocumentPages(string,Integer);
external procedure GetLangNr(string,var record LangNrVc);
external procedure ExtractObj(string,var Integer,var string);// Edit ************************** Monday, 21 October 2013 11:50:21
external procedure GetLocationName(string,var string);// Edit ************************** Monday, 21 October 2013 13:21:43

procedure StockMovPrintNote(record StockMovVc StockMovr,string argumentstr)
begin
  record NotepadVc Noter;
  record RLinkVc RLr;
  Integer notenr;

  notenr = 1;
  while (ReadRecordLink(StockMovr,notenr,Noter,RLr)) begin
    if ((argumentstr==RLr.Comment) or (blank(argumentstr))) then begin
      PrintNote(Noter);
      goto LStockMovPrintNote;
    end;
    notenr = notenr + 1;
  end;
LStockMovPrintNote:;  
  return;
end;

procedure PrintStockMovRows(record RcVc RepSpec,record StockMovVc StockMovr,record LangNrVc LangNrr,record SysFormatBlock SysFormatRec,
                            record MainStockBlock MSb,
                            var val totbasprice,var val totinprice,var val totprice,var val totqty,var val totweight,var val totvolume)
BEGIN
  record INVc INr;
  row StockMovVc StockMovrw;
  Integer i,rwcnt,rownr;
  val qtyconv1,qtyconv2,qtyconv3;
  string 255 tstr;
  string 255 myname;// Edit ************************** Monday, 21 October 2013 13:08:45
  integer pos;// Edit ************************** Monday, 21 October 2013 13:08:43
  record DIVc DIr;
  
  totbasprice = blankval;
  totinprice = blankval;
  totprice = blankval;
  totqty = blankval;
  totweight = blankval;
  totvolume = blankval;
  rwcnt = MatRowCnt(StockMovr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(StockMovr,i,StockMovrw);
    if (ReadFirstItem(StockMovrw.ArtCode,INr,true,true)) then begin end;
    
    OUTFORMFIELD("F_MYPPNUM",i+1);// Edit ************************** Monday, 21 October 2013 09:59:37
		
		  // Edit Start ---------------------------------------------- Edit Start
	//Monday, 21 October 2013 13:07:48
	
      if(FIELDINFORM("F_MYNAME"))then begin
				myname = "";
      	pos = 0;
      	ExtractObj(INr.DispGroups,pos,tstr);
				while (nonblank(tstr)) begin
					if(nonblank(tstr))then begin
						DIr.Code = tstr;
						if(readfirstmain(DIr,1,true))then begin
							if(DIr.CType=="BRAND")then begin
								myname = DIr.Name;
							end;
							if(DIr.CType=="MODEL")then begin
								myname = myname & ";" & DIr.Name;
							end;
						end;
					end;
					ExtractObj(INr.DispGroups,pos,tstr);
				end;
      	
      	myname = myname & ";" & INr.AlternativeCode & ";" & INr.Name & ";" & INr.Colour & ";" & INr.Size;
      	OUTFORMFIELD("F_MYNAME",myname);
      end;
      
	// Edit End ---------------------------------------------- Edit End
    
    SetConversionFields(INr,StockMovrw.Quant,qtyconv1,qtyconv2,qtyconv3);      
    OUTFORMFIELD("F_CONVERSION1",qtyconv1);
    OUTFORMFIELD("F_CONVERSION2",qtyconv2);
    OUTFORMFIELD("F_CONVERSION3",qtyconv3);
    PrintValue("F_CONVERSIONVAL1",INr.Conversion1,M4UVal,LangNrr,SysFormatRec,false);
    PrintValue("F_CONVERSIONVAL2",INr.Conversion2,M4UVal,LangNrr,SysFormatRec,false);
    OUTFORMFIELD("F_COMMODITYCODE",INr.EUCodex);
    OUTFORMFIELD("F_ALTERNATIVECODE",INr.AlternativeCode);
    OUTFORMFIELD("F_ENHET",INr.Unittext);
    OUTFORMFIELD("F_SHELFCODE",INr.InvCode);
    PrintValue("F_BASPRIS",INr.UPrice1,M423Val,LangNrr,SysFormatRec,false);
    PrintValue("F_WIDTH",INr.Width,M4Qty,LangNrr,SysFormatRec,false);
    PrintValue("F_HEIGHT",INr.Height,M4Qty,LangNrr,SysFormatRec,false);
    PrintValue("F_DEPTH",INr.Depth,M4Qty,LangNrr,SysFormatRec,false);
    PrintValue("F_WEIGHT",INr.Weight,M4Qty,LangNrr,SysFormatRec,false);
    PrintValue("F_VOLUME",INr.Volume,M4Qty,LangNrr,SysFormatRec,false);
    PrintValue("F_ROWWEIGHT",StockMovrw.Quant*INr.Weight,M4Qty,LangNrr,SysFormatRec,false);
    totweight = totweight + StockMovrw.Quant*INr.Weight;
    PrintValue("F_ROWVOLUME",StockMovrw.Quant*INr.Volume,M4Qty,LangNrr,SysFormatRec,false);
    totvolume = totvolume + StockMovrw.Quant*INr.Volume;
    PrintValue("F_SUMBASPRIS",StockMovrw.Quant*INr.UPrice1,M4Val,LangNrr,SysFormatRec,false);
    PrintValue("F_SUMFIFO",StockMovrw.FIFORowVal,M45Val,LangNrr,SysFormatRec,false);
    totbasprice = totbasprice + StockMovrw.Quant*INr.UPrice1;
    
    if (FIELDINFORM("F_ARTNRBC39")) then begin
      ItemBC39(StockMovrw.ArtCode,tstr);
      OUTFORMFIELD("F_ARTNRBC39",tstr);
    end;  
    if (FIELDINFORM("F_ARTNRBCEAN")) then begin
      ItemBCEAN(StockMovrw.ArtCode,tstr);
      OUTFORMFIELD("F_ARTNRBCEAN",tstr);
    end;  
    if (FIELDINFORM("F_ARTNRBCEAN13")) then begin
      ItemBCEAN13(StockMovrw.ArtCode,tstr);    
      OUTFORMFIELD("F_ARTNRBCEAN13",tstr);
    end;  
    if (FIELDINFORM("F_SERIENRBC39")) then begin
      BC39(StockMovrw.SerialNr,tstr);    
      OUTFORMFIELD("F_SERIENRBC39",tstr);
    end;  
    OUTFORMFIELD("F_ARTNR",StockMovrw.ArtCode);
    OUTFORMFIELD("F_ARTNR2",StockMovrw.ArtCode);
    OUTFORMFIELD("F_SERIENR",StockMovrw.SerialNr);
    OUTFORMFIELD("F_SPECIFIKATION",StockMovrw.Spec);
    PrintValue("F_ANTAL",StockMovrw.Quant,M4UVal,LangNrr,SysFormatRec,false);

    if (MSb.UnitConvCalc==0) then begin
      PrintValue("F_ANTAL2",StockMovrw.Quant*StockMovrw.Coefficient,M4UVal,LangNrr,SysFormatRec,false);
		end else begin
      PrintValue("F_ANTAL2",StockMovrw.Quant/StockMovrw.Coefficient,M4UVal,LangNrr,SysFormatRec,false);
    end;

    totqty = totqty + StockMovrw.Quant;
    PrintValue("F_PRIS",StockMovrw.NewPrice,M45Val,LangNrr,SysFormatRec,false);
    totprice = totprice + StockMovrw.Quant*StockMovrw.NewPrice;
    PrintValue("F_ROWPRICE",StockMovrw.BasePrice,M45Val,LangNrr,SysFormatRec,false);
    PrintValue("F_BELOPP",StockMovrw.Quant*StockMovrw.BasePrice,M45Val,LangNrr,SysFormatRec,false);
    totinprice = totinprice + StockMovrw.Quant*StockMovrw.BasePrice;
    PrintValue("F_SUMPRIS",StockMovrw.Quant*StockMovrw.NewPrice,M45Val,LangNrr,SysFormatRec,false);
    PrintValue("F_ORDQTY",StockMovrw.OrdQuant,M4UVal,LangNrr,SysFormatRec,false);
    PrintValue("F_SENTQTY",StockMovrw.SentQuant,M4UVal,LangNrr,SysFormatRec,false);
    PrintValue("F_SENTPRICE",StockMovrw.SentNewPrice,M45Val,LangNrr,SysFormatRec,false);
    PrintValue("F_SENTSUM",StockMovrw.SentQuant*StockMovrw.SentNewPrice,M4Val,LangNrr,SysFormatRec,false);
    PrintValue("F_SENTOLDPRICE",StockMovrw.SentOldPrice,M4Val,LangNrr,SysFormatRec,false);
    OUTFORMFIELD("F_FROMPOSITIONROW",StockMovrw.FrPosCode);
    OUTFORMFIELD("F_TOPOSITIONROW",StockMovrw.ToPosCode);
    OUTFORMFIELD("F_SENTEXTRACOST",StockMovrw.SentExtraSCost);
    if (nonblank(StockMovrw.ArtCode)) then begin
      rownr = rownr + 1;
      OUTFORMFIELD("F_ROWNR",rownr);      
    end;
    EndFormRow;
  end;
  RETURN;
END;

global
procedure DoStockMovForm(record RcVc RepSpec,record StockMovVc StockMovr)
BEGIN
  record UserVc Userr;
  record FormDefVc FDr;
  row FormDefVc FDrw;
  record SysFormatBlock SysFormatRec;
  record LangNrVc LangNrr;
  Integer i,rwcnt;
  record LocationVc FromLocr;
  record LocationVc ToLocr;
  record LocationVc ViaLocr;
  record MainStockBlock MainStockRec;
  val totbasprice,totinprice,totprice,totqty,totweight,totvolume;
  string 255 tstr;
  Integer OKFlag;
  record StockMovVc realStockMovr;
  record DocVc Docr;
  Boolean printf;
  Integer intdocnr;
  string 30 formcode;
  record StandProblemVc SPr;
    
  realStockMovr.SerNr = StockMovr.SerNr;
  if (ReadFirstMain(realStockMovr,1,true)) then begin end;//for some reason we change OKFlag status in ivdclassprint
  BlockLoad(MainStockRec);
  BlockLoad(SysFormatRec);  
  FDr.repname = RepSpec.repname;
  FDr.shortname = RepSpec.shortname;
  if (ReadFirstMain(FDr,1,true)==false) then begin
    MessageBox(1624, " " & USetStr(1623));
    goto L99;
  end;
  rwcnt = MatRowCnt(FDr);
  GetLangNr("",LangNrr);
  OKFlag = realStockMovr.OKFlag;
  if (OKFlag==0) then begin
//    OKFlag = realStockMovr.OrdFlag;
  end;
  if (OKFlag==0) then begin
    OKFlag = realStockMovr.SentOKFlag;
  end;
  intdocnr = 1;
  printf = true;
  while (printf) begin  
    formcode = "";
    for (i=rwcnt-1;i>=0;i=i-1) begin
      MatRowGet(FDr,i,FDrw);
      if (FindFormcode(OKFlag,FDrw.Typ)) then begin 
        if (Getformcode(i,FDrw.intdocnr,FDrw.FPCode,FDrw.UserGroup,FDrw.LangCode,FDrw.SerNr,StockMovr.SerNr,FDrw.PrintGroupCode,
                        "",intdocnr,"StockMovVc",formcode)) then
        begin
          goto LBREAKStockMov;
        end;
      end;
    end;
LBREAKStockMov:;
    if (nonblank(formcode)) then begin
      if (OpenForm(formcode)) then begin
        CommonDocumentFields(RepSpec);
        NumberofDocumentPages(FDrw.FPCode,MatRowCnt(StockMovr));
        OUTFORMFIELD("F_DOCTYPE",USetStr(23459));        
        Docr.Code = formcode;
        if (ReadFirstMain(Docr,1,true)) then begin
        end;
        if (FIELDINFORM("F_RUSPAYNR")) then begin
          RussianPaymentNr(StockMovr.SerNr,tstr);
          OUTFORMFIELD("F_RUSPAYNR",tstr);
        end;  
        if (blank(StockMovr.FrLocation)) then begin
          FromLocr.Code = MainStockRec.MainStock;
        end else begin
          FromLocr.Code = StockMovr.FrLocation;
        end;
        if (blank(StockMovr.ToLocation)) then begin
          ToLocr.Code = MainStockRec.MainStock;
        end else begin
          ToLocr.Code = StockMovr.ToLocation;
        end;
        if (ReadFirstMain(FromLocr,1,true)) then begin end;
        if (ReadFirstMain(ToLocr,1,true)) then begin end;
        if nonblank(StockMovr.ThrouLocation) then begin
          ViaLocr.Code = StockMovr.ThrouLocation;
          if (ReadFirstMain(ViaLocr,1,true)) then begin end;
          OUTFORMFIELD("F_VIALOCATION",StockMovr.ThrouLocation);
          OUTFORMFIELD("F_VIANAME",ViaLocr.Name);
          OUTFORMFIELD("F_VIAPHONE",ViaLocr.Phone);
          OUTFORMFIELD("F_VIAFAX",ViaLocr.Fax);
          OUTFORMFIELD("F_VIACONTACT",ViaLocr.Contact);
          OUTFORMFIELD("F_VIAADRESS",ViaLocr.Addr0);
          OUTFORMFIELD("F_VIAADRESS",ViaLocr.Addr1);
          OUTFORMFIELD("F_VIAADRESS",ViaLocr.Addr2);
          OUTFORMFIELD("F_VIAADRESS",ViaLocr.Addr3);
          OUTFORMFIELD("F_VIAADRESS",ViaLocr.Addr4);  
          OUTFORMFIELD("F_VIAEMAIL",ViaLocr.Email);  
        end;  
        OUTFORMFIELD("F_LEVDATUM",StockMovr.TransDate);
        OUTFORMFIELD("F_LEVNUMMER",StockMovr.SerNr);
        OUTFORMFIELD("F_COMMENT",StockMovr.Comment);
        OUTFORMFIELD("F_FROMLOCATION",StockMovr.FrLocation);
        OUTFORMFIELD("F_TOLOCATION",StockMovr.ToLocation);
        
        
        
        OUTFORMFIELD("F_FROMNAME",FromLocr.Name);
        OUTFORMFIELD("F_FROMPHONE",FromLocr.Phone);
        OUTFORMFIELD("F_FROMFAX",FromLocr.Fax);
        OUTFORMFIELD("F_FROMCONTACT",FromLocr.Contact);
        OUTFORMFIELD("F_FROMADRESS",FromLocr.Addr0);
        OUTFORMFIELD("F_FROMADRESS",FromLocr.Addr1);
        OUTFORMFIELD("F_FROMADRESS",FromLocr.Addr2);
        OUTFORMFIELD("F_FROMADRESS",FromLocr.Addr3);
        OUTFORMFIELD("F_FROMADRESS",FromLocr.Addr4);
        OUTFORMFIELD("F_TONAME",ToLocr.Name);
        OUTFORMFIELD("F_TOPHONE",ToLocr.Phone);
        OUTFORMFIELD("F_TOFAX",ToLocr.Fax);
        OUTFORMFIELD("F_TOCONTACT",ToLocr.Contact);
        OUTFORMFIELD("F_TOADRESS",ToLocr.Addr0);
        OUTFORMFIELD("F_TOADRESS",ToLocr.Addr1);
        OUTFORMFIELD("F_TOADRESS",ToLocr.Addr2);
        OUTFORMFIELD("F_TOADRESS",ToLocr.Addr3);
        OUTFORMFIELD("F_TOADRESS",ToLocr.Addr4);        
        OUTFORMFIELD("F_FREIGHTCOMPCODE",StockMovr.FreightCode);
        OUTFORMFIELD("F_FREIGHTCOMP",StockMovr.FreightCompany); 
        OUTFORMFIELD("F_FREIGHTCOMPREGNO",StockMovr.FreightCompanyRegNr);
        OUTFORMFIELD("F_TRUCKINFO",StockMovr.TruckInfo); 
        OUTFORMFIELD("F_DRIVER",StockMovr.Driver); 
        OUTFORMFIELD("F_CMRTEXT",StockMovr.CMRText);
        OUTFORMFIELD("F_REASON",StockMovr.Reason);
        if (FIELDINFORM("F_REASONTEXT")) then begin
          SPr.Code = StockMovr.Reason;
          if (ReadFirstMain(SPr,1,true)) then begin end;
          OUTFORMFIELD("F_REASONTEXT",SPr.Comment1);
          OUTFORMFIELD("F_REASONTEXT",SPr.Comment2);
          OUTFORMFIELD("F_REASONTEXT",SPr.Comment3);
        end;  
        if (FIELDINFORM("F_NOTE")) then begin
          GetFieldArgument(Docr,F_NOTE,tstr);
          StockMovPrintNote(StockMovr,tstr);
        end;
        PrintStockMovRows(RepSpec,StockMovr,LangNrr,SysFormatRec,MainStockRec,totbasprice,totinprice,totprice,totqty,totweight,totvolume);
        PrintValue("F_TOTALINPRICE",totinprice,M45Val,LangNrr,SysFormatRec,false);
        PrintValue("F_TOTBASPRIS",totbasprice,M45Val,LangNrr,SysFormatRec,false);
        PrintValue("F_TOTPRIS",totprice,M45Val,LangNrr,SysFormatRec,false);
        PrintValue("F_TOTQTY",totqty,M45Val,LangNrr,SysFormatRec,false);
        PrintValue("F_TOTVOLUME",totvolume,M4Qty,LangNrr,SysFormatRec,false);
        PrintValue("F_TOTWEIGHT",totweight,M4Qty,LangNrr,SysFormatRec,false);
        OUTFORMFIELD("F_FROMPOSITION",StockMovr.FrPos);
        OUTFORMFIELD("F_TOPOSITION",StockMovr.ToPos);
        OUTFORMFIELD("F_SENTTRANSDATE",StockMovr.SentTransDate);
        OUTFORMFIELD("F_DATEDAY",GetDay(StockMovr.TransDate));  
        OUTFORMFIELD("F_DATEMONTH",GetMonth(StockMovr.TransDate));  
        GetMonthText("",StockMovr.TransDate,tstr);
        OUTFORMFIELD("F_DATEMONTHTEXT",tstr);  
        OUTFORMFIELD("F_DATEYEAR",GetYear(StockMovr.TransDate));  
        GetCurUser(Userr);
        OUTFORMFIELD("F_PERSON",Userr.Name);
        if (FIELDINFORM("F_ATTBETALATEXT")) then begin//jzs
          ValToText(totprice,M4Val,StockMovr.CurncyCode,"",tstr);
          OUTFORMFIELD("F_ATTBETALATEXT",tstr);        
        end;            
        OUTFORMFIELD("F_SAFTHASHCONTROL",SAFTHashControl(StockMovr.Hash));
        OUTFORMFIELD("F_OFFICIALSERNO",StockMovr.OfficialSerNr);
        if (StockMovr.Prntdf==0) then begin
          OUTFORMFIELD("F_COPYTYPE",USetStr(18630));
        end else begin
          OUTFORMFIELD("F_COPYTYPE",USetStr(18631));
        end;
        if ((StockMovr.OKFlag!=0) or (StockMovr.SentOKFlag!=0)) then begin
          if (StockMovr.Prntdf!=0) then begin
            FormWaterMark(1118,-1);
          end;
        end;
        CloseForm;
      end else begin
        printf = false;
        MessageBox(1546,formcode);
      end;
    end else begin
      printf = false;
      if (intdocnr==1) then begin
        MessageBox(1624, " " & USetStr(1623));
      end;
    end;
    intdocnr = intdocnr + 1;
  end;
L99:;
  RETURN;
END;
