external procedure GetFullCurncyRate (var string,Date,var val,var val,var val,var val,var val);
external procedure B1ToB2Val(val,val,val,var val);
external function Boolean ReadFirstItem(string,var record INVc,Boolean,Boolean);
external function Boolean GetAccName(string,var string,Integer);
external function Boolean IsVATCodeDefined(string);
external procedure ExtractObj(string,var Integer,var string);

SetLangMode(LangRussian,"RUS",0); 

global updating procedure AddPLHist(record PLVc PLr,record PLVc PL2r)
begin
	record PLHistVc PLHr;
	record PLHistSetBlock PLHSb;
	
	blockload(PLHSb);
	if(PLHSb.DoHist>0)then begin
		PLHr.ArtCode = PLr.ArtCode;
		PLHr.PLCode = PLr.PLCode;
		PLHr.CustCode = PLr.CustCode;
		PLHr.SerialNr = PLr.SerialNr;
		if(readfirstmain(PLHr,4,true))then begin
			if(PLr.ExVatPrice!=PL2r.ExVatPrice or PLr.CurncyCode!=PL2r.CurncyCode)then begin
				PLHr.TransDate = currentdate;
				PLHr.TransTime = currenttime;
				recordstore(PLHr,true);
			end;
		end else begin
			recordnew(PLHr);
			PLHr.ArtCode = PLr.ArtCode;
			PLHr.PLCode = PLr.PLCode;
			PLHr.CustCode = PLr.CustCode;
			PLHr.SerialNr = PLr.SerialNr;
			PLHr.TransDate = currentdate;
			PLHr.TransTime = currenttime;
			recordstore(PLHr,true);
		end;
		
	end;
	
return;
end;




global
updating function LongInt PLVcRecordCheck(var record PLVc PLr,record PLVc PL2r,LongInt stat,LongInt long4)
begin
  record INVc INr;
  record CUVc CUr;
  record PLDefVc PLDefr;
  LongInt res;
  string 255 tstr;
  
  res = 0;
  if blank(PLr.ArtCode) then begin
    RecordCheckError(1058,"",-1,"ArtCode");      
    res = -1; 
    goto LPLVcRecordCheck;
  end else begin
    if (ReadFirstItem(PLr.ArtCode,INr,true,false)==false) then begin
      RecordCheckError(1120,PLr.ArtCode,-1,"ArtCode");      
      res = -1; 
      goto LPLVcRecordCheck;
    end;
  end;
  if (blank(PLr.PLCode)) and (blank(PLr.CustCode)) then begin
    RecordCheckError(1058,"",-1,"PLCode");      
    res = -1; 
    goto LPLVcRecordCheck;
  end else begin
    if nonblank(PLr.PLCode) then begin
      PLDefr.Code = PLr.PLCode;
      if (ReadFirstMain(PLDefr,1,true)==false) then begin
        RecordCheckError(1120,PLr.PLCode,-1,"PLCode");      
        res = -1; 
        goto LPLVcRecordCheck;
      end;
    end;
    if nonblank(PLr.CustCode) then begin
      CUr.Code = PLr.CustCode;
      if (ReadFirstMain(CUr,1,true)==false) then begin
        RecordCheckError(25601,PLr.CustCode,-1,"CustCode");
        res = -1; 
        goto LPLVcRecordCheck;
      end;
    end;
  end;
  if nonblank(PLr.SalesAcc) then begin
    if (GetAccName(PLr.SalesAcc,tstr,60)==false) then begin
      RecordCheckError(1931,PLr.SalesAcc,-1,"SalesAcc");      
      res = -1; 
      goto LPLVcRecordCheck;
    end;
  end;
  if nonblank(PLr.VATCode) then begin
    if (IsVATCodeDefined(PLr.VATCode)==false) then begin
      RecordCheckError(1120,PLr.VATCode,-1,"VATCode");      
      res = -1; 
      goto LPLVcRecordCheck;
    end;
  end;
  if nonblank(PLr.BBVarAcc) then begin
    if (GetAccName(PLr.BBVarAcc,tstr,60)==false) then begin
      RecordCheckError(1007,PLr.BBVarAcc,-1,"BBVarAcc");      
      res = -1; 
      goto LPLVcRecordCheck;
    end;
  end;
  AddPLHist(PLr,PL2r);// Edit ************************** Thursday, 23 May 2013 17:19:49
LPLVcRecordCheck:;
  PLVcRecordCheck = res;
  return;
end;

global
updating function LongInt PLVcRecordImport(var record PLVc PLr,record PLVc PL2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  val t,fr,to1,to2,br1,br2;
  string 5 curncy;
  Boolean gBase1ToBase2,testf;
  record ConvMasterBlock cvm;
  record PLDefVc PLDefr;
  record BaseCurBlock bcur;
	record PLVc PL3r; 
	 
  BlockLoad(cvm);
  if (cvm.Base1ToBase2Flag!=0) then begin gBase1ToBase2 = true; end;
  if (gBase1ToBase2) then begin
    testf = true;
    BlockLoad(bcur);
    PLDefr.Code = PLr.PLCode;
    if (ReadFirstMain(PLDefr,1,true)) then begin
      if ((nonblank(PLDefr.CurncyCode))) then begin//and (PLDefr.CurncyCode!=bcur.BaseCur2), if it is in curenncy we should recalc
        testf = false;
      end;
    end;
    if (testf) then begin
      GetFullCurncyRate(curncy,CurrentDate,fr,to1,to2,br1,br2);
      B1ToB2Val(PLr.ExVatPrice,br1,br2,t);
      PLr.ExVatPrice = t;
    end;
  end;
  
  PL3r.ArtCode = PLr.ArtCode;
	PL3r.PLCode = PLr.PLCode;
	PL3r.CustCode = PLr.CustCode;
	PL3r.SerialNr = PLr.SerialNr;
	if(readfirstmain(PL3r,4,true))then begin
	
	end else begin
		recordnew(PL3r);
	end;
  AddPLHist(PLr,PL3r);// Edit ************************** Thursday, 23 May 2013 17:19:49
  
  PLVcRecordImport = res;
  RETURN;
END;

global updating procedure DelPLHistMn(record RcVc RepSpec)
begin
	record PLHistVc PLHr;
	
	while(loopmain(PLHr,1,true))begin
		recorddelete(PLHr);
		stepback(PLHr);
	end;
	
return;
end;

global updating procedure DelDIVcMn(record RcVc RepSpec)
begin
	record DIVc PLHr;
	
	while(loopmain(PLHr,1,true))begin
		recorddelete(PLHr);
		stepback(PLHr);
	end;
	
return;
end;

global updating procedure CreatePLActivityMn(record RcVc RepSpec)
begin
	record ActVc Actr;
	record UserVc User;
	boolean TrHs,testf,findlock;
	date lastactday;
	time lastacttime;
	record PLHistVc PLHr;
	string 255 fname,docname,location,chloc;
	record INVc INr;
	Record PLVc PLr;
	integer comp,count,pos;
	record ItemStatusVc ISr;
	record PLDefVc PLDefr;
	record BaseCurBlock BCb;
	string 5 curcode;
	string 100 brand,model;
	Record DIVc DIr;
	
	blockload(BCb);
	curcode = BCb.BaseCur1;
	
	comp = currentcompany;
	
	User.Code = "";
	while(loopmain(User,1,true))begin
		testf = true;
		count = 0;
		if(User.Closed>0)then begin testf = false; end;
		if(blank(User.UserLocations))then begin testf = false; end;
		
		if(testf)then begin
			count = 0;
			lastactday = stringtodate("1/1/2013");
			lastacttime = stringtotime("0:0");
			Actr.ActType = "CUSRE";
			Actr.StartTime = Currenttime;
			Actr.TransDate =	Currentdate;
			TrHs = true;
			while(loopbackkey("ActType",Actr,3,TrHs))begin
				testf = false;
				if(Actr.ActType!="CUSRE")then begin TrHs=false; end;
				if(TrHs and Actr.MainPersons==User.Code)then begin testf = true; end;
				
				if(testf)then begin
					TrHs = false;
					lastactday = Actr.TransDate;
					lastacttime = Actr.StartTime;
				end;
			end;
			resetloop(Actr);
			
			PLHr.TransDate = currentdate;
			PLHr.TransTime = currenttime;
			TrHs = true;
			
			createfile("Prices Update.xls");
			openexportfile("Prices Update.xls",false);
			setexportcodepage("CP1251");
			startformat(15);
				outstring(0,0,"Товар",false);
				outstring(0,0,"Название",false);
				outstring(0,0,"Модель",false);
				outstring(0,0,"Бренд",false);
				outstring(0,0,"Прайслист",false);
				outstring(0,0,"Серийный номер",false);
				outstring(0,0,"В наличии на складах",false);
				outstring(0,0,"Цена",false);
				outstring(0,0,"Валюта",false);
			endformat;
			While(loopbackkey("TransDate",PLHr,2,TrHs))begin
				testf = true;
				if(PLHr.TransDate<lastactday)then begin TrHs = false; testf = false; end;
				if(PLHr.TransDate==lastactday and PLHr.TransTime<lastacttime)then begin TrHs = false; testf = false;  end;
	  		if(PLHr.PLCode!="RRP")then begin testf = false; end;
	  		
	  		if(testf)then begin
	  			findlock = false;
	  			chloc = "";
	  			pos = 0;
					ExtractObj(User.UserLocations,pos,location);
					while(nonblank(location))begin
	  				ISr.Code = PLHr.ArtCode;
	  				ISr.Location = location;
	  				if(readfirstmain(ISr,2,true))then begin
	  					if(ISr.Instock>0)then begin
	  						findlock = true;
	  						chloc = chloc & ISr.Location & ",";
	  					end;
	  				end;
	  				ExtractObj(User.UserLocations,pos,location);
	  			end;
					if(findlock)then begin
						
						chloc = mid(chloc,0,len(chloc)-1);
						INr.Code = PLHr.ArtCode;
						readfirstmain(INr,1,true);
					
						PLr.PLCode = PLHr.PLCode;
						PLr.ArtCode = PLHr.ArtCode;
						PLr.CustCode = PLHr.CustCode;
						PLr.SerialNr = PLHr.SerialNr;
						readfirstmain(PLr,4,true);
						
						if(nonblank(PLr.CurncyCode))then begin
							curcode = PLr.CurncyCode;
						end else begin
							PLDefr.Code = PLr.PLCode;
							readfirstmain(PLDefr,1,true);
							if(nonblank(PLDefr.CurncyCode))then begin
								curcode = PLDefr.CurncyCode;
							end;
						end;
						startformat(15);
							outstring(0,0,"_" & PLHr.ArtCode,false);
							outstring(0,0,INr.Name,false);
							pos = 0;
							brand = "";
							model = "";
							ExtractObj(INr.DispGroups,pos,brand);
							if(nonblank(brand))then begin
								DIr.Code = brand;
								if(readfirstmain(DIr,1,true))then begin
									brand = DIr.Name;
								end;
							end;
							outstring(0,0,brand,false);
							ExtractObj(INr.DispGroups,pos,model);
							if(nonblank(model))then begin
								DIr.Code = model;
								if(readfirstmain(DIr,1,true))then begin
									model = DIr.Name;
								end;
							end;
							outstring(0,0,model,false);
							
							outstring(0,0,PLr.PLCode,false);
							outstring(0,0,PLr.SerialNr,false);
							outstring(0,0,chloc,false);
							outstring(0,0,PLr.ExVatPrice,false);
							outstring(0,0,curcode,false);
						endformat;
						count = count + 1;
					end;
	  		end;
			end; 
			closefile;
			resetloop(PLHr);
			
			if(count>0)then begin
				recordnew(Actr);
				Actr.MainPersons = User.Code;
				Actr.ActType = "CUSRE";
				Actr.StartTime = CurrentTime;
				Actr.TransDate = CurrentDate;
				Actr.TodoFlag = 1;
				Actr.CalTimeFlag = 1;
				Actr.SymbNr = 3;
				Actr.AlarmType = 1;
				Actr.Comment = "Обновились цены. Список изменений в прикрепленном файле";
				Actr.SerNr = NextSerNr("ActVc",Actr.TransDate,-1,false,"");
				recordinsert(Actr,true);
				if(FileExists("Prices Update.xls"))then begin
					RecordLinkFile("Prices Update.xls",0,Actr,comp);
				end;
			end;
		end;		
	end;

	
return;
end;

global //Edit***************************Sasha2,10:45 01.12.2014 {
updating function LongInt PLVcRecordSave(var record PLVc PLr,record PLVc PL2r,LongInt stat,LongInt long4)
begin
  LongInt res;
  record INVc INr;
  
  if (PLr.ExVatPrice<>0) then begin
  	INr.Code = PLr.ArtCode;
  	if (ReadFirstMain(INr,1,true)) then begin
  		INr.SyncFlag = 1;
  		RECORDSTORE(INr,true);
  	end;
  end;
 
  PLVcRecordSave = res; 
 return;
end; //Edit***************************Sasha2,10:45 01.12.2014 }

global //Edit***************************Sasha2,10:45 01.12.2014 {
updating function LongInt PLVcRecordUpdate(var record PLVc PLr,record PLVc PL2r,LongInt stat,LongInt long4)
begin
  LongInt res;
  record INVc INr;
  Boolean itemnotsavedf;

  itemnotsavedf = true;
  if (PL2r.ExVatPrice!=PLr.ExVatPrice) then begin
    INr.Code = PLr.ArtCode;
  	if (ReadFirstMain(INr,1,true)) then begin
  		INr.SyncFlag = 1;
  		RECORDSTORE(INr,true);
  		itemnotsavedf = false;
  	end;
  end;
  if (PL2r.ArtCode!=PLr.ArtCode) then begin
    INr.Code = PLr.ArtCode;
  	if (itemnotsavedf and ReadFirstMain(INr,1,true)) then begin
  		INr.SyncFlag = 1;
  		RECORDSTORE(INr,true);
  	end;
  	INr.Code = PL2r.ArtCode;
  	if (ReadFirstMain(INr,1,true)) then begin
  		INr.SyncFlag = 1;
  		RECORDSTORE(INr,true);
  	end;
  end;

  PLVcRecordUpdate = res; 
 return;
end; //Edit***************************Sasha2,10:45 01.12.2014 }