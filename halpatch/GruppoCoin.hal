external procedure ExtractObj(string,var Integer,var string);external function val AbsoluteVal(val);external function roundmode SetRoundModeD(Integer);globalfunction string 255 NewM4PadString(string instr,Integer padlen,string padchar,Boolean padleft)BEGIN  string 255 tstr,t2;  Integer i;  Integer toff;    toff = 0;  for (i = 1; i<=padlen ;i=i+1) begin tstr = tstr & padchar; end;  if (padleft) then begin    tstr = tstr & instr;    tstr = Right(tstr,(len(tstr)-len(instr)));      end else begin    t2 = tstr;    tstr = instr;    tstr = tstr & t2;    tstr = Left(tstr,padlen);  end;    NewM4PadString = tstr;  RETURN;END;globalprocedure StocKCountGC()begin  record CoinSettingsBlock CoinSb;  record ItemStatusVc ISr;  record LocationVc Locr;  record INVc INr;  record PLVc PLr;  record SysFormatBlock SysFormatRec;  string 255 filename;  area ames;  string 20 curloc,datestring,barcode,price,qty;  integer pos,storenumber; //storenumber!!!!!!!!!Необходимое для выгрузки значение Store-number. Предполагается,                           //что этот Store-number будет занесен в карточку склада.  boolean TrHs,testf,initfile;  LongInt reccnt;  string 5 nextline;        datestring = DateToString(CurrentDate,"YYYYMMDD");    filename = "PST" & CoinSb.ClientCode & "_" & datestring & ".TXT";  	CreateFile(filename);  	CloseFile;        BlockLoad(SysFormatRec);    BlockLoad(CoinSb);    nextline = chr(13) & chr(10);    reccnt = 0;    pos = 0;    ExtractObj(CoinSb.Locations,pos,curloc);    while (NonBlank(curloc)) begin      testf = false;      Locr.Code = curloc;      testf = ReadFirstMain(Locr,1,true);      if (testf) then begin        TrHs = true;        ISr.Location = Locr.Code;        //storenumber = Locr. Нужно обязательно указать Store-number        if (storenumber<=0) then begin          TrHs = false;        end;        while (LoopKey("Location",ISr,1,TrHs)) begin          if (ISr.Location!=Locr.Code) then begin TrHs=false; end;          if (TrHs) then begin            if (initfile==false) then begin              AddTextToArea("**INIT**STOCOUNT" & datestring & storenumber & nextline, ames);              initfile = true;            end;            INr.Code = ISr.Code;            ReadFirstMain(INr,1,true);            if (len(INr.BarCode)==13) then begin              barcode = INr.BarCode;            end else begin              barcode = NewM4PadString(ISr.Code,13,"0",false);            end;            qty = "+" & NewM4PadString(ValToString(ISr.Instock,M45Val,"",SysFormatRec.decimalPt,1),6,"0",true);            PLr.PLCode = "RRP";            PLr.ArtCode = ISr.Code;            ReadFirstMain(PLr,2,true);            price = ValToString(Round(PLr.ExVatPrice,SetRoundModeD(2)),M423Val,"","",0);            price = "+" & NewM4PadString(price,10,"0",true);            AddTextToArea("STOCOUNT" & storenumber & "I" & datestring & barcode & qty & price & nextline, ames);            reccnt = reccnt + 1;            end;        end;      end;      ExtractObj(CoinSb.Locations,pos,curloc);    end;  	   	if (initfile) then begin  	   AddTextToArea("**FINE**STOCOUNT" & datestring & storenumber & NewM4PadString(reccnt,7,"0",true), ames);  	   WriteAreaToFile(ames,filename,0);  	end;	   return;end;global procedure GruppoCoinSalesEn(record RcVc RepSpec)	//Edit----------------------Dima  21.03.2016begin  record IVVc IVr;  row IVVc IVrw;	string 20 storeID,vendtran,transdateStr,quant,pricevalue,discountCode,discountvalue;	string 10 operatorID,terminalID,transNr,countStr,typeOfRegistration;	string 255 rowdata;	date transdate;	boolean TrHs;	integer count,sign,i,qty;	longint price,discount;		transdate = RepSpec.d1;	if (BlankDate(transdate)) then begin		transdate = CurrentDate;	end;	transdateStr = 	DateToString(transdate,"YYYYMMDD");		vendtran = "VENDTRAN";	storeID = "0001";	operatorID = "0001"; //IVr.SalesMan field is longer then 4 chars. so we fill it with "0001" always.	terminalID = "01"; //POS-terminal number		typeOfRegistration = "LL"; //first char for ArtCode, second for price	//L means that value was looked up from the DB	//and D - that value was entered manually			//Header	OutString(0,0,"**INIT**" & vendtran & transdateStr & storeID,false);	EndFormat;		//Sales/returns transaction	TrHs = true;	IVr.TransDate = transdate;	While(LoopKey("TransDate",IVr,1,TrHs)) begin		sign = 1;		if (IVr.TransDate>transdate) then begin TrHs = false; end;		if (TrHs) then begin			if(IVr.InvType==kInvoiceTypeCredit)then begin sign=-1; end;			for(i=0;i<MatRowCnt(IVr);i=i+1) begin				MatRowGet(IVr,i,IVrw);				if (IVrw.stp==kInvoiceRowTypeNormal) then begin					rowdata = vendtran;					if (IVrw.Quant*sign>0) then begin						rowdata = rowdata & "7";  //sales					end else begin						rowdata = rowdata & "4";	//returns					end;					rowdata = rowdata & transdateStr & storeID & IVrw.ArtCode; //Artcode must be changed to EAN-number					qty = AbsoluteVal(IVrw.Quant); //cut decimals;					quant = "+" & Right("000000" & qty,6);						price = AbsoluteVal(IVrw.Price * IVrw.Quant * 100);					pricevalue = 	"+" & Right("0000000000" & price,10);					discount = price - AbsoluteVal(IVrw.Sum)*100;					discountvalue = "+" & Right("00000000" & discount,8);					discountCode = "  "; //two spaces					if (nonblank(IVrw.vRebate)) then begin discountCode = "93"; end;					transNr = IVr.SerNr;					rowdata = rowdata & quant & Left(IVr.CurncyCode,3) & pricevalue & discountCode & discountvalue;					rowdata = rowdata & operatorID & terminalID & Right(transNr,4) & typeOfRegistration;					OutString(0,0,rowdata,false);					EndFormat;					count = count + 1;				end;				end;  			end;	end;		//Trailer record	countStr = Right("0000000" & count,7);	OutString(0,0,"**FINE**" & vendtran & transdateStr & storeID & countStr,false);	EndFormat;			//createfile("sss.txt");	//openexportfile("sss.txt",false);		//startformat(15);	//	outstring(0,0,vendtran & transdateStr,false);	//EndFormat;	//CloseFile;  return;end;