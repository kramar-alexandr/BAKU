external function Boolean GetObjBal(string,string,var record ObjBalVc);
external procedure ExtractObj(string,var Integer,var string);
external procedure CurValToOtherCur(Date,string,val,string,var val,roundmode);
external procedure GetFullCurncyRate (var string,Date,var val,var val,var val,var val,var val); //Edit***************************Sasha2,11:28 06.03.2015

global updating procedure ImportImagesMn(record RcVc RepSpec)
begin
record INVc INr;
integer filesi,i;
string 200 path,filename,itemname;
integer comp;
  
  comp = currentcompany;
  path = "Table_files";
  
  filesi = countfilesindir(path);
  for (i=0;i<filesi;i=i+1) begin
    filename = GetFileNameInDir(path,i);
    
    if(setinset(".jpg",right(filename,4)) or setinset(".png",right(filename,4)))then begin
      itemname = left(filename,len(filename)-4);
      INr.Code = itemname;
      if(readfirstmain(INr,1,true))then begin
        if(INr.Code==itemname)then begin
          RecordLinkFile(path & "\\" & filename,0,INr,comp);
        end;
      end;
    end;
    
  end;
  
return;
end;

global updating procedure CUChangeCurMn(record RcVc RepSpec)
begin
record CUVc CUr;
record CurncyCodeVc CCr;
string 10 curncy;
  
  
  if(nonblank(RepSpec.f1))then begin
    CCr.CurncyCode = RepSpec.f1;
    if(readfirstmain(CCr,1,true))then begin
      if(CCr.CurncyCode==RepSpec.f1)then begin
        CUr.Code = "";
        curncy = RepSpec.f1;
        while(loopmain(CUr,1,true))begin
          if(CUr.CurncyCode!=curncy)then begin
            CUr.CurncyCode=curncy;
            recordStore(CUr,true);
          end;
        end;
      end else begin
        messagebox(1120,"");
      end;
    end else begin
        messagebox(1120,"");
    end;
  end else begin
    if(RepSpec.flags[0]>0)then begin
      CUr.Code = "";
      curncy = "";
      while(loopmain(CUr,1,true))begin
        if(CUr.CurncyCode!=curncy)then begin
          CUr.CurncyCode=curncy;
          recordStore(CUr,true);
        end;
      end;
    end;
  end;
return;
end;

global updating procedure CUChangeBALMn(record RcVc RepSpec)
begin
record CUVc CUr;
record CurncyCodeVc CCr;
string 10 curncy;
  
  
CUr.Code = "";
while(loopmain(CUr,1,true))begin
	if(CUr.OnAccount<1)then begin
		CUr.OnAccount=1;
		recordStore(CUr,true);
	end;
end;
    
return;
end;


global updating procedure INChangeCSTMn(record RcVc RepSpec)
begin
record INVc INr;

  INr.Code = "";
  While(loopmain(INr,1,true))begin
    if(INr.UpdateCost>0 or INr.SRUpdateCost>0)then begin
      INr.UpdateCost=0; 
      INr.SRUpdateCost = 0;
      recordStore(INr,true);
    end;
  end;
  
return;
end;


global updating procedure FIXIHMn(record RcVc RepSpec)
begin
	record INVc INr;
	record PUVc PUr;
	row PUVc PUrw;
	record IVVc IVr;
	row IVVc IVrw;
	record StockMovVc SMr;
	row StockMovVc SMrw;
	val rate;
	integer i,mtrw;
	date fd;
	record ItemHistVc IHr,IH2r;
	boolean TrHs,testf;
	
	/*
	IVr.SerNr = 2976;
	readfirstmain(IVr,1,true);
		matrowdelete(IVr,2);
		matrowget(IVr,1,IVrw);
			IVrw.Sum = 63;
			IVrw.Points = 63;
		matrowPUt(IVr,1,IVrw);
	
	recordstore(IVr,true);*/
	
	rate = 1.1;
	
	fd = stringtodate("29/11/2011");
	
	/*IHr.TransDate = fd;
	IHr.FileName = "StockMovVc";
	TrHs = true;
	while(loopkey("FNTransDate",IHr,2,TrHs))begin
		testf = true;
		if(IHr.TransDate<fd)then begin TrHs = false; testf = false; end;
		
		if(testf)then begin
			if(IHr.Qty<0)then begin
				IH2r.SerNr = IHr.Source;
				if(readfirstmain(IH2r,1,true) and IH2r.TransDate>=fd and IH2r.FileName=="PUVc")then begin
					PUr.SerNr = IH2r.TransNr;
					readfirstmain(PUr,1,true);
					if(PUr.CurncyCode=="AZN")then begin
						SMr.SerNr = IHr.TransNr;
						readfirstmain(SMr,1,true);
						matrowget(SMr,IHr.Row,SMrw);
						SMrw.NewPrice = round(SMrw.NewPrice * rate,defaultcurroundoff);
						SMrw.OldPrice = round(SMrw.OldPrice * rate,defaultcurroundoff);
						SMrw.FIFORowVal = round(SMrw.FIFORowVal * rate,defaultcurroundoff);
						SMrw.SentNewPrice = round(SMrw.SentNewPrice * rate,defaultcurroundoff);
						SMrw.SentOldPrice = round(SMrw.SentOldPrice * rate,defaultcurroundoff);
						SMrw.SentFIFORowVal = round(SMrw.SentFIFORowVal * rate,defaultcurroundoff);
						matrowput(SMr,IHr.Row,SMrw);
						recordStore(SMr,true);
					end;
				end;
			end;
		end;
	end;
	resetloop(IHr);*/
	
	
	IHr.TransDate = fd;
	IHr.FileName = "IVVc";
	TrHs = true;
	while(loopkey("FNTransDate",IHr,2,TrHs))begin
		testf = true;
		if(IHr.TransDate<fd)then begin testf = false; TrHs = false; end;
		if(IHr.Qty<0)then begin testf = false; end;
		
		if(testf)then begin
			IH2r.FileName = "PUVc";
			IH2r.ArtCode = IHr.ArtCode;
			IH2r.TransDate = IHr.TransDate;
			if(readlastkey("FNArtCode",IH2r,3,false) and IH2r.TransDate>=fd)then begin
				PUr.SerNr = IH2r.TransNr;
				readfirstmain(PUr,1,true);
				if(PUr.CurncyCode=="AZN")then begin
					IVr.SerNr = IHr.TransNr;
					readfirstmain(IVr,1,true);
					matrowget(IVr,IHr.Row,IVrw);
					IVrw.FIFO = round(IVrw.FIFO * rate,defaultcurroundoff);
					IVrw.FIFORowVal = round(IVrw.FIFORowVal * rate,defaultcurroundoff);
					matrowput(IVr,IHr.Row,IVrw);
					recordStore(IVr,true);
				end;
			end;
		end;
	end;
	resetloop(IHr);
	
	/*PUr.TransDate = fd;
	TrHs = true;
	while(loopkey("TransDate",PUr,1,TrHs))begin
		testf = true;
		if(PUr.TransDate<fd)then begin testf = false; TrHs = false; end;
		if(PUr.CurncyCode=="EUR")then begin testf = false; end;
		
		if(testf)then begin
			mtrw = matrowcnt(PUr);
			For(i=0;i<mtrw;i=i+1) begin
	  		matrowget(PUr,i,PUrw);
	  			PUrw.CostPrice = round(PUrw.CostPrice*rate,defaultcurroundoff);
	  			//PUrw.UPrice = PUrw.UPrice*rate;
	  			PUrw.Sum = round(PUrw.Sum*rate,defaultcurroundoff);
	  		matrowput(PUr,i,PUrw);
			end; 
			PUr.CurncyCode = "EUR";
			PUr.Comment = "AZN -> EUR";
			recordstore(PUr,true);
		end;
		
	end;*/
	
  
return;
end;


global updating procedure FixIVChangeBackMn()
begin
	record IVVc IVr;
	row IVVc IVrw;
	integer i,mtrw;
	boolean putin;
	
	IVr.SerNr = "";
	while(loopmain(IVr,1,true))begin
		putin = false;
		if(IVr.RetnValue>0)then begin
			mtrw = matrowcnt(IVr);
			For(i=0;i<mtrw;i=i+1) begin
	  		matrowget(IVr,i,IVrw);
	  		if(IVrw.stp==kInvoiceRowTypeCashPayment)then begin
					IVrw.Sum = IVrw.Sum - IVr.RetnValue;
					IVr.RetnValue = 0;
					IVr.RetValue = 0;
					matrowput(IVr,i,IVrw);
					putin = true;
	  		end;
			end; 			
		end;
		if(putin)then begin
			recordstore(IVr,true);
		end;
	end;
return;
end;

global updating procedure CreateGlobalLocationsMn()
begin
	record GlobalLocationVc Glocr;
	record LocationVc Locr;
	record CompaniesBlock CBb;
	row CompaniesBlock CBrw;
	integer mtrw,i;
	
	blockload(CBb);
	mtrw = matrowcnt(CBb);
	For(i=0;i<mtrw;i=i+1) begin
	  if (SetCompany(i+1,false)) then begin
			Locr.Code = "";
			while(loopmain(Locr,1,true))begin
				recordnew(Glocr);
				Glocr.Code = Locr.Code;
				Glocr.Name = Locr.Name;
				Glocr.Company = i+1;
				recordStore(GLocr,true);
			end;
			resetloop(Locr);
		ResetCompany(i+1);  
  	end;
	end; 
	
return;
end;




global updating procedure UNOKStockFinDockMn()
begin
	record IVVc IVr;
	record PUVc PUr;
	record StockMovVc SMr;
	record SDVc SDr;
	record SHVc SHr;
	record IPVc IPr;
	record ORVc ORr;
	record RetVc Retr;
	
	
	IVr.SerNr = -1;
	PUr.SerNr = -1;
	SMr.SerNr = -1;
	SDr.SerNr = -1;
	SHr.SerNr = -1;
	IPr.SerNr = -1;
	ORr.SerNr = -1;
	Retr.SerNr = -1;
	
	while(loopmain(IVr,1,true))begin
		IVr.OKFlag = 0;	
		recordStore(IVr,true);	
	end;
	while(loopmain(PUr,1,true))begin
		PUr.OKFlag = 0;	
		recordStore(PUr,true);	
	end;
	while(loopmain(SMr,1,true))begin
		SMr.OrdFlag = 0;	
		SMr.SentOKFlag = 0;
		SMr.OKFlag = 0;
		recordStore(SMr,true);	
	end;
	while(loopmain(SDr,1,true))begin
		SDr.OKFlag = 0;	
		recordStore(SDr,true);	
	end;
	while(loopmain(SHr,1,true))begin
		SHr.OKFlag = 0;	
		recordStore(SHr,true);	
	end;
	while(loopmain(IPr,1,true))begin
		IPr.OKFlag = 0;	
		recordStore(IPr,true);	
	end;
	/*while(loopmain(ORr,1,true))begin
		ORr.OKFlag = 0;	
		recordStore(ORr,true);	
	end;*/
	while(loopmain(Retr,1,true))begin
		Retr.OKFlag = 0;	
		recordStore(Retr,true);	
	end;
	
return;
end;


global updating procedure DellAccAndMainMn()
begin
	record AccVc Accr;
	record TRVc TRr;
	
	Accr.AccNumber = "";
	while(loopmain(Accr,1,true))begin
		recorddelete(Accr);
		stepback(Accr);
	end;
	
	TRr.IntYc = -1;
	while(loopmain(TRr,1,true))begin
		recorddelete(TRr);
		stepback(TRr);
	end;
  
return;
end;

global updating procedure DellNewINMn()
begin
	record INVc INr;
	record RHistVc RHistr;
  record RHistVc RHist2r;
  Boolean Accs;
  record CUVc CUr;
  string 200 tstr;
  boolean testf,TrHs;
  
  
	while(loopmain(INr,1,true))begin
		
		tstr = BuildRecordIdStr(INr,currentcompany);
		Accs = true;
		RHist2r.RecidStr = tstr;
		if (ReadFirstKey("RecidStr",RHist2r,1,true)) then begin
			if(RHist2r.TransDate==stringtodate("04/11/2014"))then begin
				if(RHist2r.TransTime>stringtotime("18:36:00") and RHist2r.TransTime<stringtotime("18:37:00"))then begin
					testf = true;
					if(setinset("CARRERA_CA",INr.DispGroups))then begin testf = false; end;
					if(setinset("DUPONT",INr.DispGroups))then begin testf = false; end;
					if(setinset("LEO_PIZZO",INr.DispGroups))then begin testf = false; end;
					if(setinset("PASQUALE_B",INr.DispGroups))then begin testf = false; end;
					if(setinset("STEPHEN_WE",INr.DispGroups))then begin testf = false; end;
					if(setinset("UTOPIA",INr.DispGroups))then begin testf = false; end;
					if(setinset("VICTOR_MAY",INr.DispGroups))then begin testf = false; end;
					if(setinset("ZANCAN",INr.DispGroups))then begin testf = false; end;
					
					if(testf)then begin
						logtext(0,"delete " & INr.Code & " Date & time: " & RHist2r.TransDate & " " & RHist2r.TransTime);
						recorddelete(INr);
						stepback(INr);
					end;
					
				end;
			end;
		end;
		
	end;
	
return;
end;


global updating procedure ChangeAccInPO()
begin
	record POVc POr;
	row POVc POrw;
	integer i,mtrw;
	boolean findf;
	
	
	while(loopmain(POr,1,true))begin
		mtrw = matrowcnt(POr);
		if(mtrw>0)then begin
			findf = false;
			For(i=0;i<mtrw;i=i+1) begin
	  		matrowget(POr,i,POrw);
				if(nonblank(POrw.CostAcc) and POrw.CostAcc!="41/01")then begin
					POrw.CostAcc = "41/01";
					matrowput(POr,i,POrw);
					findf = true;
				end;
			end; 
			if(findf)then begin
				recordStore(POr,true);
			end;
		end;
	end;

return;
end;


global updating procedure MoveRowUPInTRVcMn(record RcVc RepSpec)
begin
	record TRVc TRr;
	row TRVc TRrw;
	boolean TrHs, testf;
	integer mtrw,i;
	
	
	TRr.IntYc=IVYc;
	TrHs = true;
	while(loopmain(TRr,1,TrHs))begin
		if(TRr.IntYc!=IVYc)then begin TrHs = false; end;
		
		
		if(TrHs)then begin	
			testf = false;
			mtrw = matrowcnt(TRr);
			For(i=0;i<mtrw;i=i+1) begin
				matrowget(TRr,i,TRrw);	  
				if(TRrw.AccNumber=="51" and i>0)then begin
					matrowdelete(TRr,i);
					matrowinsert(TRr,0,TRrw);
					testf = true;				
				end;
				matrowget(TRr,i,TRrw);	  
				if(TRrw.AccNumber=="50" and i>0)then begin
					matrowdelete(TRr,i);
					matrowinsert(TRr,0,TRrw);
					testf = true;				
				end;
			end; 
			if(testf)then begin
				recordstore(TRr,true);
			end;
		end;
	end;
	
return;
end;


global updating procedure ChangeAccInTRVcMn(record RcVc RepSpec)
begin
	record TRVc TRr;
	row TRVc TRrw;
	boolean TrHs, testf;
	integer mtrw,i;
	record AccVc Accr;
	string 100 comment,obj,comment2;
	record ObjBalVc ObjBalr;
	integer pos;
	
	Accr.AccNumber="45";
	readfirstmain(Accr,1,true);
	comment = Accr.Comment;
	Accr.AccNumber="47";
	readfirstmain(Accr,1,true);
	comment2 = Accr.Comment;
	
	
	TRr.IntYc=IVYc;
	TrHs = true;
	while(loopmain(TRr,1,TrHs))begin
		if(TRr.IntYc!=IVYc)then begin TrHs = false; end;
		
		
		if(TrHs)then begin	
			testf = false;
			mtrw = matrowcnt(TRr);
			For(i=0;i<mtrw;i=i+1) begin
				matrowget(TRr,i,TRrw);	  
				if(TRrw.AccNumber=="46" and nonblank(TRrw.VATCode) and TRrw.DebVal>0)then begin
					TRrw.AccNumber="47";
					TRrw.Comment=comment2;
					matrowput(TRr,i,TRrw);
					testf = true;
				end;
				if(TRrw.AccNumber=="46" and blank(TRrw.VATCode))then begin
					
					/*balrfound = GetObjBal("46","",ObjBalr);
					AddBalance(ObjBalr,TRr.TransDate,"transdebit",-TRrw.DebVal,"transcredit",-TRrw.CredVal,"",blankval,"",blankval,"",blankval,"",blankval);
					
					pos = 0;
					obj = "";
					ExtractObj(TRrw.Objects,pos,obj);
					While (nonblank(obj)) begin
						if(nonblank(obj))then begin
							balrfound = GetObjBal("46",obj,ObjBalr);
							AddBalance(ObjBalr,TRr.TransDate,"transdebit",-TRrw.DebVal,"transcredit",-TRrw.CredVal,"",blankval,"",blankval,"",blankval,"",blankval);
						end;
						ExtractObj(TRrw.Objects,pos,obj);
					end;*/
					
					
					TRrw.AccNumber="45";
					TRrw.Comment=comment;
					matrowput(TRr,i,TRrw);
					
					/*balrfound = GetObjBal("45","",ObjBalr);
					AddBalance(ObjBalr,TRr.TransDate,"transdebit",TRrw.DebVal,"transcredit",TRrw.CredVal,"",blankval,"",blankval,"",blankval,"",blankval);
					
					pos = 0;
					obj = "";
					ExtractObj(TRrw.Objects,pos,obj);
					While (nonblank(obj)) begin
						if(nonblank(obj))then begin
							balrfound = GetObjBal("45",obj,ObjBalr);
							AddBalance(ObjBalr,TRr.TransDate,"transdebit",TRrw.DebVal,"transcredit",TRrw.CredVal,"",blankval,"",blankval,"",blankval,"",blankval);
						end;
						ExtractObj(TRrw.Objects,pos,obj);
					end;*/
					
					
					testf = true;				
				end;
			end; 
			if(testf)then begin
				recordstore(TRr,true);
			end;
		end;
	end;
	
return;
end;


global updating procedure Remove54AccToOtherTRVcMn(record RcVc RepSpec)
begin
	record TRVc TRr;
	row TRVc TRrw;
	boolean TrHs, testf;
	integer mtrw,i;
	record AccVc Accr;
	string 100 comment,obj,comment2;
	record ObjBalVc ObjBalr;
	integer pos;
	
	Accr.AccNumber="58";
	readfirstmain(Accr,1,true);
	comment = Accr.Comment;

	
	
	TRr.IntYc=OPYc;
	TrHs = true;
	while(loopmain(TRr,1,TrHs))begin
		if(TRr.IntYc!=OPYc)then begin TrHs = false; end;
		
		if(TrHs)then begin	
			testf = false;
			mtrw = matrowcnt(TRr);
			For(i=0;i<mtrw;i=i+1) begin
				matrowget(TRr,i,TRrw);	  
				if(TRrw.AccNumber=="52")then begin
					TRrw.AccNumber="58";
					TRrw.Comment=comment;
					matrowput(TRr,i,TRrw);
					testf = true;
				end;
			end; 
			if(testf)then begin
				recordstore(TRr,true);
			end;
		end;
	end;
	
return;
end;




function Boolean FindSubString( string Search, string Source )
begin
	integer i,length,lengthSource,diff;
	string 150 temp,str,inStr;
	boolean res;
	
	res=false;
	length=len(Search);
	lengthSource=len(Source);
	diff=lengthSource-length;

	str=UpperCase(Search);   
	inStr=UpperCase(Source);		
	if (diff<0) then begin
	goto	breakFunction;
	end;
	
	for(i=0;i<=diff;i=i+1) begin
	 temp=mid(inStr,i,length);
	 if(temp==str) then begin
	 	res = true;
	 	goto breakFunction;
	 end;	
	end;

	breakFunction:; // goto
	FindSubString=res;
return;  
end;


global
updating procedure  ConsignmentTypeMn(record RcVc RepSpec)	//Edit----------------------Dima 17.12.2014
begin
  record INVc INr;
  record DIVc DIr;
  record AccVc Accr;
  boolean TrHs,next,type1,type2;
  string 30 code,class;
  integer pos;
  boolean changef;

	TrHs = true;
	type1 = false;
	type2 = false;

	Accr.AccNumber = "41/02";
	if (ReadFirstMain(Accr,1,true)) then begin
	type1 = true;
	end;

	Accr.AccNumber = "12";
	if (ReadFirstMain(Accr,1,true)) then begin
	type2 = true;
	end;


	while (LoopMain(INr,1,TrHs)) begin
		changef = false;
		next = true;

		code = INr.Code;
		if (type1 == true) then begin
			if (Right(code,2)=="VR") then begin 	//first type
				INr.ConsgType = 1;
				INr.PurchAcc = "41/02";
				changef = true;
				next = false;
			end;	
		end;
		
		if((next == true) and (type2 == true)) then begin			//second type
			class = "";
			pos = 0;
			ExtractObj(INr.DispGroups,pos,class);
			while(nonblank(class))begin
				DIr.Code = class;
				readfirstmain(DIr,1,true);
				if(FindSubString("POS",DIr.Code) or FindSubString("POS",DIr.Name))then begin
					INr.ConsgType = 2;
					INr.PurchAcc = "12";
					changef = true;
				end;
				ExtractObj(INr.DispGroups,pos,class);
			end;
		end;
		
		if(changef)then begin
      RecordStore(INr,true);           
    end;          
	end;



  return;
end;

global
updating procedure ChangeSalesAccInORRowsMn(record RcVc RepSpec) //Edit***************************Sasha2,12:02 23.12.2014 {
begin
  record ORVc ORr;
  row ORVc ORrw;
  integer rwcnt,i;
  Boolean found;
  string 10 acc;
  	
  	acc = "" & 46;
  	while (LoopMain(ORr,1,true)) begin
  		found = false;
  		rwcnt = MatRowCnt(ORr);
  		for (i=0;i<rwcnt;i=i+1) begin
  			MatRowGet(ORr,i,ORrw);
  			if (ORrw.stp==1 and NonBlank(ORrw.ArtCode)) then begin
	  			ORrw.SalesAcc = acc;
	  			found = true;
	  			MatRowPut(ORr,i,ORrw);
	  		end;	
  		end;
  		if (found) then begin
  			RECORDSTORE(ORr,true);
  		end;
  	end;

  return;
end; //Edit***************************Sasha2,14:09 23.12.2014 }

global
updating procedure AnnulateVATDupontMn(record RcVc RepSpec) //Edit***************************Sasha2,12:02 23.12.2014 {
begin
  record INVc INr;
  Boolean found;
  	
  	if (currentcompany==10) then begin
  		while (LoopMain(INr,1,true)) begin
	  		found = false;
	  		if (NonBlank(INr.VATCode)) then begin
	  			INr.VATCode = "";
	  			found = true;
	  		end;
	  		if (found) then begin
	  			RECORDSTORE(INr,true);
	  		end;
  		end;
  	end;

  return;
end; //Edit***************************Sasha2,14:09 23.12.2014 }



global
updating procedure  AccCostFrom411To4101Mn(record RcVc RepSpec)	//Edit----------------------Dima 17.12.2014
begin
	record CUVc CUr;
	boolean TrHs;

	TrHs = true;

	while (LoopMain(CUr,1,TrHs)) begin
		
		if ((CUr.AccCost == "41/1") and (CUr.VEType==1)) then begin
				CUr.AccCost = "41/01";
				RecordStore(CUr,true); 
		end;
        
	end;

  return;
end;



global updating procedure RemoveVIVcInTRVcMn()	//Edit-------------------------Dima 02.03.2015
begin
	record TRVc TRr;
	boolean TrHs;	
	
	TRr.IntYc=VIYc;
	TrHs = true;
	while(loopmain(TRr,1,TrHs))begin

		if(TRr.IntYc!=VIYc)then begin TrHs = false; end;		
		
		if(TrHs)then begin	
    	RecordDelete(TRr);
    	StepBack(TRr);
		end;

	end;
	
return;
end;




global updating procedure RemoveOldTRVcRecordsMn()	//Edit-------------------------Dima 03.03.2015
begin
	record TRVc TRr;
	boolean TrHs;


	TrHs = true;
	while(loopmain(TRr,1,TrHs))begin
		
		if(blank(TRr.DSum))then begin	
    	RecordDelete(TRr);
    	StepBack(TRr);
		end;

	end;
	
return;
end;




global updating procedure TransferingCurValueBetweenFieldsMn()	//Edit-------------------------Dima 03.03.2015
begin
	record PUVc PUr;
	record POVc POr;
	record ORVc ORr;
	record IVVc IVr;
	record VIVc VIr;
	record StockMovVc	SMr;
	boolean TrHs;


	TrHs = true;
	While(LoopMain(PUr,1,TrHs)) begin
		if ((PUr.CurncyCode == "EUR") and blank(PUr.ToRateB1)) then begin
				PUr.ToRateB1 = PUr.ToRateB2;
				PUr.ToRateB2 = blankval;
				RecordStore(PUr,true);
		end;
	end;

	TrHs = true;
	While(LoopMain(POr,1,TrHs)) begin
		if ((POr.CurncyCode == "EUR") and blank(POr.ToRateB1)) then begin
				POr.ToRateB1 = POr.ToRateB2;
				POr.ToRateB2 = blankval;
				RecordStore(POr,true);
		end;
	end;

	TrHs = true;
	While(LoopMain(ORr,1,TrHs)) begin
		if ((ORr.CurncyCode == "EUR") and blank(ORr.ToRateB1)) then begin
				ORr.ToRateB1 = ORr.ToRateB2;
				ORr.ToRateB2 = blankval;
				RecordStore(ORr,true);
		end;
	end;

	TrHs = true;
	While(LoopMain(SMr,1,TrHs)) begin
		if ((SMr.CurncyCode == "EUR") and blank(SMr.ToRateB1)) then begin
				SMr.ToRateB1 = SMr.ToRateB2;
				SMr.ToRateB2 = blankval;
				RecordStore(SMr,true);
		end;
	end;

	TrHs = true;
	While(LoopMain(IVr,1,TrHs)) begin
		if ((IVr.CurncyCode == "EUR") and blank(IVr.ToRateB1)) then begin
				IVr.ToRateB1 = IVr.ToRateB2;
				IVr.ToRateB2 = blankval;
				RecordStore(IVr,true);
		end;
	end;

	TrHs = true;
	While(LoopMain(VIr,1,TrHs)) begin
		if ((VIr.CurncyCode == "EUR") and blank(VIr.ToRateB1)) then begin
				VIr.ToRateB1 = VIr.ToRateB2;
				VIr.ToRateB2 = blankval;
				RecordStore(VIr,true);
		end;
	end;

	
return;
end;

global //Edit***************************Sasha2,13:58 03.02.2015 {
updating procedure SetBrandSwarowskiMn()
begin
	record INVc INr;
	boolean TrHs;
	integer oldcompany;
	
	oldcompany = CurrentCompany;
	if (SetCompanyCode(1,false)) then begin
	   INr.Code = "";
	   TrHs = true;
	   while(loopmain(INr,1,TrHs)) begin
  		if(TrHs)then begin
  		  if (Blank(INr.DispGroups)) then begin
  		    INr.DispGroups = "SW";
  		  end else begin
  		    INr.DispGroups = "SW," & INr.DispGroups;
  		  end;	
      	RECORDSTORE(INr,true);
  		end;
	   end;
	end;
	
	ResetCompany(oldcompany);
	
return;
end; //Edit***************************Sasha2,14:51 03.02.2015 }

global updating procedure RemoveNotValidItemsFromCreativeMn()	//Edit***************************Sasha2,16:29 12.02.2015 {
begin
	record INVc INr;
	boolean TrHs;
  integer oldcompany,cnt;

	oldcompany = CurrentCompany;
	if (SetCompanyCode(9,false)) then begin
  	TrHs = true;cnt = 0;
  	INr.Code = "";
  	while(loopmain(INr,1,TrHs))begin
  		if(INr.SyncFlags<1)then begin	
      	RecordDelete(INr);
      	StepBack(INr);cnt = cnt + 1;
  		end;
  	end;
  end;
  
  ResetCompany(oldcompany);LogText(0,"cnt " & cnt);
	
return;
end; //Edit***************************Sasha2,16:29 12.02.2015 }



global updating procedure RevertINGroups3050Mn()	//Edit----------------------Dima  13.02.2015
begin
  record INVc INr;
	record ITVc ITr,ITr2;

	while (LoopMain(INr,1,true)) begin

			if((Right(INr.Group,2) == "3%")  or (Right(INr.Group,2) =="5%") or (Right(INr.Group,2) =="7%")) then begin

						ITr.Code = INr.Group;
						if (ReadFirstMain(ITr,1,true)) then begin
									ITr2.Comment = ITr.Comment;
									if(ReadLastKey("Comment",ITr2,1,true) and (Right(ITr2.Code,2) != "3%") and (Right(ITr2.Code,2) != "5%") and (Right(ITr2.Code,2) != "7%")) then begin

												INr.Group = ITr2.Code;
												RecordStore(INr,true);
									end;
						end;
			end;		
	end;
	
return;
end;


global updating procedure Change84to8401and8402TRVcMn(record RcVc RepSpec)//Edit----------------------Dima  17.02.2015
begin
	record TRVc TRr;
	row TRVc TRrw;
	boolean TrHs, store,testf;
	integer mtrw,i;
	date dateFrom;

	dateFrom = RepSpec.sStartDate;	


	TRr.IntYc=IPYc;
	TrHs = true;
	while(loopmain(TRr,1,TrHs))begin
		if(TRr.IntYc!=IPYc) then begin TrHs = false; end;
			testf = false;
			store = false;
		if (TRr.TransDate >= dateFrom) then begin testf = true; end;
		
			if(TrHs and testf) then begin	
				mtrw = matrowcnt(TRr);
				For(i=0;i<mtrw;i=i+1) begin
						matrowget(TRr,i,TRrw);	  
						if(TRrw.AccNumber=="84")then begin
							TRrw.AccNumber="84/02";
							matrowput(TRr,i,TRrw);
							store = true;
						end;
				end;
				if (store) then begin
						RecordStore(TRr,true);
				end;	 
    	
			end;
	end;

	RecordClear(TRr);
	TRr.IntYc=OPYc;
	TrHs = true;
	while(loopmain(TRr,1,TrHs))begin
		if(TRr.IntYc!=OPYc) then begin TrHs = false; end;
			testf = false;
			store = false;
		if (TRr.TransDate >= dateFrom) then begin testf = true; end;
		
		if(TrHs and testf)then begin	
			mtrw = matrowcnt(TRr);
			For(i=0;i<mtrw;i=i+1) begin
					matrowget(TRr,i,TRrw);	  
					if(TRrw.AccNumber=="84")then begin
						TRrw.AccNumber="84/01";
						matrowput(TRr,i,TRrw);
						store = true;
					end;
			end;
			if (store) then begin
					RecordStore(TRr,true);
			end;	 

		end;
	end;
	
return;
end;



global
updating procedure  CUADDCredOnACCMn(record RcVc RepSpec)	//Edit----------------------Dima 17.12.2014
begin
	record CUVc CUr;
	boolean TrHs;

	TrHs = true;

	while (LoopMain(CUr,1,TrHs)) begin
		
		if (CUr.VEType==1) then begin
			CUr.OnAccAccAP = "64";
			CUr.AccCost = "41/01";
			RecordStore(CUr,true); 
		end;
		if (CUr.CUType==1) then begin
			CUr.OnAccAccAP = "63";
			CUr.AccCost = "";
			RecordStore(CUr,true); 
		end;
        
	end;

  return;
end;



global updating procedure RecalculateINVcCosts_EURMn(record RcVc RepSpec)	//Edit----------------------Dima  26.02.2015
begin
	record INVc INr;
	record BaseCurBlock BCb;
	val newCost,rate;
	string 5 cur;

	BlockLoad(BCb);
	cur = BCb.BaseCur1;	//default "AZN"
	CurValToOtherCur(CurrentDate,"EUR",1.0,cur,rate,DefaultCurRoundOff);    

  While(loopmain(INr,1,true))	begin
    if((INr.LastPurchCurncyCode=="EUR") and nonblank(INr.LastPurchPrice2))then begin    
			INr.InPrice = INr.LastPurchPrice2 * rate;
			recordStore(INr,true);
    end else begin
			INr.InPrice = INr.InPrice*rate;
			recordStore(INr,true);					
		end;
  end;
  
return;
end;


global updating procedure PasteItemGroupByClassMn(record RcVc RepSpec)
begin
	record INVc INr;
	record ITVc ITr;
	record DIVc DIr;
	boolean testf,findf,changef;
	integer pos;
	string 20 class;
	
	INr.Code = "";
	while(loopmain(INr,1,true))begin
		class = "";
		pos = 0;
		changef = false;
		ExtractObj(INr.DispGroups,pos,class);
		while(nonblank(class))begin
			DIr.Code = class;
			if(readfirstmain(DIr,1,true))then begin
				if(DIr.CType=="BRAND")then begin
					ITr.Comment = DIr.Name;
					if(readlastkey("Comment",ITr,1,true))then begin
						INr.Group = ITr.Code;
					end;
					changef = true;
				end;
			end;
			ExtractObj(INr.DispGroups,pos,class);
		end;
		if(changef)then begin
			recordstore(INr,true);
		end;
	end;
	
return;
end;

global //Edit***************************Sasha2,11:22 06.03.2015 {
updating procedure CalcINVcLastPurchPriceMn(record RcVc RepSpec)
begin
	record INVc INr;
	record ItemHistVc IHr;
  val from,to1,to2,base1,base2,cost;
  date td;
  boolean changef;
  string 20 eurcurncy;
	
	eurcurncy = "EUR";
	td = CurrentDate;
	GetFullCurncyRate(eurcurncy,td,from,to1,to2,base1,base2);
	
	INr.Code = "";
	while (loopmain(INr,1,true)) begin
	  //changef = false;
    IHr.ArtCode = INr.Code;
    IHr.FileName = "PUVc";
    if (ReadLastKey("FNArtCode",IHr,2,false) and IHr.ArtCode==INr.Code) then begin
      cost = IHr.TotCostPrice/IHr.Qty;
      if (cost<0) then begin
        cost = cost * (-1);
      end;
      if (cost!=0) then begin
        INr.InPrice = cost;
      end;
    end;
    if (blank(INr.LastPurchCurncyCode) and INr.InPrice!=0) then begin
      if (from!=0 and to1!=0) then begin
        INr.LastPurchCurncyCode = eurcurncy;
        INr.LastPurchPrice2 = (INr.InPrice*from)/to1;
        //changef = true;
      end;
    end;
    if (INr.LastPurchCurncyCode=="AZN") then begin
      INr.LastPurchCurncyCode = eurcurncy;
      //changef = true;
    end;
    //if (changef) then begin
      RECORDSTORE(INr,true);
    //end;
	end;
	
return;
end; //Edit***************************Sasha2,11:22 06.03.2015 }




global
updating procedure CopyDebCredToCurrencyDebCred_TRVcMn()
Begin
	record MainVc Mainr;
	record TRVc TRr;
	row TRVc TRrw;
	integer rwcnt,i;
	boolean TrHs;
	
	
	Mainr.AccNumber = "50";
	TrHs = true;
	
	While(LoopMain(Mainr,1,true)) begin
		if (Mainr.AccNumber != "50") then begin
			TrHs = false;	
		end;
		
		if (TrHs) then begin
			TRr.Number = Mainr.TransNr;
			TRr.IntYc = Mainr.IntYc;
			if (ReadFirstMain(TRr,2,true)) then begin
					rwcnt = MatRowCnt(TRr);
					for(i=0; i<rwcnt; i=i+1) begin
						MatRowGet(TRr,i,TRrw);
						if (TRrw.AccNumber == "50"  and  TRrw.Curncy=="AZN") then begin
								TRrw.CurDebVal = TRrw.DebVal;
								TRrw.CurCredVal = TRrw.CredVal;
								MatRowPut(TRr,i,TRrw);
						end;						
					end;
					RecordStore(TRr,true);
			end;
		
		end;
		
		
	end;	


end;