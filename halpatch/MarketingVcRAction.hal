external procedure ExtractObj(string,var Integer,var string);

SetLangMode(LangRussian,"RUS",0); 

global 
function LongInt MarketingVcRecordRemoveTest(var record MarketingVc Mrkr,record MarketingVc Mrk2r,LongInt long3,LongInt long4)
BEGIN
  LongInt res;
  Boolean testf;
  record UserVc Userr;

  res = 1;
  if (testf) then begin
    if (long3>0) then begin MessageBox(1040,""); end;
    res = 0;
  end;
 
  if(UserCanAction("AllowDeleteMarketingRecord",true)==false)then begin
	MessageBox(1040," У Вас недостаточно прав на удаление!");
	res = 0;
	goto LMarketingVcRecordRemoveTest;
  end;

LMarketingVcRecordRemoveTest:;
  MarketingVcRecordRemoveTest = res; 
  RETURN;
END;

global updating
function LongInt MarketingVcRecordDefaults(var record MarketingVc Mrkr,record MarketingVc Mrk2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  record LocalMachineBlock LMb;
  record UserVc Userr;
  
  blockload(LMb);
  
  Mrkr.TransDate = currentdate;
  Mrkr.TransTime = currenttime;
  Mrkr.SalesMan = currentuser;
  Mrkr.LocalMachine = LMb.LocalMachineCode;
  Mrkr.Location = LMb.DefLocation;
  Mrkr.CityRbtn = 1;
  Mrkr.ResultRbtn = 0;	
  
  if(Mrkr.SerNr==-1)then begin
		Mrkr.SerNr = NextSerNr("MarketingVc",Mrkr.TransDate,-1,false,"");
  end;
  
  /*if(RecordStore(Mrkr,true)) then begin
	  end;
  *///************************ Save Record when after creation	  
  MarketingVcRecordDefaults = res; 
  RETURN;
END;

global
function LongInt MarketingVcRecordDuplicate(var record MarketingVc Mrkr,record MarketingVc Mrk2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
	
  Mrkr.SerNr = -1;
  Mrkr.TransDate = currentdate;
  Mrkr.TransTime = currenttime;
  Mrkr.SalesMan = currentuser;
  
  MarketingVcRecordDuplicate = res; 
  RETURN;
END;

global
updating function LongInt MarketingVcRecordSave(var record MarketingVc Mrkr,record MarketingVc Mrk2r,LongInt stat,LongInt long4)
begin
  LongInt res;
  
  MarketingVcRecordSave = res; 
  return;
end;

global
function LongInt MarketingVcRecordUpdate(var record MarketingVc Mrkr,record MarketingVc Mrk2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
	

  MarketingVcRecordUpdate = res; 
  RETURN;
END;


global
function LongInt MarketingVcRecordCheck(var record MarketingVc Mrkr,record MarketingVc Mrk2r,LongInt stat,LongInt long4)
BEGIN 
	LongInt res;
	record CUVc CUr;
	record IVVc IVr;
	string 255 serNum, invNum,tmpCust;
	integer insertmode,updatemode, pos, i;
	record SysFormatBlock SysFormatRec;
  
  BlockLoad(SysFormatRec);
  res = 0;
  insertmode = 1;
  updatemode = 2;
  invNum = "";
  pos = 0;
  i = 0;
  tmpCust = "";
  
  if(Mrkr.SerNr==-1)then begin
  	Mrkr.SerNr = NextSerNr("MarketingVc",Mrkr.TransDate,-1,false,"");
  end;
  
  if (blank(Mrkr.Name)) then begin
    RecordCheckError(1058,Mrkr.Name,-1,"Name");      
    res = -1;
    goto LMarketingVcRecordCheck; 
  end;   
  
  if (blank(Mrkr.Location)) then begin
    RecordCheckError(1058,Mrkr.Location,-1,"Location");      
    res = -1; 
    goto LMarketingVcRecordCheck;
  end;
  
  if(Mrkr.NationalityRbtn == 2) then begin
  	if(blank(Mrkr.NationalityTxt)) then begin
  		RecordCheckError(1058,Mrkr.NationalityTxt,-1,"NationalityTxt");
  		res = -1; 
    	goto LMarketingVcRecordCheck;
  	end;
  end;
  
  if(Mrkr.ReferenceRbtn == 5) then begin
  	if(blank(Mrkr.ReferenceTxt)) then begin
  		RecordCheckError(1058,Mrkr.ReferenceTxt,-1,"ReferenceTxt");
  		res = -1; 
	    goto LMarketingVcRecordCheck;
  	end;
  end;
  
  if(Mrkr.CityRbtn == 0) then begin
  	if(blank(Mrkr.CityTxt)) then begin
  		RecordCheckError(1058,Mrkr.CityTxt,-1,"CityTxt");
  		res = -1; 
	    goto LMarketingVcRecordCheck;
  	end;
  end;
  
  
  if (SizeTextCnt(Mrkr) == 0) then begin
    RecordCheckError(1058,Mrkr.Math,-1,"Math");      
    res = -1;
    goto LMarketingVcRecordCheck; 
  end;
  
  if(Mrkr.ResultRbtn == 1) then begin
  		
	  ExtractObj(Mrkr.InvNr,pos,serNum);
      while (nonblank(serNum)) begin
        IVr.SerNr = serNum;
		if(Readfirstmain(IVr,1,true)==false)then begin
			res	= -1;
			RecordCheckError(1451,serNum,-1,"InvNr");
			goto LMarketingVcRecordCheck;		
        end else begin
        		if(nonBlank(Mrkr.CustCode))then begin
        				if(IVr.CustCode != Mrkr.CustCode)then begin
        					res	= -1;
							RecordCheckError(2130,serNum,-1,"InvNr");
							goto LMarketingVcRecordCheck;		
						end;
        		end else begin
        			if(i > 0) then begin
        				if(tmpCust != IVr.CustCode)then begin
        					res	= -1;
							RecordCheckError(2130,serNum,-1,"InvNr");
							goto LMarketingVcRecordCheck;
        				end;
        			end;
        			tmpCust = IVr.CustCode;
        			i = i + 1;
        		end;
        	end;
        ExtractObj(Mrkr.InvNr,pos,serNum);
      end;
  end;
  
  
  /*if (blank(INr.Code)) then begin
    if (GetNextItemNr(INr.Code)) then begin end;
    lINr.Code = INr.Code;
    if (ReadFirstMain(lINr,1,true)) then begin
      RecordCheckError(1547,INr.Code,-1,"Code");      
      res = -1; 
      goto LMarketingVcRecordCheck;
    end;
  end;*/
 
	
LMarketingVcRecordCheck:;
  MarketingVcRecordCheck = res;
  RETURN;
END;
	
global
updating function LongInt MarketingVcRecordSaveAfter(var record MarketingVc Mrkr,record MarketingVc Mrk2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  	  	

  
  MarketingVcRecordSaveAfter = res;
  RETURN;
END;


global
updating function LongInt MarketingVcRecordUpdateAfter(var record MarketingVc Mrkr,record MarketingVc Mrk2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;

  
  MarketingVcRecordUpdateAfter = res;
  RETURN;
END;


