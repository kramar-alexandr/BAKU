external procedure ExtractObj(string,var Integer,var string);
external function Boolean POVc_PasteArtCode(var record POVc,Integer,Boolean);// Edit ************************** Friday, 31 August 2012 16:50:21
external procedure POVc_PasteQuant(var record POVc,Integer);// Edit ************************** Friday, 31 August 2012 16:50:20
external function Boolean POVc_PasteVECode(var record POVc,Boolean);
external procedure CurValToOtherCur(Date,string,val,string,var val,roundmode);

SetLangMode(LangRussian,"RUS",0);


global updating procedure CreatePOfromOR(record ORVc ORr)
begin
	integer mtrw,i,j,k,pos,rownum;
	row ORVc ORrw;
	Record POVc POr;
	row POVc POrw;
	string 50 ostr;
	array string 100 class,artcode;
	record INVc INr;
	boolean foundf;
	record CUVc CUr;
	record DIVc DIr;
	string 200 vendor;
	
	
	mtrw = matrowcnt(ORr);
	For(i=0;i<mtrw;i=i+1) begin
		matrowget(ORr,i,ORrw); 
		if(nonblank(ORrw.ArtCode))then begin
			INr.Code = ORrw.ArtCode;
			if(readfirstmain(INr,1,true))then begin
				if(INr.ItemType==1)then begin
				
					pos = 0;
					ostr = "";
					vendor = "";
					ExtractObj(INr.DispGroups,pos,ostr);
					while(nonblank(ostr))begin
						if(nonblank(ostr))then begin
							DIr.Code = ostr;
							if(readfirstmain(DIr,1,true))then begin
								if(DIr.CType=="BRAND")then begin
									vendor = DIr.Name;
								end;
							end;
							ExtractObj(INr.DispGroups,pos,ostr);
						end;
					end;
					foundf = false;
					For(j=0;j<k;j=j+1) begin
	  				if(class[j]==vendor)then begin
	  					foundf = true;
	  				end;
					end; 
					if(!foundf)then begin
						class[k]=vendor;
						k=k+1;
					end;
				end;
			end;
		end;
	end;
	
	For(j=0;j<k;j=j+1) begin
		recordnew(POr);
			rownum = 0;
			POr.OrdNr = ORr.SerNr;

			CUr.Name = class[j];
			if(readfirstkey("Name",CUr,1,true))then begin
				POr.VECode = CUr.Code;
				POVc_PasteVECode(POr,true);
			end else begin
				POr.VECode = "";
			end;

			POr.InvAddr4 = ORr.OrderClass & ORr.SerNr;
			POr.PlanShip = addday(POr.TransDate,CUr.PlanShipDays);
			
			For(i=0;i<mtrw;i=i+1) begin
				matrowget(ORr,i,ORrw); 
				if(nonblank(ORrw.ArtCode))then begin
					INr.Code = ORrw.ArtCode;
					if(readfirstmain(INr,1,true))then begin
						if(INr.ItemType==1)then begin
							pos = 0;
							ostr = "";
							vendor = "";
							ExtractObj(INr.DispGroups,pos,ostr);
							while(nonblank(ostr))begin
								if(nonblank(ostr))then begin
									DIr.Code = ostr;
									if(readfirstmain(DIr,1,true))then begin
										if(DIr.CType=="BRAND")then begin
											vendor = DIr.Name;
										end;
									end;
									ExtractObj(INr.DispGroups,pos,ostr);
								end;
							end;
							ostr = vendor;
							
							
							if(ostr==class[j])then begin
								POrw.ArtCode = ORrw.ArtCode;
								matrowput(POr,rownum,POrw);
								POVc_PasteArtCode(POr,rownum,false);
								matrowget(POr,rownum,POrw);
								POrw.Quant = ORrw.Quant;
								POrw.Spec = ORrw.Spec;
								POrw.OrdRow = i;
								matrowput(POr,rownum,POrw);
								POVc_PasteQuant(POr,rownum);
								rownum = rownum + 1;
							end;
						end;
					end;
				end;
			end;
			
		POr.SerNr = NextSerNr("POVc",POr.TransDate,-1,false,"");     
		recordStore(POr,false);
		createrecordlink(POr,CurrentCompany,ORr,CurrentCompany);
		createrecordlink(ORr,CurrentCompany,POr,CurrentCompany);
	end; 


return;
end;



global procedure POFromORRn(record RcVc RepSpec)
begin
	record ORVc ORr;
	record POVc POr;
	row ORVc ORrw,OR2rw;
	row POVc Porw;
	boolean testf,TrHs,potestf,poTrHs;
	integer mtrw,i,keyint;
	integer pomtrw,poi;
	boolean printf;
	array string 50 artcodes;
	integer acnt,j;
	boolean afound;
	
	startreportnoheaderjob("Отчет по необходимым заказам");
	
	startformat(15);
		outstring(0,0,"№ Счета",false);
		outstring(50,0,"Дата сч.",false);
		outstring(150,0,"Клиент",false);
		outstring(200,0,"Имя",false);
		outstring(300,0,"Запланированная отгрузка",false);
	endformat;
	gray_divider(0,150);
	
	
	ORr.OrdDate = RepSpec.sStartDate;
	keyint = 1;
	if(RepSpec.long1>=0)then begin
		ORr.SerNr = RepSpec.long1;
		keyint = 2;
	end;
	TrHs = true;
	while(loopkey("OrdDate",ORr,keyint,TrHs))begin
		printf = false;
		testf = true;
		if(ORr.OrdDate>RepSpec.sEndDate)then begin testf = false; TrHs = false; end;
		if(ORr.Closed>0)then begin testf = false; end;
		if(nonblank(RepSpec.f1) and RepSpec.f1!=ORr.OrderClass)then begin testf = false; end;
		if(blank(ORr.OrderClass))then begin testf = false; end;
		if(RepSpec.long1>=0 and ORr.SerNr!=RepSpec.long1)then begin TrHs = false; end;
		
		if(testf)then begin

			acnt = 0;
			mtrw = matrowcnt(ORr);
			For(i=0;i<mtrw;i=i+1) begin
	  		matrowget(ORr,i,ORrw);
	  			afound = true;
	  			For(j=0;j<acnt;j=j+1) begin
	  				if(artcodes[j]==ORrw.ArtCode)then begin
	  					matrowget(ORr,j,OR2rw);
	  					OR2rw.Quant = OR2rw.Quant + ORrw.Quant;
	  					matrowput(ORr,j,OR2rw);
	  					afound = false;
	  				end;
					end;
					if(afound)then begin
						artcodes[acnt] = ORrw.ArtCode;
						acnt = acnt + 1;
					end; 
	  			ORrw.Shipd1 = 0;
	  			ORrw.Invd = 0;
	  		matrowput(ORr,i,ORrw);
	  		if(afound==false)then begin
	  			matrowdelete(ORr,i);
	  			mtrw = mtrw - 1;
	  			i=i-1;
	  		end;
			end; mtrw = matrowcnt(ORr);
			For(i=0;i<mtrw;i=i+1) begin
	  		matrowget(ORr,i,ORrw);
	  			ORrw.Shipd1 = 0;
	  		matrowput(ORr,i,ORrw);
			end; 
			
			
			POr.OrdNr = ORr.SerNr;
			poTrHs = true;
			While(loopkey("OrdNr",POr,1,poTrHs)) begin
	  		potestf = true;
	  		if(POr.OrdNr!=ORr.SerNr)then begin potestf = false; poTrHs = false; end;

	  		if(potestf)then begin
	  			pomtrw = matrowcnt(POr);
	  			For(poi=0;poi<pomtrw;poi=poi+1) begin
	  				matrowget(POr,poi,POrw);
	  				For(i=0;i<mtrw;i=i+1) begin
							matrowget(ORr,i,ORrw);
	  					if(POrw.ArtCode==ORrw.ArtCode)then begin
	  						ORrw.Shipd1 = ORrw.Shipd1 + POrw.Quant;
	  						matrowput(ORr,i,ORrw);
	  					end;
	  				end;
					end; 
	  		end;
			end; 
			resetloop(POr);
			
			For(i=0;i<mtrw;i=i+1) begin
	  		matrowget(ORr,i,ORrw);
	  			if((ORrw.Quant - ORrw.Shipd1)>0)then begin
	  				printf = true;
	  			end;
			end; 
			
			if(printf)then begin
				startformat(15);
					outstring(0,"DblORVc",ORr.SerNr,false);
					outstring(50,0,ORr.OrdDate,false);
					outstring(150,0,ORr.CustCode,false);
					outstring(200,0,ORr.Addr0,false);
					outstring(300,0,ORr.PlanShip,false);
				endformat;
				gray_divider(0,150);
				startformat(15);
					outstring(70,0,"Товар",false);
					outstring(140,0,"Название",false);
					outstring(400,0,"Кол-во",false);
					outstring(1,0,"К заказу",true);
				endformat;
				For(i=0;i<mtrw;i=i+1) begin
	  			matrowget(ORr,i,ORrw);
	  			if((ORrw.Quant - ORrw.Shipd1)>0)then begin
	  				startformat(15);
							outstring(70,0,ORrw.ArtCode,false);
							outstring(140,0,ORrw.Spec,false);
							outstring(400,0,ORrw.Quant,false);
							outstring(1,0,ORrw.Quant - ORrw.Shipd1,true);
						endformat;
	  			end;
				end; 
			end;
			
		end;
	end;
	
	endjob;
return;
end;


global procedure POFromORstatusRn(record RcVc RepSpec)
begin
	record ORVc ORr;
	record POVc POr;
	row ORVc ORrw,OR2rw;
	row POVc Porw;
	boolean testf,TrHs,potestf,poTrHs;
	integer mtrw,i,keyint;
	integer pomtrw,poi;
	boolean printf;
	record SerBalVc SBr;
	boolean sbTrHs,sbtestf;
	array string 50 artcodes;
	integer acnt,j;
	boolean afound;
	
	startreportnoheaderjob("Отчет по заказанным товарам");
	
	if(RepSpec.flags[2]==0)then begin
		startformat(15);
			outstring(0,0,"№ Счета",false);
			outstring(50,0,"Дата сч.",false);
			outstring(150,0,"Клиент",false);
			outstring(200,0,"Имя",false);
			outstring(300,0,"Запланированная отгрузка",false);
		endformat;
	end;
	if(RepSpec.flags[2]==1)then begin
		startformat(15);
			outstring(0,0,"№ Счета",false);
			outstring(50,0,"Дата сч.",false);
			outstring(150,0,"Товар",false);
			outstring(200,0,"Название",false);
			outstring(250,0,"Кол-во",false);
			outstring(300,0,"Заказанно",false);
			outstring(350,0,"Поступление",false);
			outstring(400,0,"Отгруженно",false);
		endformat;
	end;
	
	gray_divider(0,150);
	
	ORr.OrdDate = RepSpec.sStartDate;
	keyint = 1;
	if(RepSpec.long1>=0)then begin
		ORr.SerNr = RepSpec.long1;
		keyint = 2;
	end;
	TrHs = true;

	while(loopkey("OrdDate",ORr,keyint,TrHs))begin
		printf = false;
		testf = true;
		if(ORr.OrdDate>RepSpec.sEndDate)then begin testf = false; TrHs = false; end;
		if(ORr.Closed>0)then begin testf = false; end;
		if(nonblank(RepSpec.f1) and RepSpec.f1!=ORr.OrderClass)then begin testf = false; end;
		if(blank(ORr.OrderClass))then begin testf = false; end;
		if(RepSpec.long1>=0 and ORr.SerNr!=RepSpec.long1)then begin TrHs = false; testf = false; end;
		
		
		if(testf)then begin
			acnt = 0;
			mtrw = matrowcnt(ORr);
			For(i=0;i<mtrw;i=i+1) begin
	  		matrowget(ORr,i,ORrw);
	  			afound = true;
	  			For(j=0;j<acnt;j=j+1) begin
	  				if(artcodes[j]==ORrw.ArtCode)then begin
	  					matrowget(ORr,j,OR2rw);
	  					OR2rw.Quant = OR2rw.Quant + ORrw.Quant;
	  					matrowput(ORr,j,OR2rw);
	  					afound = false;
	  				end;
					end;
					if(afound)then begin
						artcodes[acnt] = ORrw.ArtCode;
						acnt = acnt + 1;
					end; 
	  			ORrw.Shipd1 = 0;
	  			ORrw.Invd = 0;
	  		matrowput(ORr,i,ORrw);
	  		if(afound==false)then begin
	  			matrowdelete(ORr,i);
	  			mtrw = mtrw - 1;
	  			i=i-1;
	  		end;
			end; mtrw = matrowcnt(ORr);
			For(i=0;i<mtrw;i=i+1) begin
	  		matrowget(ORr,i,ORrw);
	  			ORrw.Shipd1 = 0;
	  		matrowput(ORr,i,ORrw);
			end; 
			
			
			POr.OrdNr = ORr.SerNr;
			poTrHs = true;
			While(loopkey("OrdNr",POr,1,poTrHs)) begin
				
	  		potestf = true;
	  		if(POr.OrdNr!=ORr.SerNr)then begin potestf = false; poTrHs = false; end;

	  		if(potestf)then begin
	  			pomtrw = matrowcnt(POr);
	  			For(poi=0;poi<pomtrw;poi=poi+1) begin
	  				matrowget(POr,poi,POrw);
						For(i=0;i<mtrw;i=i+1) begin
							matrowget(ORr,i,ORrw);
							if(POrw.ArtCode==ORrw.ArtCode)then begin
								ORrw.Shipd1 = ORrw.Shipd1 + POrw.Quant;
								ORrw.Invd = ORrw.Invd + POrw.Shipd2;
								matrowput(ORr,i,ORrw);
							end;
						end; 
					end; 
	  		end;
			end; 
			resetloop(POr);

			For(i=0;i<mtrw;i=i+1) begin
	  		matrowget(ORr,i,ORrw);
	  			if((ORrw.Shipd1)>0)then begin
	  				if(RepSpec.flags[1]==0)then begin
	  					if(ORrw.Quant>ORrw.Shipd2)then begin
								printf = true;
							end;
	  				end else begin
	  					printf = true;
	  				end;
	  			end;
			end; 
			
			if(printf)then begin
				if(RepSpec.flags[2]==0)then begin
					startformat(15);
						outstring(0,"DblORVc",ORr.SerNr,false);
						outstring(50,0,ORr.OrdDate,false);
						outstring(150,0,ORr.CustCode,false);
						outstring(200,0,ORr.Addr0,false);
						outstring(300,0,ORr.PlanShip,false);
					endformat;
					gray_divider(0,150);
					startformat(15);
						outstring(70,0,"Товар",false);
						outstring(140,0,"Название",false);
						outstring(250,0,"Кол-во",false);
						outstring(300,0,"Заказанно",false);
						outstring(350,0,"Поступление",false);
						outstring(400,0,"Отгруженно",false);
					endformat;
				end;

				For(i=0;i<mtrw;i=i+1) begin
	  			matrowget(ORr,i,ORrw);
	  			if((ORrw.Shipd1)>0)then begin
	  				if(RepSpec.flags[2]==0)then begin
							startformat(15);
								//outstring(70,0,ORrw.ArtCode,false);
								OutStringID(70,"DblOpenItemHist",ORrw.ArtCode,false,ORr.OrderClass & ORr.SerNr);
								outstring(140,0,ORrw.Spec,false);
								outstring(250,0,ORrw.Quant,false);
								outstring(300,0,ORrw.Shipd1,false);
								outstring(350,0,ORrw.Invd,false);
								outstring(400,0,ORrw.Shipd2,false);
							endformat;
				
							if(ORrw.Shipd2<ORrw.Quant)then begin
								startformat(15);
									outstring(70,0,"Статус товара",false);
								endformat;
								if(ORrw.Quant>ORrw.Shipd1)then begin
									startformat(15);
										outstring(70,0,"Не заказанно",false);
										outstring(200,0,ORrw.Quant-ORrw.Shipd1,false);
									endformat;
								end;
								if(ORrw.Shipd1>ORrw.Invd)then begin
									startformat(15);
										outstring(70,0,"Не отгруженно поставщиком",false);
										outstring(200,0,ORrw.Shipd1-ORrw.Invd,false);
									endformat;
								end;
								if(ORrw.Invd>0)then begin
									SBr.Item = ORrw.ArtCode;
									SBr.Serial = ORr.OrderClass & ORr.SerNr;
									sbTrHs = true;
									While(loopkey("ItemSerial",SBr,2,sbTrHs)) begin
										sbtestf = true;
										if(SBr.Item!=ORrw.ArtCode or SBr.Serial!=ORr.OrderClass & ORr.SerNr)then begin sbTrHs = false; sbtestf = false; end;
										if(SBr.Quant<=0)then begin sbtestf = false; end;
							
										if(sbtestf)then begin
											startformat(15);
												outstring(70,0,"Находится на складе",false);
												outstring(200,0,SBr.Location,false);
												outstring(250,0,SBr.Quant,false);
											endformat;
										end;
							
									end; 
									resetloop(SBr);
								end;
							end;
						end;
						if(RepSpec.flags[2]==1)then begin
							startformat(15);
								outstring(0,"DblORVc",ORr.SerNr,false);
								outstring(40,0,ORr.OrdDate,false);
								OutStringID(70,"DblOpenItemHist",ORrw.ArtCode,false,ORr.OrderClass & ORr.SerNr);
								outstring(140,0,ORrw.Spec,false);
								outstring(250,0,ORrw.Quant,false);
								outstring(300,0,ORrw.Shipd1,false);
								outstring(350,0,ORrw.Invd,false);
								outstring(400,0,ORrw.Shipd2,false);
							endformat;
						end;
						gray_divider(70,300);
					end;
				end;
			end;
			
		end;
	end;
	
	endjob;
return;
end;



global function boolean CheckPOFromOR(record ORVc ORr)
begin
	boolean res;
	record POVc POr;
	
	res = false;

	POr.OrdNr = ORr.SerNr;
	if(readfirstkey("OrdNr",POr,1,true))then begin
		res = true;
	end;
	
	CheckPOFromOR = res;
return;
end;

//Edit***********************Vitalii 15:29 21.08.2014
global procedure SOofPeriodRn(record RcVc RepSpec)
begin
  string 20 fromdate,todate;
  record ORVc ORr;
	row ORVc ORrw;
	record INVc INr;
	record DIVc DIr;
	record BaseCurBlock BCb;
	Boolean TrHs;
	Integer rwcnt,i,pos;
	string 10 classtr, brandstr;
	val price, sum;

	fromdate = RepSpec.sStartDate;
	todate = RepSpec.sEndDate;
	BlockLoad(BCb);

	startreportjob("Отчет по заказанным товарам");
	Header(0,"Период отчета: " & fromdate & " - " & todate,1);
	EndHeader;

	startformat(15);
	outstring(0,0,"Вид счета",false);
	outstring(25,0,"№ Счета",false);
	outstring(50,0,"Дата покупки",false);
	outstring(75,0,"Ханза",false);
	outstring(100,0,"Код поставщика",false);
	outstring(125,0,"Склад",false);
	outstring(150,0,"Бренд",false);
	outstring(175,0,"Наименование",false);
	outstring(200,0,"Кол-во продаж",false);
	outstring(225,0,"Ед.измерения",false);
	outstring(250,0,"Ритейл за ед-цу в валюте бренда ",false);
	outstring(275,0,"Ритейл за ед-цу в валюте АЗН",false);
	outstring(300,0,"Сумма продажи в валюте бренда",false);
	outstring(325,0,"Сумма продажи в валюте АЗН",false);
	outstring(350,0,"Валюта брэнда",false);
	outstring(375,0,"Номер клиента",false);
	outstring(400,0,"Имя клиента",false);
	outstring(425,0,"Процент скидки",false);
	outstring(450,0,"Продавец",false);
	endformat;
	gray_divider(0,480); 
	
	TrHs = true;
  ORr.OKFlag = 1;
  while (LoopKey("OKFlag",ORr,1,TrHs)) begin
    if ((TrHs) and (ORr.OrdDate >= RepSpec.sStartDate) and (ORr.OrdDate <= RepSpec.sEndDate)) then begin
			rwcnt = MatRowCnt(ORr);
  		for(i=0;i<rwcnt;i=i+1) begin
    		MatRowGet(ORr,i,ORrw);
				startformat(15);
				outstring(0,0,ORr.OrderClass,false);
				outstring(1,0,ORr.SerNr,false);
				outstring(2,0,ORr.OrdDate,false);
				outstring(3,0,ORrw.ArtCode,false);
				INr.Code = ORrw.ArtCode;
				ReadFirstKey("Code",INr,1,true);
				outstring(4,0,INr.AlternativeCode,false);
				if NonBlank(ORrw.Location) then begin
					outstring(5,0,ORrw.Location,false);
				end else begin
					outstring(5,0,ORr.Location,false);
				end;
				pos = 0;
				brandstr = "";
				ExtractObj(INr.DispGroups,pos,classtr);
				while(nonblank(classtr))begin
					DIr.Code = classtr;
					ReadFirstKey("Code",DIr,1,true);
					if (DIr.CType=="BRAND") then begin
						if Blank(brandstr) then begin 
							brandstr = DIr.Name;
						end else begin
							brandstr = brandstr & ", " & DIr.Name;
						end;
					end;
	  			ExtractObj(INr.DispGroups,pos,classtr);
	  		end;
				outstring(6,0,brandstr,false);
				outstring(7,0,INr.Name,false);
				outstring(8,0,ORrw.Quant,false);
				outstring(9,0,ORrw.UnitCode,false);
				outstring(10,0,ORrw.Price,false);
				CurValToOtherCur(ORr.OrdDate,ORr.CurncyCode,ORrw.Price,BCb.StdBaseCur,price,DefaultCurRoundOff);
				outstring(11,0,price,false);
				outstring(12,0,ORrw.Sum,false);
				CurValToOtherCur(ORr.OrdDate,ORr.CurncyCode,ORrw.Sum,BCb.StdBaseCur,sum,DefaultCurRoundOff);
				outstring(13,0,sum,false);
				outstring(14,0,ORr.CurncyCode,false);
				outstring(15,0,ORr.CustCode,false);
				outstring(16,0,ORr.Addr0,false);
				outstring(17,0,ORrw.vRebate,false);
				outstring(18,0,ORr.SalesMan,false);
				endformat;
			end;
		end;
	end;

	endjob;
	return;
end;
