external procedure IVDClass_RefreshStringList(Integer,record IVVc);
external procedure ResetDisplayDsm();
external procedure SetPOSWindowDisplayChange(val);
remote procedure IVVc_StoreEInvoice(record IVVc,record IVVc,LongInt);
external function Integer TestCleanCashIdentity(Boolean,record LSerialPortDeviceVc,string,var string);
external function Boolean FindLocalSerialPortDevice(Integer,LongInt,string,var record LSerialPortDeviceVc);
external function Boolean TouchScreenLook();
external function LongInt IVDefaultsClient(var record IVVc,record IVVc,LongInt,LongInt);
external updating procedure IVVc_SendToSerialPortDevices(Integer,LongInt,record IVVc,record IVVc);
remote updating procedure RraPasteInvInEDIInv(var record EDIIVVc,var LongInt);
external procedure RecordActionIV_Print(var record IVVc,string,string,Integer,Boolean);
external procedure ShowUnOkWarn(string,Integer);
remote function LongInt IVVcCheckItemQty(record IVVc);// Edit ************************** Friday, 18 April 2014 16:40:04
external function Boolean FindSubString( string , string);//Edit----------------------Dima  24.02.2015

updating procedure acCreateEDIInv(record IVVc IVp)
BEGIN
  record EDIIVVc EDIIVr;
  record CUVc CUr;
  LongInt r;
  
  CUr.Code = IVp.CustCode;
  if (ReadFirstMain(CUr,1,true)) then begin
    if (CUr.EDIFlag==0) then begin goto LacCreateEDIInv; end;
  end;
  RecordNew(EDIIVr); 
  EDIIVr.SerNr = IVp.SerNr;
  RraPasteInvInEDIInv(EDIIVr,r); 
LacCreateEDIInv:;  
  RETURN;
END;
      
global
updating function LongInt IVVcRecordSaveClient(LongInt wn,var record IVVc IVr,record IVVc IV2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  record AutoActionBlock AAb;
  record AccBlock ARAccb;
  record IVVc creditedIVr;
  Boolean testf;

//Client-Server !!!!
  if (IVr.Invalid==0) then begin
    BlockLoad(AAb);
    if (IVr.OKFlag!=0) then begin
      if (AAb.InvoicePrinting!=0) then begin
        testf = true;
        BlockLoad(ARAccb);
        if (ARAccb.CashSalesToFiscalControlUnit!=0) then begin
          switch (IVr.InvType) begin
            case kInvoiceTypeCash:
              testf = false;
            case kInvoiceTypeCreditSpecialSales: 
              goto LkInvoiceTypeCredit;
            case kInvoiceTypeCredit:
LkInvoiceTypeCredit:;
              creditedIVr.SerNr = IVr.CredInv;
              if (ReadFirstMain(creditedIVr,1,true)) then begin
                if (creditedIVr.InvType==kInvoiceTypeCash) then begin
                  testf = false;
                end;
              end;
          end;
        end;
        if (testf) then begin
          RecordActionIV_Print(IVr,"","InvForm",0,false);
        end;
      end;
      if (AAb.EDIInvoice==1) then begin
        acCreateEDIInv(IVr);
      end;
    end;
  end;

  IVVc_SendToSerialPortDevices(kSerialPortDeviceClassReceiptPrinter,Rs_insert,IVr,IV2r);
  IVVc_SendToSerialPortDevices(kSerialPortDeviceClassFiscalPrinter,Rs_insert,IVr,IV2r);
  IVVc_SendToSerialPortDevices(kSerialPortDeviceClassFiscalControlUnit,Rs_insert,IVr,IV2r);
  IVVc_StoreEInvoice(IVr,IV2r,stat);
  SetPOSWindowDisplayChange(IVr.RetValue);
  ShowUnOkWarn("IVVc",IVr.OKFlag);
  if (TouchScreenLook) then begin
//    ResetDisplayDsm;
    ReRunWindowDef(wn);
    WindowFieldGoto(wn,IVr,-1,"ivcashcommand",true);
  end;
LIVVcRecordSaveClient:;
  IVVcRecordSaveClient = res; 
  RETURN;
END;

global
updating function LongInt IVVcRecordUpdateClient(LongInt wn,var record IVVc IVr,record IVVc IV2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  record AutoActionBlock AAb;
  record AccBlock ARAccb;
  record IVVc creditedIVr;
  Boolean testf;
  record COIVVc COIVr;

//Client-Server !!!!
  if ((IV2r.Invalid==0) and (IVr.Invalid==0)) then begin
    if ((IV2r.OKFlag==0) and (IVr.OKFlag==1)) then begin
      BlockLoad(AAb);
      if (IVr.OKFlag!=0) then begin
        if (AAb.InvoicePrinting!=0) then begin
          testf = true;
          BlockLoad(ARAccb);
          COIVr.IVNr = IVr.SerNr;
          COIVr.Type = 0;
          if (ReadFirstKey("IVNr",COIVr,2,true)==false) then begin 
            if (ARAccb.CashSalesToFiscalControlUnit!=0) then begin
              switch (IVr.InvType) begin
                case kInvoiceTypeCash:
                  testf = false;
                case kInvoiceTypeCreditSpecialSales: goto LkInvoiceTypeCredit;
                case kInvoiceTypeCredit:
                  LkInvoiceTypeCredit:;
                  creditedIVr.SerNr = IVr.CredInv;
                  if (ReadFirstMain(creditedIVr,1,true)) then begin
                    if (creditedIVr.InvType==kInvoiceTypeCash) then begin
                      testf = false;
                    end;
                  end;
              end;
            end;
            if (testf) then begin
              RecordActionIV_Print(IVr,"","InvForm",0,false);
            end;
          end else begin
          end;
        end;
        if (AAb.EDIInvoice==1) then begin
          acCreateEDIInv(IVr);
        end;
      end;
    end;
  end;
  
  IVVc_SendToSerialPortDevices(kSerialPortDeviceClassReceiptPrinter,Rs_update,IVr,IV2r);
  IVVc_SendToSerialPortDevices(kSerialPortDeviceClassFiscalPrinter,Rs_update,IVr,IV2r);
  IVVc_SendToSerialPortDevices(kSerialPortDeviceClassFiscalControlUnit,Rs_update,IVr,IV2r);
  IVVc_StoreEInvoice(IVr,IV2r,stat);
  SetPOSWindowDisplayChange(IVr.RetValue);
  ShowUnOkWarn("IVVc",IVr.OKFlag);
  if (TouchScreenLook) then begin
    ResetDisplayDsm;  
    ReRunWindowDef(wn);
  end;
LIVVcRecordUpdateClient:;
  IVVcRecordUpdateClient = res; 
  RETURN;
END;

global
function LongInt IVVcRecordDefaultsClient(LongInt wn,var record IVVc IVr,record IVVc IV2r,LongInt long3,LongInt long4)
begin
  LongInt res;
  Integer level;

  res = IVDefaultsClient(IVr,IV2r,long3,long4);
  if (TouchScreenLook) then begin
//    NPTSIVCashDClassOnOpenWindowExecute(wn);
    level = StringToInt(GetWindowString(wn,"touchscreenwindowpage"));
    PutWindowString(wn,"touchscreenwindowpageprevious",level);
    IVDClass_RefreshStringList(wn,IVr);
    ResetDisplayDsm;
//    ReRunWindowDef(wn);  in IVDClassOnOpenWindow
    WindowFieldGoto(wn,IVr,-1,"ivcashcommand",true);
  end;
  IVVcRecordDefaultsClient = res;
  RETURN;
END;

global
function LongInt IVVcRecordDuplicateClient(LongInt wn,var record IVVc IVr,record IVVc IV2r,LongInt long3,LongInt long4)
begin
  LongInt res;
  record LocalMachineBlock LMb;

  BlockLoad(LMb);
  if (TouchScreenLook) then begin
    ResetDisplayDsm;
    ReRunWindowDef(wn);
    WindowFieldGoto(wn,IVr,-1,"ivcashcommand",true);
  end;
  IVVcRecordDuplicateClient = res;
  return;
end;

global
updating function LongInt ProdOperationVcRecordUpdateClient(LongInt wn,var record ProdOperationVc ProdOperationr,record ProdOperationVc ProdOperation2r,LongInt long3,LongInt long4)
begin
  LongInt res;
  
  UpdateNamedWindow("ResMonWClass");
  ProdOperationVcRecordUpdateClient = res; 
  return;
end;

function boolean GetLotteryTicket(record IVVc IVr)
begin
	row IVVc IVrw;
  integer rwcnt,i;	//Edit----------------------Dima  24.02.2015
  val sumVB;
  record INVc INr;
  boolean res;

		res = false;
		rwcnt = MatRowCnt(IVr);
		sumVB=0;
		for(i=0;i<rwcnt;i=i+1) begin
			MatRowGet(IVr,i,IVrw);
			INr.Code = IVrw.ArtCode;
			if (ReadFirstMain(INr,1,true)) then begin
					if(FindSubString("V&B",INr.DispGroups)) then begin 
						sumVB = sumVB + IVrw.Sum;
					end;
			end;
		end;	

		if (sumVB >= 2000) then begin	
			res= true;
		end;

GetLotteryTicket = res;
return;
end;



global
function LongInt IVVcRecordCheckClient(LongInt wn,record IVVc IVr,record IVVc IV2r,LongInt stat,LongInt errorcheck)
begin
  LongInt res;
  Boolean checkf,testf,testfcleancashf;
  record IVVc credIVr;
  record LocalMachineBlock LMb;
  record LSerialPortDeviceVc LSPDr;
  row IVVc IVrw;
  string 255 errstr;
  Integer err;
  record AccBlock Accb;
  integer updatemode;// Edit ************************** Friday, 18 April 2014 17:51:42

  
//no client-server calls pls
  res = 0;
  checkf = errorcheck>0;
  testf = true;
  
  if(stat==2)then begin
		if(TouchScreenLook)then begin
			if((IVr.OKFlag==1) and (IV2r.OKFlag==0))then begin
				IVr.TransDate = currentdate;
				IVr.InvDate = currentdate;
				IVr.PayDate = currentdate;
			end;
		end;
	end;

	//Edit----------LOTTERY------------Dima  24.02.2015
	if ( stat==Rs_update ) then begin	 
		if (IVr.OKFlag==1 and IV2r.OKFlag==0) then begin
				if (GetLotteryTicket(IVr)) then begin
						MessageBox(35002,"");
				end;
		end;
				
	end else begin	
		if (stat==Rs_insert and IVr.OKFlag==1)  then begin 
					if (GetLotteryTicket(IVr)) then begin
							MessageBox(35002,"");
					end;
		end;
	end;
	//END----------------------------------------------	
  
  if (IVr.InvType!=kInvoiceTypeCash) then begin
    if (IVr.InvType==kInvoiceTypeCredit or IVr.InvType==kInvoiceTypeCreditSpecialSales) then begin
      credIVr.SerNr = IVr.CredInv;
      if (ReadFirstMain(credIVr,1,true)) then begin
        if (credIVr.InvType!=kInvoiceTypeCash) then begin
          testf = false;
        end;
      end;
    end else begin
      testf = false;
    end;
  end;
  if (testf) then begin
    BlockLoad(LMb); 
    if (FindLocalSerialPortDevice(kSerialPortDeviceClassFiscalControlUnit,kSerialPortDeviceModelFiscPrinterCLEANCASHTypeA,LMb.LocalMachineCode,LSPDr)) then begin  
      testfcleancashf = false;
      switch (stat) begin
        case Rs_normal:
          testf = true;
          if (IVr.OKFlag==0) then begin testf = false; end;          
          if (testf) then begin
            testfcleancashf = true;
          end;
        case Rs_insert:
          testf = true;
          if (IVr.OKFlag==0) then begin testf = false; end;          
          if (testf) then begin
            testfcleancashf = true;
          end;
        case Rs_update:
          testf = true;
          if ((IV2r.Invalid!=0) or (IVr.Invalid!=0)) then begin
            testf = false;
          end;          
          if ((IV2r.OKFlag!=0) or (IVr.OKFlag==0)) then begin testf = false; end;
          if (testf) then begin
            testfcleancashf = true;
          end;
      end;
      if (testfcleancashf) then begin
        if (blank(LMb.LocalMachineCode)) then begin
          RecordCheckError(1770,"",-1,"SerNr");      
          res = -1;
          goto LIVVcRecordCheckClient;        
        end;
        err = TestCleanCashIdentity(true,LSPDr,LMb.TerminalID,errstr);
        if (err!=0) then begin
          RecordCheckError(err,": " & errstr,-1,"SerNr");      
          res = -1;
          goto LIVVcRecordCheckClient;        
        end;
      end;
    end else begin
      if (FindLocalSerialPortDevice(kSerialPortDeviceClassFiscalControlUnit,kSerialPortDeviceModelFiscPrinterCLEANCASHTypeC,LMb.LocalMachineCode,LSPDr)==false) then begin
        BlockLoad(Accb); 
        if (Accb.CashSalesToFiscalControlUnit!=0) then begin
          RecordCheckError(22123,"",-1,"SerNr");      
          res = -1;
          goto LIVVcRecordCheckClient;        
        end;
      end;
    end;
  end;
  // Edit Start ---------------------------------------------- Edit Start
	//Friday, 18 April 2014 16:38:12
	updatemode = 2;
	if(stat==updatemode)then begin
		if(IVr.OKFlag==1 and IV2r.OKFlag==0)then begin
			if(IVr.UpdStockFlag==0  and TouchScreenLook==true)then begin
				res = IVVcCheckItemQty(IVr);		
			end;
		end;
	end;
	 
	// Edit End ---------------------------------------------- Edit End
	       
  
LIVVcRecordCheckClient:;  
  IVVcRecordCheckClient = res;
  return;
end;
