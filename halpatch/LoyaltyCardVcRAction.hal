external updating procedure TransferPointsHist(record LoyaltyCardVc,Boolean);
external procedure NextM4Number(string,var string);
external procedure SplitAlphaDigit(string,var string,var LongInt);

global
function Boolean GetNextLoyaltyCardNr(var string nr)
begin
  Boolean res;
  record LoyaltyCardVc LoyaltyCardr;
  record SRBlock SRb;

  BlockLoad(SRb);
  NextM4Number(SRb.LastLoyaltyCardNr,nr);
  if (nonblank(nr)) then begin
    LoyaltyCardr.SerNr = nr;
    if (ReadFirstMain(LoyaltyCardr,1,true)==false) then begin
      SRb.LastLoyaltyCardNr = nr;
    end else begin
      LoyaltyCardr.SerNr = "ZZZZZZZZZZZZZZZZZZZ";
      if (ReadLastMain(LoyaltyCardr,1,false)) then begin
        NextM4Number(LoyaltyCardr.SerNr,nr);
        if (nonblank(nr)) then begin
          SRb.LastLoyaltyCardNr = nr; 
        end else begin
          nr = "1";
        end;
      end;
    end;
  end;
  GetNextLoyaltyCardNr = res;
  return;
end;

global
updating function LongInt LoyaltyCardVcRecordSave(var record LoyaltyCardVc LCr,record LoyaltyCardVc LC2r,LongInt stat,LongInt long4)
begin
  LongInt res;
  record SRBlock SRb;
  string 255 lastcardnr,curcardnr;
  LongInt lastLCnr,curLCnr;
  record PointsHistVc PointsHistr;

  if (LCr.PointsBalance!=LC2r.PointsBalance) then begin
    RecordNew(PointsHistr);
    PointsHistr.TransNr = StringToLongInt(LCr.SerNr);
    PointsHistr.FileName = "UserChange";
    PointsHistr.TransDate = CurrentDate;
    PointsHistr.CustCode = LCr.CustCode;
    PointsHistr.Location = "";        
    PointsHistr.LMCardNr = LCr.SerNr;
    PointsHistr.FWBalance = LCr.PointsBalance;
    PointsHistr.Points = LCr.PointsBalance - LC2r.PointsBalance;
    PointsHistr.User = CurrentUser;
    PointsHistr.SerNr = NextSerNr("PointsHistVc",PointsHistr.TransDate,-1,false,"");
    RecordStore(PointsHistr,false);
  end;
  BlockLoad(SRb);
  SplitAlphaDigit(SRb.LastLoyaltyCardNr,lastcardnr,lastLCnr);
  SplitAlphaDigit(LCr.SerNr,curcardnr,curLCnr);
  if (curcardnr==lastcardnr) then begin
    if (curLCnr!=lastLCnr) then begin
      SRb.LastLoyaltyCardNr = LCr.SerNr;
      BlockStore(SRb);
    end;
  end else begin
    SRb.LastLoyaltyCardNr = LCr.SerNr;
    BlockStore(SRb);
  end;
 
  LoyaltyCardVcRecordSave = res; 
  return;
end;


global
function LongInt LoyaltyCardVcRecordDefaults(var record LoyaltyCardVc LoyaltyCardr,record LoyaltyCardVc LoyaltyCard2r,LongInt stat,LongInt long4)
begin
  LongInt res;
  record LCMLevelSetBlock LCMLevelSetBl;
  row LCMLevelSetBlock LCMLevelSetrw;
  
  BlockLoad(LCMLevelSetBl);

  if (SingleUserMode) then begin
    if (GetNextLoyaltyCardNr(LoyaltyCardr.SerNr)) then begin end;
  end else begin
    LoyaltyCardr.SerNr = "";
  end;
  if (MatRowCnt(LCMLevelSetBl)>0) then begin 
    MatRowGet(LCMLevelSetBl,0,LCMLevelSetrw);
    LoyaltyCardr.LCMLevel= LCMLevelSetrw.LCMLevel;
  end;  
  
  LoyaltyCardVcRecordDefaults = res; 
  return;
end;


global
function LongInt LoyaltyCardVcRecordDuplicate(var record LoyaltyCardVc LoyaltyCardr,record LoyaltyCardVc LoyaltyCard2r,LongInt stat,LongInt long4)
begin
  LongInt res;

  if (SingleUserMode) then begin
    if (GetNextLoyaltyCardNr(LoyaltyCardr.SerNr)) then begin end;
  end else begin
    LoyaltyCardr.SerNr = "";
  end;  
  LoyaltyCardr.StartDate = CurrentDate;
  LoyaltyCardr.PointsBalance = blankval;
  LoyaltyCardr.Closed = 0;

  LoyaltyCardVcRecordDuplicate = res; 
  return;
end;

global
function LongInt LoyaltyCardVcRecordCheck(var record LoyaltyCardVc LoyaltyCardr,record LoyaltyCardVc LoyaltyCard2r,LongInt stat,LongInt long4)
begin
  LongInt res;
  record LoyaltyCardVc lLoyaltyCardr;
  record LoyaltyCardVc LoyaltyCard3r;
  record PointsHistVc PointsHistr;
  record LCMemberLevelVc LCMemberLevelr;
  record CUVc CUr;
  boolean TrHs,testf,foundf;


  res = 0;
  
  if (blank(LoyaltyCardr.CustCode)) then begin
    RecordCheckError(1058,LoyaltyCardr.CustCode,-1,"CustCode");      
    res = -1; 
    goto LLoyaltyCardVcRecordCheck;
  end else begin
    CUr.Code = LoyaltyCardr.CustCode;
    if (ReadFirstMain(CUr,1,true)==true) then begin 
      if (CUr.blockedFlag==1) then begin 
        RecordCheckError(26436,LoyaltyCardr.CustCode,-1,"CustCode");      
        res = -1; 
        goto LLoyaltyCardVcRecordCheck;
      end;  
      if (CUr.CUType!=1) then begin 
        RecordCheckError(26437,LoyaltyCardr.CustCode,-1,"CustCode");      
        res = -1; 
        goto LLoyaltyCardVcRecordCheck;
      end;
    end else begin 
      RecordCheckError(20859," " & LoyaltyCardr.CustCode,-1,"CustCode");      
      res = -1; 
      goto LLoyaltyCardVcRecordCheck;
    end;
  end;

  if (blank(LoyaltyCardr.SerNr)) then begin
    if (GetNextLoyaltyCardNr(LoyaltyCardr.SerNr)) then begin end;
    lLoyaltyCardr.SerNr = LoyaltyCardr.SerNr;
    if (ReadFirstMain(lLoyaltyCardr,1,true)) then begin
      RecordCheckError(1547,LoyaltyCardr.SerNr,-1,"Code");      
      res = -1; 
      goto LLoyaltyCardVcRecordCheck;
    end;
  end;
  // Edit Start ---------------------------------------------- Edit Start
	//Thursday, 25 September 2014 15:29:39
	if(LoyaltyCardr.Closed==0)then begin
		lLoyaltyCardr.CustCode = LoyaltyCardr.CustCode;
		TrHs = true;
		foundf = false;
		while(loopkey("CustCode",lLoyaltyCardr,1,TrHs))begin
			testf = true;
			if(lLoyaltyCardr.CustCode!=LoyaltyCardr.CustCode)then begin TrHs = false; testf = false; end;
			if(lLoyaltyCardr.SerNr==LoyaltyCardr.SerNr)then begin testf = false; end;
			if(lLoyaltyCardr.Closed==1)then begin testf = false; end;
		
			if(testf)then begin
				foundf = true;
			end;  	
		end;
	
		if(foundf)then begin
			RecordCheckError(31012,LoyaltyCardr.CustCode,-1,"CustCode");      
			res = -1; 
			goto LLoyaltyCardVcRecordCheck;
		end;
  end;
  
	// Edit End ---------------------------------------------- Edit End
	
  if (nonblank(LoyaltyCardr.ExpiryDate) and LoyaltyCardr.StartDate>LoyaltyCardr.ExpiryDate) then begin 
    RecordCheckError(22118," " & LoyaltyCardr.ExpiryDate,-1,"ExpiryDate");      
    res = -1; 
    goto LLoyaltyCardVcRecordCheck;
  end;
  if (LoyaltyCard2r.ExpiryDate!=LoyaltyCardr.ExpiryDate and nonblank(LoyaltyCard2r.ExpiryDate)) then begin
    PointsHistr.LMCardNr = LoyaltyCardr.SerNr;
    PointsHistr.CustCode = LoyaltyCardr.CustCode;
    if (ReadLastKey("CustCode",PointsHistr,2,true)) then begin
      if (PointsHistr.TransDate>=LoyaltyCardr.ExpiryDate) then begin
        RecordCheckError(22118," " & LoyaltyCardr.ExpiryDate,-1,"ExpiryDate");      
        res = -1;
        goto LLoyaltyCardVcRecordCheck;
      end;   
    end;
  end;  
  if (nonblank(LoyaltyCardr.PointsTo)) then begin
    if (LoyaltyCardr.SerNr==LoyaltyCardr.PointsTo) then begin 
      RecordCheckError(26435,"",-1,"PointsTo");      
      res = -1;
      goto LLoyaltyCardVcRecordCheck;
    end;
    LoyaltyCard3r.SerNr = LoyaltyCardr.PointsTo;
    if (ReadFirstMain(LoyaltyCard3r,1,true)==false) then begin 
      RecordCheckError(26435,"",-1,"PointsTo");      
      res = -1;
      goto LLoyaltyCardVcRecordCheck;
    end;
  end;
  if (blank(LoyaltyCardr.LCMLevel)) then begin
    RecordCheckError(1058,"",-1,"LCMLevel");      
    res = -1; 
    goto LLoyaltyCardVcRecordCheck;
  end else begin 
    LCMemberLevelr.Code = LoyaltyCardr.LCMLevel;
    if (ReadFirstMain(LCMemberLevelr,1,true)==false) then begin 
      RecordCheckError(26431,"",-1,"LCMLevel");      
      res = -1; 
      goto LLoyaltyCardVcRecordCheck;
    end;
  end;
LLoyaltyCardVcRecordCheck:;
  LoyaltyCardVcRecordCheck = res;
  RETURN;
END;

global
function LongInt LoyaltyCardVcRecordInIndex(record LoyaltyCardVc LoyaltyCardr,string indexname)
begin
  LongInt res;
  
  res = 1;
  if (LoyaltyCardr.Closed!=0) then begin 
    if (indexname=="ActSerNr") then begin res = 0; end;
    if (indexname=="ActCustCode") then begin res = 0; end;
    if (indexname=="ActCustName") then begin res = 0; end;
    if (indexname=="ActPointsTo") then begin res = 0; end;
  end;
  LoyaltyCardVcRecordInIndex = res;
  return;
end;

global
updating function LongInt LoyaltyCardVcRecordUpdateAfter(var record LoyaltyCardVc LCr,record LoyaltyCardVc LC2r,LongInt stat,LongInt long4)
begin
  LongInt res;
 
  if (blank(LC2r.PointsTo)) and (nonblank(LCr.PointsTo)) then begin
    TransferPointsHist(LCr,false);
  end else begin
    if (LC2r.PointsTo!=LCr.PointsTo) then begin
      TransferPointsHist(LC2r,true);
      TransferPointsHist(LCr,false);
    end;
  end;
  LoyaltyCardVcRecordUpdateAfter = res;
  return;
end;

global
updating function LongInt LoyaltyCardVcRecordUpdate(var record LoyaltyCardVc LCr,record LoyaltyCardVc LC2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  record PointsHistVc PointsHistr;

  if (LCr.PointsBalance!=LC2r.PointsBalance) then begin
    RecordNew(PointsHistr);
    PointsHistr.TransNr = StringToLongInt(LCr.SerNr);
    PointsHistr.FileName = "UserChange";
    PointsHistr.TransDate = CurrentDate;
    PointsHistr.CustCode = LCr.CustCode;
    PointsHistr.Location = "";        
    PointsHistr.LMCardNr = LCr.SerNr;
    PointsHistr.FWBalance = LCr.PointsBalance;
    PointsHistr.Points = LCr.PointsBalance - LC2r.PointsBalance;
    PointsHistr.User = CurrentUser;
    PointsHistr.SerNr = NextSerNr("PointsHistVc",PointsHistr.TransDate,-1,false,"");
    RecordStore(PointsHistr,false);
  end;
  
  LoyaltyCardVcRecordUpdate = res;
  return;
end;