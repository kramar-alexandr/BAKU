external procedure ExtractObj(string,var Integer,var string);
external procedure GetCurUser(var record UserVc);
external function Boolean IsDigit(string);
external procedure ReverseString(string,var string);
external function string 255 FindOffSerNr(string);
external procedure M4PadString(string,Integer,string,Boolean,var string);
external procedure NextNumber(string,var string);
external procedure FindOTforAcc(string,var string);
external function Integer CountObjects(string);
external procedure ExtractElemFromSet(string,integer,var string);
external function string 10 FindWithHoldAcc(string,string);
external function Boolean GetPMRow(string,var row PMBlock);
external function Boolean ReadFirstItem(string,var record INVc,Boolean,Boolean);
external function Boolean GetCOSAcc(string,string,string,record AccBlock,record INVc,integer,Boolean,Integer,var string,var string);
external procedure CreateSBString(Integer,string,string,string,val,Boolean,val,Boolean,var string);
external function val GetORRowReserv(LongInt,string,string,var val,var string,var string,Boolean);
external function val GetIntORRowReserv(LongInt,string,string,var val,var string,var string,var string,Boolean);


global
procedure CLCorspVc_TRObjSClass(record CLCorspVc CLCr,var record RcVc  RepSpec)
begin
  record ObjVc Objr;
  integer typeam,i,objam,j;
  string 5 otype,ctype;
  boolean res,found;
  string 100 object,typ,cobject,accnr;
    
	object = CLCr.Objects;
	accnr = CLCr.AccNumber;
    
  if (nonblank(object)) then begin
    FindOTforAcc(accnr,typ);
    if (nonblank(typ)) then begin
      typeam = CountObjects(typ); 
      objam = CountObjects(object); 
      for (i=1;i<=objam;i=i+1) begin
        ExtractElemFromSet(object,i,cobject);
        Objr.Code = cobject;
        found = false;   
        if (ReadFirstMain(Objr,1,true)) then begin
          for (j=1;j<=typeam;j=j+1) begin
            ExtractElemFromSet(typ,j,ctype);
            if (Objr.OTCode==ctype) then begin
              found = true;
              switch (j) begin
                case 1: RepSpec.f1 = cobject;
                case 2: RepSpec.f2 = cobject;
                case 3: RepSpec.f3 = cobject;
                case 4: RepSpec.f4 = cobject;
                case 5: RepSpec.f5 = cobject;
                case 6: RepSpec.AccStr = cobject;
                case 7: RepSpec.FirstAcc = cobject;
              end;
            end;
          end;
        end;
        if (found == false) then begin
          if (nonblank(RepSpec.f6)) then begin
            RepSpec.f6 = RepSpec.f6 & "," & cobject;
          end else begin
            RepSpec.f6 = cobject;
          end;
        end;
      end;
    end;
  end;    
  return;
END;


global
procedure CLInVc_TRObjSClass(record CLInVc CLInr,integer currow,var record RcVc  RepSpec)
begin
  row CLInVc CLInrw;
  record ObjVc Objr;
  integer typeam,i,objam,j;
  string 5 otype,ctype;
  boolean res,found;
  string 100 object,typ,cobject;
  row PMBlock PMrw;
  record CLCorspVc CLCr;// Edit ************************** Thursday, 30 October 2014 11:36:57
	
	
	
  if (currow>=0) then begin
    MatRowGet(CLInr,currow,CLInrw);
    object=CLInrw.Objects;
    if (nonblank(object)) then begin
      CLCr.Code = CLInrw.CorspCode;// Edit ************************** Thursday, 30 October 2014 11:35:59
			if(readfirstmain(CLCr,1,true))then begin// Edit ************************** Thursday, 30 October 2014 11:36:00
				FindOTforAcc(CLCr.AccNumber,typ);// Edit ************************** Thursday, 30 October 2014 11:36:01
			end;// Edit ************************** Thursday, 30 October 2014 11:36:01
      if (nonblank(typ)) then begin
        typeam=CountObjects(typ); 
        objam=CountObjects(object); 
        for (i=1;i<=objam;i=i+1) begin
          ExtractElemFromSet(object,i,cobject);
          Objr.Code=cobject;
          found = false;   
          if (ReadFirstMain(Objr,1,true)) then begin
            for (j=1;j<=typeam;j=j+1) begin
              ExtractElemFromSet(typ,j,ctype);
              if (Objr.OTCode==ctype) then begin
                found=true;
                switch (j) begin
                  case 1: RepSpec.f1=cobject;
                  case 2: RepSpec.f2=cobject;
                  case 3: RepSpec.f3=cobject;
                  case 4: RepSpec.f4=cobject;
                  case 5: RepSpec.f5=cobject;
                  case 6: RepSpec.AccStr=cobject;
                  case 7: RepSpec.FirstAcc=cobject;
                end;
              end;
            end;
          end;
          if (found == false) then begin
            if (nonblank(RepSpec.f6)) then begin
              RepSpec.f6=RepSpec.f6 & "," & cobject;
            end else begin
               RepSpec.f6=cobject;
            end;
          end;
        end;
      end;
    end;    
  end else begin
  	object=CLInr.Objects;
    if (nonblank(object)) then begin
      CLCr.Code = CLInr.CorspCode;// Edit ************************** Thursday, 30 October 2014 11:35:59
			if(readfirstmain(CLCr,1,true))then begin// Edit ************************** Thursday, 30 October 2014 11:36:00
				FindOTforAcc(CLCr.AccNumber,typ);// Edit ************************** Thursday, 30 October 2014 11:36:01
			end;// Edit ************************** Thursday, 30 October 2014 11:36:01
      if (nonblank(typ)) then begin
        typeam=CountObjects(typ); 
        objam=CountObjects(object); 
        for (i=1;i<=objam;i=i+1) begin
          ExtractElemFromSet(object,i,cobject);
          Objr.Code=cobject;
          found = false;   
          if (ReadFirstMain(Objr,1,true)) then begin
            for (j=1;j<=typeam;j=j+1) begin
              ExtractElemFromSet(typ,j,ctype);
              if (Objr.OTCode==ctype) then begin
                found=true;
                switch (j) begin
                  case 1: RepSpec.f1=cobject;
                  case 2: RepSpec.f2=cobject;
                  case 3: RepSpec.f3=cobject;
                  case 4: RepSpec.f4=cobject;
                  case 5: RepSpec.f5=cobject;
                  case 6: RepSpec.AccStr=cobject;
                  case 7: RepSpec.FirstAcc=cobject;
                end;
              end;
            end;
          end;
          if (found == false) then begin
            if (nonblank(RepSpec.f6)) then begin
              RepSpec.f6=RepSpec.f6 & "," & cobject;
            end else begin
               RepSpec.f6=cobject;
            end;
          end;
        end;
      end;
    end; 
  end;
  return;
end;

global
procedure CLOutVc_TRObjSClass(record CLOutVc CLOutr,integer currow,var record RcVc  RepSpec)
begin
  row CLOutVc CLOutrw;
  record ObjVc Objr;
  integer typeam,i,objam,j;
  string 5 otype,ctype;
  boolean res,found;
  string 100 object,typ,cobject;
  row PMBlock PMrw;
  record CLCorspVc CLCr;// Edit ************************** Thursday, 30 October 2014 11:37:02
		
  if (currow>=0) then begin
    MatRowGet(CLOutr,currow,CLOutrw);
    object=CLOutrw.Objects;
    if (nonblank(object)) then begin
      CLCr.Code = CLOutrw.CorspCode;
			if(readfirstmain(CLCr,1,true))then begin// Edit ************************** Thursday, 30 October 2014 11:44:37
				FindOTforAcc(CLCr.AccNumber,typ);
			end;
      if (nonblank(typ)) then begin
        typeam=CountObjects(typ); 
        objam=CountObjects(object); 
        for (i=1;i<=objam;i=i+1) begin
          ExtractElemFromSet(object,i,cobject);
          Objr.Code=cobject;
          found = false;   
          if (ReadFirstMain(Objr,1,true)) then begin
            for (j=1;j<=typeam;j=j+1) begin
              ExtractElemFromSet(typ,j,ctype);
              if (Objr.OTCode==ctype) then begin
                found=true;
                switch (j) begin
                  case 1: RepSpec.f1=cobject;
                  case 2: RepSpec.f2=cobject;
                  case 3: RepSpec.f3=cobject;
                  case 4: RepSpec.f4=cobject;
                  case 5: RepSpec.f5=cobject;
                  case 6: RepSpec.AccStr=cobject;
                  case 7: RepSpec.FirstAcc=cobject;
                end;
              end;
            end;
          end;
          if (found == false) then begin
            if (nonblank(RepSpec.f6)) then begin
              RepSpec.f6=RepSpec.f6 & "," & cobject;
            end else begin
               RepSpec.f6=cobject;
            end;
          end;
        end;
      end;
    end;    
  end else begin
  	object=CLOutr.Objects;
    if (nonblank(object)) then begin
      CLCr.Code = CLOutr.CorspCode;
			if(readfirstmain(CLCr,1,true))then begin// Edit ************************** Thursday, 30 October 2014 11:44:37
				FindOTforAcc(CLCr.AccNumber,typ);
			end;
      if (nonblank(typ)) then begin
        typeam=CountObjects(typ); 
        objam=CountObjects(object); 
        for (i=1;i<=objam;i=i+1) begin
          ExtractElemFromSet(object,i,cobject);
          Objr.Code=cobject;
          found = false;   
          if (ReadFirstMain(Objr,1,true)) then begin
            for (j=1;j<=typeam;j=j+1) begin
              ExtractElemFromSet(typ,j,ctype);
              if (Objr.OTCode==ctype) then begin
                found=true;
                switch (j) begin
                  case 1: RepSpec.f1=cobject;
                  case 2: RepSpec.f2=cobject;
                  case 3: RepSpec.f3=cobject;
                  case 4: RepSpec.f4=cobject;
                  case 5: RepSpec.f5=cobject;
                  case 6: RepSpec.AccStr=cobject;
                  case 7: RepSpec.FirstAcc=cobject;
                end;
              end;
            end;
          end;
          if (found == false) then begin
            if (nonblank(RepSpec.f6)) then begin
              RepSpec.f6=RepSpec.f6 & "," & cobject;
            end else begin
               RepSpec.f6=cobject;
            end;
          end;
        end;
      end;
    end; 
  end;
  return;
end;

global
procedure CompLocationSClassArrayOnOpen(var Array string astr,var Integer acnt,integer curcomp)
BEGIN
  record LocationVc Locationr;
  Integer i,rwcnt;
  
  if (SetCompanyCode("" & curcomp,false)) then begin
    Locationr.Code = "";
    while (LoopMain(Locationr,1,true)) begin
      astr[acnt] = Left(Locationr.Code & "    ",14);
      astr[acnt] = astr[acnt] & Locationr.Name;
      acnt = acnt + 1;
    end;
    RESETCOMPANY(curcomp);
  end;
  
  RETURN;
END;
