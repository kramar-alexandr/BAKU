external procedure ExtractObj(string,var Integer,var string);
remote procedure GetFullCurncyRate (var string,Date,var val,var val,var val,var val,var val);
external function Boolean SetInSet2(string,string);
external function roundmode SetRoundMode(Integer,Integer,Integer,Integer);
//SetLangMode(LangRussian,"RUS",0); //Edit***************************Sasha2,18:20 11.12.2014


function val ItemQtyPerDate(string artcode, date idate,string location,string serial,var val serialcost)
begin
	record ItemHistVc IHr;
	val res;
	string 50 key;
	integer keys;
	boolean TrHs,testf;
	string 100 oldartcode,oldfilename;
	longint oldsernr;
  integer oldrow,oldinvalid;
  record ItemStatusVc ISr;
  record SerBalVc SBr;
  res = 0;
  	serialcost = 0;
  	if(idate>=currentdate)then begin
  		if(nonblank(location))then begin
  			ISr.Code = artcode;
  			ISr.Location = location;
  			readfirstmain(ISr,2,true);
  			res = ISr.Instock;
  		end else begin
  			ISr.Code = artcode;
  			ISr.Location = ";;;";
  			readfirstmain(ISr,2,true);
  			res = ISr.Instock;
  		end;
  		if(nonblank(serial))then begin
  			SBr.Serial = serial;
  			SBr.Location = location;
  			SBr.Item = artcode;
  			readfirstmain(SBr,3,true);
  			res = SBr.Quant;
  			serialcost = SBr.CostPrice;
  		end;
  	end else begin
			IHr.ArtCode = artcode;
			if(nonblank(location))then begin
				IHr.Location = location;
				key = "ArtCodeLoc";
				keys = 2;
			end else begin
				key = "ArtCode";
				keys = 1;
			end;
		
			TrHs = true;
			While(loopkey(key,IHr,keys,TrHs)) begin
				testf = true;
				if (IHr.ArtCode!=artcode or IHr.Location!=location or IHr.TransDate>idate) then begin testf = false; TrHs = false; end;
				if(IHr.StockAffectf<1)then begin testf = false; end;
				if(nonblank(serial) and IHr.SerialNr!=serial)then begin testf = false; end;
			
				if(testf)then begin
					res = res + IHr.Qty;
					if(IHr.Qty>=0)then begin
						serialcost = serialcost + IHr.TotCostPrice;
					end else begin
						serialcost = serialcost - IHr.TotCostPrice;
					end;  	
				end;
			end; 
		end;
		
		
		ItemQtyPerDate = res;
		
return;
end;


function boolean CheckIfContainForbiddenBrand(string brand,string field)
begin
integer pos;
record DIVc DIr;
string 30 classfind;
boolean res;

	if (blank(brand)) then begin
		res = false;
		goto L0101;
	end;

	pos = 0;
	classfind = "";			
	ExtractObj(field,pos,classfind);
	while(nonblank(classfind)) begin
		DIr.Code = classfind;
		readfirstmain(DIr,1,true);
		if(DIr.CType=="BRAND" and SetInSet2(classfind,brand)==false)then begin
			res = true;
		end;
		ExtractObj(field,pos,classfind);
	end;
	
L0101:;	
CheckIfContainForbiddenBrand = res;	
return;
end;


global function val FindAwerageCostCur(string artcode, string location,string curcode,date todate)
begin
	record ItemHistVc IHr,IH2r;
	record PUVc PUr;
	row PUVc PUrw;
	val curcost,curval;
	boolean TrHs,testf;
	longint lastsernr;
	val fr,to1,to2,br1,br2;
	string 100 oldartcode,oldfilename;
	longint oldsernr;
  integer oldrow,oldinvalid;
  val curqty;
	
	
	if(todate>=currentdate)then begin
		curcost = 0;
		curqty = 0;
		IHr.ArtCode = artcode;
		IHr.Location = location;
		TrHs = true;
		while(loopkey("ActiveLocQty",IHr,2,TrHs))begin
			testf = true;
			if(IHr.ArtCode!=artcode)then begin TrHs=false; testf = false; end;
			if(nonblank(location) and IHr.Location!=location)then begin testf = false; end;
			if(IHr.StockAffectf==0)then begin testf=false; end;
		
			if(testf)then begin
				curcost = curcost + IHr.RemCostPriceCurncy;
				curqty = curqty + IHr.RemQty;
			end;
		end;
		curcost = curcost/curqty;
	end else begin
		curcost = 0;
		curqty = 0;
		IHr.ArtCode = artcode;
		IHr.Location = location;
		TrHs = true;
		while(loopkey("ArtCodeLoc",IHr,2,TrHs))begin
			testf = true;
			if(IHr.ArtCode!=artcode or IHr.Location!=location)then begin TrHs=false; testf = false; end;
			if(IHr.TransDate>todate)then begin TrHs=false; testf = false; end;
			if(IHr.StockAffectf==0)then begin testf=false; end;
		
			if(testf)then begin
				if(IHr.Qty>=0)then begin
					curcost = curcost + IHr.TotCostPriceCurncy;
				end else begin
					curcost = curcost - IHr.TotCostPriceCurncy;
				end;
				curqty = curqty + IHr.Qty;
			end;
		end;
		curcost = curcost/curqty;
	end;
	
	/*if(todate>=currentdate)then begin
		curcost = 0;
		curqty = 0;
		IHr.ArtCode = artcode;
		IHr.Location = location;
		TrHs = true;
		while(loopkey("ActiveLocQty",IHr,2,TrHs))begin
			testf = true;
			if(IHr.ArtCode!=artcode)then begin TrHs=false; testf = false; end;
			if(nonblank(location) and IHr.Location!=location)then begin testf = false; end;
		
			if(testf)then begin
				if(IHr.Source>0)then begin
					lastsernr = IHr.Source;
	LFind:;
					IH2r.SerNr = lastsernr;
					readfirstmain(IH2r,1,true);
					if(IH2r.Source>0)then begin
						lastsernr = IH2r.Source;
						goto LFind;
					end else begin
						if(IH2r.FileName=="PUVc")then begin
							PUr.SerNr = IH2r.TransNr;
							readfirstmain(PUr,1,true);
							matrowget(PUr,IH2r.Row,PUrw);
							curcost = curcost + PUrw.UPrice * IHr.RemQty;
							curqty = curqty + IHr.RemQty;
						end else begin
							IH2r.TransDate = IHr.FIFODate;
							IH2r.ArtCode = IHr.ArtCode;
							IH2r.FileName = "PUVc";
							IH2r.SerNr = IHr.SerNr;
							readlastkey("FNArtCode",IH2r,4,false);
							PUr.SerNr = IH2r.TransNr;
							readfirstmain(PUr,1,true);
							matrowget(PUr,IH2r.Row,PUrw);
							curcost = curcost + PUrw.UPrice * IHr.RemQty;
							curqty = curqty + IHr.RemQty;
						end;
					end;
				end else begin
					if(IHr.FileName=="PUVc")then begin
						PUr.SerNr = IHr.TransNr;
						readfirstmain(PUr,1,true);
						matrowget(PUr,IHr.Row,PUrw);
						curcost = curcost + PUrw.UPrice * IHr.RemQty;
						curqty = curqty + IHr.RemQty;
					end else begin
						if(IHr.FileName=="IVVc")then begin
							IH2r.TransNr = IHr.TransNr;
							IH2r.FileName = IHr.FileName;
							IH2r.Row = IHr.Row;
							if(readfirstkey("FNTransNr",IH2r,3,true))then begin
								if(IH2r.Invalid>0)then begin
									lastsernr = IH2r.Source;
									goto LFind;
								end else begin
									goto LFind2;
								end;
							end;
						end else begin
	LFind2:;
							IH2r.TransDate = IHr.FIFODate;
							IH2r.ArtCode = IHr.ArtCode;
							IH2r.FileName = "PUVc";
							IH2r.SerNr = IHr.SerNr;
							readlastkey("FNArtCode",IH2r,4,false);
							PUr.SerNr = IH2r.TransNr;
							readfirstmain(PUr,1,true);
							matrowget(PUr,IH2r.Row,PUrw);
							curcost = curcost + PUrw.UPrice * IHr.RemQty;
							curqty = curqty + IHr.RemQty;
						end;
					end;
				end;
			end;
		end;
		curcost = curcost/curqty;
	end else begin
		curcost = 0;
		curqty = 0;
		IHr.ArtCode = artcode;
		IHr.Location = location;
		TrHs = true;
		while(loopkey("ArtCodeLoc",IHr,2,TrHs))begin
			
			testf = true;
			if(IHr.ArtCode!=artcode or IHr.Location!=location)then begin TrHs=false; testf = false; end;
			if(IHr.TransDate>todate)then begin TrHs=false; testf = false; end;
			if(IHr.StockAffectf==0)then begin testf=false; end;
		
			if(testf)then begin
				curval = curval + IHr.RemQty;
				if(IHr.Source>0)then begin
					lastsernr = IHr.Source;
	LFind1:;
					IH2r.SerNr = lastsernr;
					readfirstmain(IH2r,1,true);
					if(IH2r.Source>0)then begin
						lastsernr = IH2r.Source;
						goto LFind1;
					end else begin
						if(IH2r.FileName=="PUVc")then begin
							PUr.SerNr = IH2r.TransNr;
							readfirstmain(PUr,1,true);
							matrowget(PUr,IH2r.Row,PUrw);
							curcost = curcost + PUrw.UPrice * IHr.Qty;
							curqty = curqty + IHr.Qty;
						end else begin
							IH2r.TransDate = IHr.FIFODate;
							IH2r.ArtCode = IHr.ArtCode;
							IH2r.FileName = "PUVc";
							IH2r.SerNr = IHr.SerNr;
							readlastkey("FNArtCode",IH2r,4,false);
							PUr.SerNr = IH2r.TransNr;
							readfirstmain(PUr,1,true);
							matrowget(PUr,IH2r.Row,PUrw);
							curcost = curcost + PUrw.UPrice * IHr.Qty;
							curqty = curqty + IHr.Qty;
						end;
					end;
				end else begin
					if(IHr.FileName=="PUVc")then begin
						PUr.SerNr = IHr.TransNr;
						readfirstmain(PUr,1,true);
						matrowget(PUr,IHr.Row,PUrw);
						curcost = curcost + PUrw.UPrice * IHr.Qty;
						curqty = curqty + IHr.Qty;
					end else begin
						IH2r.TransDate = IHr.FIFODate;
						IH2r.ArtCode = IHr.ArtCode;
						IH2r.FileName = "PUVc";
						IH2r.SerNr = IHr.SerNr;
						readlastkey("FNArtCode",IH2r,4,false);
						PUr.SerNr = IH2r.TransNr;
						readfirstmain(PUr,1,true);
						matrowget(PUr,IH2r.Row,PUrw);
						curcost = curcost + PUrw.UPrice * IHr.Qty;
						curqty = curqty + IHr.Qty;
					end;
				end;
			end;
		end;
		curcost = curcost/curqty;
		resetloop(IHr);
	end;*/
	FindAwerageCostCur = curcost;
return;
end;

global function val FindAwerageCost(string artcode, string location,date todate)
begin
	record ItemHistVc IHr,IH2r;
	record PUVc PUr;
	row PUVc PUrw;
	val curcost,curval;
	boolean TrHs,testf;
	longint lastsernr;
	val fr,to1,to2,br1,br2;
	string 100 oldartcode,oldfilename;
	longint oldsernr;
  integer oldrow,oldinvalid;
  val curqty;
  
	if(todate>=currentdate)then begin
		curcost = 0;
		curqty = 0;
		IHr.ArtCode = artcode;
		IHr.Location = location;
		TrHs = true;
		while(loopkey("ActiveLocQty",IHr,2,TrHs))begin
			testf = true;
			if(IHr.ArtCode!=artcode)then begin TrHs=false; testf = false; end;
			if(nonblank(location) and IHr.Location!=location)then begin testf = false; end;
			if(IHr.StockAffectf==0)then begin testf=false; end;
		
			if(testf)then begin
				curcost = curcost + IHr.RemCostPrice;
				curqty = curqty + IHr.RemQty;
			end;
		end;
		curcost = curcost/curqty;
	end else begin
		curcost = 0;
		curqty = 0;
		IHr.ArtCode = artcode;
		IHr.Location = location;
		TrHs = true;
		while(loopkey("ArtCodeLoc",IHr,2,TrHs))begin
			testf = true;
			if(IHr.ArtCode!=artcode or IHr.Location!=location)then begin TrHs=false; testf = false; end;
			if(IHr.TransDate>todate)then begin TrHs=false; testf = false; end;
			if(IHr.StockAffectf==0)then begin testf=false; end;
		
			if(testf)then begin
				if(IHr.Qty>=0)then begin
					curcost = curcost + IHr.TotCostPrice;
				end else begin
					curcost = curcost - IHr.TotCostPrice;
				end;
				curqty = curqty + IHr.Qty;
			end;
		end;
		curcost = curcost/curqty;
	end;
	FindAwerageCost = curcost;
return;
end;

procedure PrintInfo(record INVc INr, record ItemStatusVc ISr,string serial,val serstock,val costprice,date todate,var val total_qty,var val total_cost,var val total_price,var vector string typeval,array string typecode,Integer typescnt,boolean addclassf)
begin 
	record DIVc DIr;
	record PLVc PLr;
	integer pos,cnt,i;
  string 50 uloc,pricecur;
  val fr,to1,to2,br1,br2;
  val baseprice,cur,price,baseprice5;
  record INConsVc INCr;
	val instock,awercost,awercostcur;
	record PLDefVc PLDefr;
	record ItemHistVc IHr;
	record PUVc PUr;
	row PUVc PUrw;
  record IVVc IVr;
  row IVVc IVrw;
  roundmode rmode5;
  string 255 brand,model;

  
  rmode5 = SetRoundMode(0,kRoundingDirectionToFromPosInf,kRoundingModeHalfUp,kRoundingStep5);	//Edit----------------------Dima  17.04.2015
  
  
  if(serstock==0)then begin
  	instock = ISr.Instock;
  end else begin
  	instock = serstock;
  end;
  
	startformat(15);
		DIr.Code = INr.DispGroups;
		readfirstmain(DIr,1,true);
		PLr.ArtCode = ISr.Code;
		PLr.PLCode = "RRP";
		PLr.SerialNr = serial;
		if(readfirstmain(PLr,3,true))then begin
			if(PLr.ArtCode==ISr.Code and PLr.PLCode=="RRP" and PLr.SerialNr==serial)then begin
				price = PLr.ExVatPrice;
			end;
		end;	
		outstring(0,0,INr.Code,false);
		outstring(0,0,INr.AlternativeCode,false);
		outstring(0,0,INr.BarCode,false);
		outstring(0,0,ISr.Location,false);
		pos = 0;
		brand = "";
		model = "";
		ExtractObj(INr.DispGroups,pos,uloc);
		while (NonBlank(uloc)) begin
		  DIr.Code = uloc;
		  if (readfirstmain(DIr,1,true)) then begin
		    if (DIr.CType=="BRAND") then begin
		      brand = DIr.Name;
		    end;
		    if (DIr.CType=="MODEL") then begin
		      model = DIr.Name;
		    end;
		    if (addclassf and NonBlank(DIr.CType)) then begin //Edit***************************Sasha2,14:30 08.02.2016 {
				  if (DIr.CType=="GENDER") then begin
				    switch (Left(UpperCase(INr.MainDisp),1)) begin
				      case "A":
      				  DIr.CType = DIr.CType & "_A";
      				  typeval[DIr.CType] = INr.Code & ";" & DIr.Name;
				      case "J":
				        DIr.CType = DIr.CType & "_J";
      				  typeval[DIr.CType] = INr.Code & ";" & DIr.Name;
				      case "W":
				        DIr.CType = DIr.CType & "_W";
      				  typeval[DIr.CType] = INr.Code & ";" & DIr.Name;
				    end;
				  end else begin
				    typeval[DIr.CType] = INr.Code & ";" & DIr.Name;
				  end;
				end; //Edit***************************Sasha2,14:30 08.02.2016 }
		  end;
		  ExtractObj(INr.DispGroups,pos,uloc);
		end;
		outstring(0,0,brand,false); //Edit***************************Sasha2,16:37 18.02.2016
		if (addclassf==false) then begin
		  outstring(0,0,model,false);
		end; //Edit***************************Sasha2,16:37 18.02.2016

		/*ExtractObj(INr.DispGroups,pos,uloc);
		if(currentcompany==9)then begin
			if(uloc=="GOODS")then begin
				ExtractObj(INr.DispGroups,pos,uloc);
			end;
		end;
		DIr.Code = uloc;
		readfirstmain(DIr,1,true);
		outstring(0,0,DIr.Name,false);
		//pos = 1;
		ExtractObj(INr.DispGroups,pos,uloc);
		DIr.Code = uloc;
		readfirstmain(DIr,1,true);
		outstring(0,0,DIr.Name,false);*/
		
		
		outstring(0,0,INr.Name,false);
		if (addclassf==false) then begin //Edit***************************Sasha2,16:36 18.02.2016
  		outstring(0,0,INr.Reference,false);
  		outstring(0,0,INr.Metal,false);
  		outstring(0,0,INr.RowWeight,false);
  		outstring(0,0,INr.MajStoneDet,false);
  		/*if(addclassf)then begin
  			outstring(0,0,INr.BrcStr,false);
  			outstring(0,0,INr.Gender,false);
  		end;*/
  		if(currentcompany==13)then begin		//Edit----------------------Dima  30.04.2015
  			outstring(0,0,INr.Size,false);
  			outstring(0,0,INr.Colour,false);
  		end;	
  		outstring(0,0,INr.EKNCode,false);
  	end else begin
  	  for (i=0;i<30;i=i+1) begin //if you change "30" do it in other places having "For" loop 
		    pos = 0;
		    ExtractObj(typeval[typecode[i]],pos,uloc);
		    if (uloc==INr.Code) then begin
		      ExtractObj(typeval[typecode[i]],pos,uloc);
          outstring(0,0,uloc,false);
        end else begin
          outstring(0,0,"",false);
		    end;
		  end;
		end; //Edit***************************Sasha2,16:36 18.02.2016
		
		outstring(0,0,serial,false);// Edit ************************** Tuesday, 7 May 2013 10:13:07
		INCr.Code = INr.Code;
		if(readfirstmain(INCr,1,true))then begin
			outstring(0,0,USetStr(31180),false);
		end else begin
			outstring(0,0,"",false);
		end;
		
		outstring(0,0,instock,false);
		outstring(0,0,INr.Unittext,false);
		total_qty = total_qty + instock;
		GetFullCurncyRate(INr.LastPurchCurncyCode,todate,fr,to1,to2,br1,br2);
		if(fr==0 or to1==0)then begin
			fr=1; to1=0;
		end;
		
		awercost = 0;
		awercostcur = 0;
		awercost = FindAwerageCost(INr.Code,ISr.Location,todate);
		awercostcur = FindAwerageCostCur(INr.Code,ISr.Location,INr.LastPurchCurncyCode,todate);
		if(costprice>0 and nonblank(serial) and INr.SerNrf>0)then begin
			awercost = costprice;
			IHr.ArtCode = INr.Code;
			IHr.SerialNr = serial;
			IHr.FileName = "PUVc";
			if(readlastkey("ArtCodeSerialNr",IHr,3,true))then begin
				PUr.SerNr = IHr.TransNr;
				readfirstmain(PUr,1,true);
				matrowget(PUr,IHr.Row,PUrw);
				awercostcur = PUrw.UPrice;
			end else begin
				IHr.ArtCode = INr.Code;
				IHr.SerialNr = serial;
				IHr.FileName = "IVVc";
				readfirstkey("ArtCodeSerialNr",IHr,3,true);
				IVr.SerNr = IHr.TransNr;
				readfirstmain(IVr,1,true);
				matrowget(IVr,IHr.Row,IVrw);
				awercostcur = IVrw.Sum;
			end;
		end;
		if(usercanaction("ViewCostPrice",true))then begin
			outstring(0,0,awercostcur,false);
			outstring(0,0,awercost,false);
			outstring(0,0,awercostcur*instock,false);
			outstring(0,0,awercost*instock,false);
		end;
		total_cost = total_cost + awercost*instock;
		
		baseprice = 0;
		PLr.ArtCode = ISr.Code;
		PLr.PLCode = "RRP";
		PLr.CustCode = "";
		PLr.SerialNr = serial;
		
		if(readfirstmain(PLr,4,true))then begin
			if(PLr.ArtCode==ISr.Code and PLr.PLCode=="RRP" and PLr.SerialNr==serial)then begin
				price = PLr.ExVatPrice;
				PLDefr.Code = "RRP";
				readfirstmain(PLDefr,1,true);
				pricecur = PLDefr.CurncyCode;
				if(nonblank(PLr.CurncyCode))then begin
					pricecur = PLr.CurncyCode;
				end;
			end;
		end;		
		if(price==0)then begin
			cnt = 0;
			PLr.ArtCode = ISr.Code;
			PLr.PLCode = "RRP";
			while(loopmain(PLr,2,(PLr.ArtCode==ISr.Code)))begin
				if(PLr.ArtCode==ISr.Code)then begin
					price = price + PLr.ExVatPrice;
					cnt = cnt + 1;
					PLDefr.Code = "RRP";
					readfirstmain(PLDefr,1,true);
					pricecur = PLDefr.CurncyCode;
					if(nonblank(PLr.CurncyCode))then begin
						pricecur = PLr.CurncyCode;
					end;
				end;
			end;
			resetloop(PLr);
			price = price/cnt;
		end;
		GetFullCurncyRate(pricecur,todate,fr,to1,to2,br1,br2);
		if(fr==0 or to1==0)then begin
			fr=1; to1=1;
		end;
		baseprice = price/fr*to1;
		if(pricecur!=INr.LastPurchCurncyCode)then begin
			GetFullCurncyRate(INr.LastPurchCurncyCode,todate,fr,to1,to2,br1,br2);
			if(fr==0 or to1==0)then begin
				fr=1; to1=1;
			end;
			price = baseprice*fr/to1;
		end;
		
		if(addclassf)then begin
			baseprice5 = round(baseprice,rmode5);	//Edit----------------------Dima  17.04.2015
		end else begin
			baseprice5 = baseprice;
		end;
		
		if(currentcompany==10)then begin
			PLr.ArtCode = ISr.Code;
			PLr.PLCode = "RRP";
			PLr.CustCode = "";
		
			if(readfirstmain(PLr,3,true))then begin
				if(PLr.ArtCode==ISr.Code and PLr.PLCode=="RRP")then begin
					baseprice5 = PLr.ExVatPrice;
					baseprice = PLr.ExVatPrice;
				end;
			end;	
		end;
		
		outstring(0,0,price,false);
		outstring(0,0,baseprice5,false);
		//outstring(0,0,baseprice,false);
		outstring(0,0,price*instock,false);
		outstring(0,0,baseprice*instock,false);
		total_price = total_price + baseprice*instock;
		outstring(0,0,INr.LastPurchCurncyCode,false);
		if (addclassf) then begin //Edit***************************Sasha2,14:37 08.02.2016 {
		  for (i=30;i<typescnt;i=i+1) begin //if you change "30" do it in other places having "For" loop 
		    pos = 0;
		    ExtractObj(typeval[typecode[i]],pos,uloc);
		    if (uloc==INr.Code) then begin
		      ExtractObj(typeval[typecode[i]],pos,uloc);
          outstring(0,0,uloc,false);
        end else begin
          outstring(0,0,"",false);
		    end;
		  end;
		end; //Edit***************************Sasha2,14:37 08.02.2016 }
	endformat;

return;
end;

procedure PrintInfoWeb(record INVc INr, record ItemStatusVc ISr,string serial,val serstock,val costprice,date todate,var area webpage1,string serverip,roundmode rnd,integer dispcur,string basecurr) //Edit***************************Sasha2,15:48 21.04.2015
begin 
	record DIVc DIr;
	record PLVc PLr;
	integer pos,cnt;
  string 50 uloc,pricecur;
  val fr,to1,to2,br1,br2;
  val baseprice,cur,price;
  record INConsVc INCr;
	val instock,awercost,awercostcur;
	record PLDefVc PLDefr;
	record ItemHistVc IHr;
	record PUVc PUr;
	row PUVc PUrw;
  record IVVc IVr;
  row IVVc IVrw;
  record Attach2Vc Attachr;
	record RLinkVc RLr;
	string 255 filename,uid,res,inrcode;
	string 50 comfolder;
	record CompaniesBlock Compb;//Edit-------------------Vitalii 14:14 25.12.2015
	row CompaniesBlock Comprw;//Edit-------------------Vitalii 14:14 25.12.2015
	Boolean founddi; //Edit***************************Sasha2,10:45 25.01.2016
	
  if(serstock==0)then begin
  	instock = ISr.Instock;
  end else begin
  	instock = serstock;
  end;
  
	ExportString("<tr>");
		/*DIr.Code = INr.DispGroups;
		readfirstmain(DIr,1,true);*/
		PLr.ArtCode = ISr.Code;
		PLr.PLCode = "RRP";
		PLr.SerialNr = serial;
		if(readfirstmain(PLr,3,true))then begin
			if(PLr.ArtCode==ISr.Code and PLr.PLCode=="RRP" and PLr.SerialNr==serial)then begin
				price = PLr.ExVatPrice;
			end;
		end;
				
		ExportString("<td height=\"300\">" & INr.Code & "</td>");
		ExportString("<td>" & INr.AlternativeCode & "</td>");
		ExportString("<td>" & ISr.Location & "</td>");
		pos = 0;
		uloc = ""; 
		founddi = false; //Edit***************************Sasha2,10:13 25.01.2016 {
		ExtractObj(INr.DispGroups,pos,uloc); 
		while(nonblank(uloc)) begin
			DIr.Code = uloc;
			readfirstmain(DIr,1,true);
			if(DIr.CType=="BRAND")then begin
				ExportString("<td>" & DIr.Name & "</td>");
				pos = len(INr.DispGroups);
				founddi = true;
			end;
			ExtractObj(INr.DispGroups,pos,uloc);
		end; 
		if (founddi==false) then begin
		  ExportString("<td>" & "" & "</td>");
		end; //Edit***************************Sasha2,10:13 25.01.2016 }
		
		/*ExtractObj(INr.DispGroups,pos,uloc);
		DIr.Code = uloc;
		readfirstmain(DIr,1,true);
		ExportString("<td>" & DIr.Name & "</td>");
		//pos = 1;
		ExtractObj(INr.DispGroups,pos,uloc);
		DIr.Code = uloc;
		readfirstmain(DIr,1,true);*/

		ExportString("<td>" & INr.Name & "</td>");
		ExportString("<td>" & serial & "</td>");// Edit ************************** Tuesday, 7 May 2013 10:13:07
		ExportString("<td>" & instock & "</td>");
		GetFullCurncyRate(INr.LastPurchCurncyCode,todate,fr,to1,to2,br1,br2);
		if(fr==0 or to1==0)then begin
			fr=1; to1=0;
		end;
		awercost = 0;
		awercostcur = 0;		
		baseprice = 0;
		PLr.ArtCode = ISr.Code;
		PLr.PLCode = "RRP";
		PLr.CustCode = "";
		PLr.SerialNr = serial;
		
		if(readfirstmain(PLr,4,true))then begin
			if(PLr.ArtCode==ISr.Code and PLr.PLCode=="RRP" and PLr.SerialNr==serial)then begin
				price = PLr.ExVatPrice;
				PLDefr.Code = "RRP";
				readfirstmain(PLDefr,1,true);
				pricecur = PLDefr.CurncyCode;
				if(nonblank(PLr.CurncyCode))then begin
					pricecur = PLr.CurncyCode;
				end;
			end;
		end;
		if(price==0)then begin
			cnt = 0;
			PLr.ArtCode = ISr.Code;
			PLr.PLCode = "RRP";
			while(loopmain(PLr,2,(PLr.ArtCode==ISr.Code)))begin
				if(PLr.ArtCode==ISr.Code)then begin
					price = price + PLr.ExVatPrice;
					cnt = cnt + 1;
					PLDefr.Code = "RRP";
					readfirstmain(PLDefr,1,true);
					pricecur = PLDefr.CurncyCode;
					if(nonblank(PLr.CurncyCode))then begin
						pricecur = PLr.CurncyCode;
					end;
				end;
			end;
			resetloop(PLr);
			price = price/cnt;
		end;
		
		GetFullCurncyRate(pricecur,todate,fr,to1,to2,br1,br2);
		if(fr==0 or to1==0)then begin
			fr=1; to1=1;
		end;
		baseprice = price/fr*to1;
		if(pricecur!=INr.LastPurchCurncyCode)then begin
			GetFullCurncyRate(INr.LastPurchCurncyCode,todate,fr,to1,to2,br1,br2);
			if(fr==0 or to1==0)then begin
				fr=1; to1=1;
			end;
			price = baseprice*fr/to1;
		end;
		switch (dispcur) begin //Edit***************************Sasha2,15:50 21.04.2015 {
  		case 0: 
  		  ExportString("<td>" & price & "</td>");
  		  ExportString("<td>" & INr.LastPurchCurncyCode & "</td>");
  		case 1:
  		  ExportString("<td>" & round(baseprice,rnd) & "</td>");
  		  ExportString("<td>" & basecurr & "</td>");
		end; //Edit***************************Sasha2,15:50 21.04.2015 }
		filename = "";
		res = "";
		uid = "";
		
		BlockLoad(Compb);
		MatRowGet(Compb,currentcompany-1,Comprw);
		if (currentcompany==9) then begin
			inrcode = INr.AlternativeCode;
		end else begin
			inrcode = INr.Code;
		end;
		if (fileexists("webcust/" & Comprw.ShortName & "/" & inrcode & ".jpg")) then begin
			filename = "http://" & serverip & "/" & inrcode & ".jpg";
		end;
		if (fileexists("webcust/" & Comprw.ShortName & "/" & inrcode & ".png")) then begin
			filename = "http://" & serverip & "/" & inrcode & ".png";
		end;
		/*switch(currentcompany)begin
			case 1: if(fileexists("webcust/SWAROVSKI/" & INr.Code & ".jpg"))then begin
								filename = "http://" & serverip & "/" & INr.Code & ".jpg";
							end;
							if(fileexists("webcust/SWAROVSKI/" & INr.Code & ".png"))then begin
								filename = "http://" & serverip & "/" & INr.Code & ".png";
							end;
							
			case 2: if(fileexists("webcust/LLADRO/" & INr.Code & ".jpg"))then begin
								filename = "http://" & serverip & "/" & INr.Code & ".jpg";
							end;
							if(fileexists("webcust/LLADRO/" & INr.Code & ".png"))then begin
								filename = "http://" & serverip & "/" & INr.Code & ".png";
							end;
							
			case 3: if(fileexists("webcust/J&W/" & INr.Code & ".jpg"))then begin
								filename = "http://" & serverip & "/" & INr.Code & ".jpg";
							end;
							if(fileexists("webcust/J&W/" & INr.Code & ".png"))then begin
								filename = "http://" & serverip & "/" & INr.Code & ".png";
							end;
			
			case 4: if(fileexists("webcust/V&B/" & INr.Code & ".jpg"))then begin
								filename = "http://" & serverip & "/" & INr.Code & ".jpg";
							end;
							if(fileexists("webcust/V&B/" & INr.Code & ".png"))then begin
								filename = "http://" & serverip & "/" & INr.Code & ".png";
							end;
			case 6: if(fileexists("webcust/BACCARAT/" & INr.Code & ".jpg"))then begin
								filename = "http://" & serverip & "/" & INr.Code & ".jpg";
							end;
							if(fileexists("webcust/BACCARAT/" & INr.Code & ".png"))then begin
								filename = "http://" & serverip & "/" & INr.Code & ".png";
							end;
			case 7: if(fileexists("webcust/AMBIANCE/" & INr.Code & ".jpg"))then begin
								filename = "http://" & serverip & "/" & INr.Code & ".jpg";
							end;
							if(fileexists("webcust/AMBIANCE/" & INr.Code & ".png"))then begin
								filename = "http://" & serverip & "/" & INr.Code & ".png";
							end;
			case 8: if(fileexists("webcust/YD/" & INr.Code & ".jpg"))then begin
								filename = "http://" & serverip & "/" & INr.Code & ".jpg";
							end;
							if(fileexists("webcust/YD/" & INr.Code & ".png"))then begin
								filename = "http://" & serverip & "/" & INr.Code & ".png";
							end;
							
			case 9: if(fileexists("webcust/Creative/" & INr.AlternativeCode & ".jpg") or fileexists("webcust/Creative/" & urlencode(INr.AlternativeCode) & ".jpg"))then begin
								if(INr.AlternativeCode!=urlencode(INr.AlternativeCode))then begin
									renamefile("webcust/Creative/" & INr.AlternativeCode & ".jpg","webcust/Creative/" & urlencode(INr.AlternativeCode) & ".jpg");
								end;
								filename = "http://" & serverip & "/" & urlencode(INr.AlternativeCode) & ".jpg";
							end;
							if(fileexists("webcust/Creative/" & INr.AlternativeCode & ".png") or fileexists("webcust/Creative/" & urlencode(INr.AlternativeCode) & ".png"))then begin
								if(INr.AlternativeCode!=urlencode(INr.AlternativeCode))then begin
									renamefile("webcust/Creative/" & INr.AlternativeCode & ".png","webcust/Creative/" & urlencode(INr.AlternativeCode) & ".png");
								end;
								filename = "http://" & serverip & "/" & urlencode(INr.AlternativeCode) & ".png";
							end;
							
			case 13: if(fileexists("webcust/Carpets/" & INr.Code & ".jpg"))then begin
								filename = "http://" & serverip & "/" & INr.Code & ".jpg";
							end;
							if(fileexists("webcust/Carpets/" & INr.Code & ".png"))then begin
								filename = "http://" & serverip & "/" & INr.Code & ".png";
							end;
							
			case 14: if(fileexists("webcust/Cadenza/" & INr.Code & ".jpg"))then begin
								filename = "http://" & serverip & "/" & INr.Code & ".jpg";
							end;
							if(fileexists("webcust/Cadenza/" & INr.Code & ".png"))then begin
								filename = "http://" & serverip & "/" & INr.Code & ".png";
							end;
			case 16: if(fileexists("webcust/Xtravaganz/" & INr.Code & ".jpg"))then begin
								filename = "http://" & serverip & "/" & INr.Code & ".jpg";
							end;
							if(fileexists("webcust/Xtravaganz/" & INr.Code & ".png"))then begin
								filename = "http://" & serverip & "/" & INr.Code & ".png";
							end;
			case 17: if(fileexists("webcust/GRAFF/" & INr.Code & ".jpg"))then begin
								filename = "http://" & serverip & "/" & INr.Code & ".jpg";
							end;
							if(fileexists("webcust/GRAFF/" & INr.Code & ".png"))then begin
								filename = "http://" & serverip & "/" & INr.Code & ".png";
							end;
			case 18: if(fileexists("webcust/IDGroup/" & INr.Code & ".jpg"))then begin
								filename = "http://" & serverip & "/" & INr.Code & ".jpg";
							end;
							if(fileexists("webcust/IDGroup/" & INr.Code & ".png"))then begin
								filename = "http://" & serverip & "/" & INr.Code & ".png";
							end;
			case 19: if(fileexists("webcust/Cartier/" & INr.Code & ".jpg"))then begin
								filename = "http://" & serverip & "/" & INr.Code & ".jpg";
							end;
							if(fileexists("webcust/Cartier/" & INr.Code & ".png"))then begin
								filename = "http://" & serverip & "/" & INr.Code & ".png";
							end;
			case 20: if(fileexists("webcust/Elluxus/" & INr.Code & ".jpg"))then begin
								filename = "http://" & serverip & "/" & INr.Code & ".jpg";
							end;
							if(fileexists("webcust/Elluxus/" & INr.Code & ".png"))then begin
								filename = "http://" & serverip & "/" & INr.Code & ".png";
							end;
							
			otherwise
				if(ReadRecordLink(INr,1,Attachr,RLr))then begin
					res = Attachr.SerNr;
					uid = Attachr.UUID;
					if(nonblank(res) and nonblank(uid))then begin
						filename = "http://" & serverip & "/" & Attachr.FileName;
					end;	
				end;
		end;*/
		
		if(nonblank(filename))then begin
			ExportString("<td width=\"300\" height=\"300\" align=\"center\"><div align=\"justify\"><img src=\"" & filename & "\" width=\"100%\" height=\"100%\"/></div></td>");
		end else begin
			ExportString("<td></td>");
		end;
		
	ExportString("</tr>");

return;
end;

//Edit***************************Sasha2,10:05 19.02.2016 {
procedure SortAndClearClassifications(var array string typecode,var vector string typename,val typescnt)
begin
  vector val typelevel;
  val level,val1,val2;
  string 20 code;
  String 200 name;
  Integer i,j;
  
    if (typescnt>1) then begin
      level = 1;
      typelevel["TYPE"] = level; level = level + 1;
      typelevel["COLL_W"] = level; level = level + 1;
      typelevel["MATERIAL_W"] = level; level = level + 1;
      typelevel["GENDER_W"] = level; level = level + 1; ///////
      typelevel["DIAL"] = level; level = level + 1;
      typelevel["STRAP"] = level; level = level + 1;
      typelevel["MECHANISM"] = level; level = level + 1;
      typelevel["FUNCTIONS"] = level; level = level + 1;
      typelevel["DIAMETER"] = level; level = level + 1;
      typelevel["COLL_J"] = level; level = level + 1;
      typelevel["CATEGORY_J"] = level; level = level + 1;
      typelevel["MATERIAL_J"] = level; level = level + 1;
      typelevel["WEIGHT"] = level; level = level + 1;
      typelevel["D_CARAT"] = level; level = level + 1;
      typelevel["CENT_ST"] = level; level = level + 1;
      typelevel["PR_STONES"] = level; level = level + 1;
      typelevel["STYLE_J"] = level; level = level + 1;
      typelevel["R_SIZE"] = level; level = level + 1;
      typelevel["DIVISION"] = level; level = level + 1;
      typelevel["GENDER_J"] = level; level = level + 1; //////
      typelevel["CARAT"] = level; level = level + 1;
      typelevel["CLARITY"] = level; level = level + 1;
      typelevel["C_S"] = level; level = level + 1;
      typelevel["SHAPE_CUT"] = level; level = level + 1;
      typelevel["COLL_A"] = level; level = level + 1;
      typelevel["CATEGORY_A"] = level; level = level + 1;
      typelevel["MATERIAL_A"] = level; level = level + 1;
      typelevel["STYLE_A"] = level; level = level + 1;
      typelevel["C_M"] = level; level = level + 1;
      typelevel["GENDER_A"] = level; level = level + 1; //////
      typelevel["WARCARD"] = level; level = level + 1;
      typelevel["ART"] = level; level = level + 1;
      typelevel["SAP"] = level; level = level + 1;
      
      for (i=0;i<typescnt-1;i=i+1) begin
        for (j=0;j<typescnt-1;j=j+1) begin
          if (typelevel[typecode[j]]<1) then begin
            typename[typecode[j]] = "";
            typecode[j] = "";
          end;
          val1 = typelevel[typecode[j]];
          val2 = typelevel[typecode[j+1]];
          if ((val1>0 and val2>0 and val1>val2) or (val1<1 and val2>0)) then begin
            code = typecode[j];
            name = typename[typecode[j]];
            typecode[j] = typecode[j+1];
            typename[typecode[j]] = typename[typecode[j+1]];
            typecode[j+1] = code;
            typename[typecode[j+1]] = name;
          end;
        end;
      end;
    end;
  
  return;
end; //Edit***************************Sasha2,10:05 19.02.2016 }



//Edit----------------------Dima  23.02.2016
procedure CollectAndPrintData(record RcVc RepSpec,record INVc INr, var record TotalsRepVc Totals,var vector string typeval,array string typecode,Integer typescnt,boolean addclassf)
begin
 record ItemStatusVc ISr;
 record SerBalVc SBr;
 boolean TrHs2,testf2;
 date todate;
 
  todate = RepSpec.d1;
  if(blank(todate))then begin
  	todate = currentdate;
  end;
  

	ISr.Code = INr.Code;
	TrHs2 = true;
	while(loopmain(ISr,1,TrHs2)) begin
		testf2 = true;
		if(ISr.Code!=INr.Code)then begin testf2 = false; TrHs2 = false; end;
		if(nonblank(RepSpec.f2) and ISr.Location!=RepSpec.f2)then begin testf2 = false; end;
		if(ISr.Location==";;;")then begin testf2 = false; end;
		if(testf2)then begin
			SBr.CostPrice = 0;
			ISr.Instock = ItemQtyPerDate(ISr.Code,todate,ISr.Location,"",SBr.CostPrice);
		end;
		if(ISr.Instock<=0)then begin testf2 = false; end;
	
		if(testf2)then begin
			if(INr.SerNrf==0)then begin
				PrintInfo(INr,ISr,"",0,0,todate,Totals.TotQuant,Totals.TotCost,Totals.TotPrice,typeval,typecode,typescnt,addclassf);
			end else begin
				SBr.Item = INr.Code;
				SBr.Location = ISr.Location;
				while(loopmain(SBr,2,(SBr.Item==INr.Code and SBr.Location==ISr.Location))) begin
					if(SBr.Item==INr.Code and SBr.Location==ISr.Location)then begin
						ISr.Instock = ItemQtyPerDate(ISr.Code,todate,ISr.Location,SBr.Serial,SBr.CostPrice);
						
						if(ISr.Instock>0)then begin
							PrintInfo(INr,ISr,SBr.Serial,SBr.Quant,SBr.CostPrice,todate,Totals.TotQuant,Totals.TotCost,Totals.TotPrice,typeval,typecode,typescnt,addclassf);
						end;
					end;
				end;
				resetloop(SBr);
			end;
			
		end;
		
	end;

end;




global procedure ItemStockStatExtRn(record RcVc RepSpec)
begin
  record ItemStatusVc ISr;
  record PLVc PLr;
  string 100 item,location,findkey,class;
  record INVc INr;
  boolean TrHs,testf,TrHs1,testf1,TrHs2,testf2;
  record DIVc DIr;
  integer findint;
  record UserVc User;
  boolean userlocation;
  integer pos;
  string 50 uloc;
  record SerBalVc SBr;
  date todate;
  //val total_qty;
  //val total_cost,total_price;
  string 200 classfind,model,brand,basecur;
  record BaseCurBlock bascur;
  Boolean addclassf; //Edit***************************Sasha2,13:58 08.02.2016
  vector string 20 typeval; //Edit***************************Sasha2,14:11 08.02.2016
  array string 20 typecode; //Edit***************************Sasha2,14:11 08.02.2016
  vector string 200 typename; //Edit***************************Sasha2,14:11 08.02.2016
  record DiCheckBlock DiCb; //Edit***************************Sasha2,14:10 08.02.2016
  row DiCheckBlock DiCbw; //Edit***************************Sasha2,14:10 08.02.2016
  integer i,rwcnt,typescnt; //Edit***************************Sasha2,14:11 08.02.2016
  record CTypeVc CTyper; //Edit***************************Sasha2,14:13 08.02.2016
	array integer companies;
	record CompaniesBlock Compb;
	row CompaniesBlock Comprw;
	integer oldcompany;
	record TotalsRepVc Totals;
	
	
	if (RepSpec.UsedOnly == 0) then begin
		companies[0] = CurrentCompany;
	end else begin			//All J&W companies
		companies[0] = 3;
		companies[1] = 17;
		companies[2] = 19;
		companies[3] = 20;
		companies[4] = 21;
		companies[5] = 22;
	end;
	
	oldcompany = CurrentCompany;
	BlockLoad(Compb);	

  
  BlockLoad(bascur);
  basecur = bascur.BaseCur1;
  item = RepSpec.f1;
  location = RepSpec.f2;
  todate = RepSpec.d1;
  
  if (currentcompany==3 or currentcompany==17 or currentcompany==19 or currentcompany==20) then begin
    addclassf = true; //Edit***************************Sasha2,14:00 08.02.2016
    typescnt = 0;
	  BlockLoad(DiCb);
    rwcnt = MatRowCnt(DiCb);  
    for (i=0;i<rwcnt;i=i+1) begin
      MatRowGet(DiCb,i,DiCbw);
      if (NonBlank(DiCbw.DiType)) then begin
        DIr.Code = DiCbw.DiCode;
        ReadFirstMain(DIr,1,true);
        DiCbw.DiType = DIr.CType & "," & DiCbw.DiType;
        pos = 0;
  			ExtractObj(DiCbw.DiType,pos,uloc);
  			while (nonblank(uloc)) begin
  				if (blank(typeval[uloc])) then begin
    				CTyper.Code = uloc;
    				if (ReadFirstMain(CTyper,1,true)) then begin
    				  if (CTyper.Code=="GENDER") then begin
    				    switch (UpperCase(Left(DiCbw.DiCode,1))) begin
    				      case "A":
    				        if (blank(typeval[CTyper.Code & "_A"])) then begin
      				        typeval[CTyper.Code & "_A"] = ".";
            				  typecode[typescnt] = CTyper.Code & "_A";
            				  typename[typecode[typescnt]] = "ACCESSORIES " & CTyper.Comment;
            				  typescnt = typescnt + 1;  
    				        end;
    				      case "J":
    				        if (blank(typeval[CTyper.Code & "_J"])) then begin
      				        typeval[CTyper.Code & "_J"] = ".";
            				  typecode[typescnt] = CTyper.Code & "_J";
            				  typename[typecode[typescnt]] = "JEWELRY " & CTyper.Comment;
            				  typescnt = typescnt + 1;  
    				        end;
    				      case "W":
    				        if (blank(typeval[CTyper.Code & "_W"])) then begin
      				        typeval[CTyper.Code & "_W"] = ".";
            				  typecode[typescnt] = CTyper.Code & "_W";
            				  typename[typecode[typescnt]] = "WATCH " & CTyper.Comment;
            				  typescnt = typescnt + 1;
    				        end;
    				    end;
    				  end else begin
      				  typeval[CTyper.Code] = ".";
      				  typecode[typescnt] = CTyper.Code;
      				  typename[CTyper.Code] = CTyper.Comment;
      				  typescnt = typescnt + 1;  
    				  end;
    				end;
  				end;
  				ExtractObj(DiCbw.DiType,pos,uloc);
  			end;
      end;
    end;
    SortAndClearClassifications(typecode,typename,typescnt);
  end;
  
  
  startreportnoheaderjob(USetStr(31179));
  
  
  if(blank(todate))then begin
  	todate = currentdate;
  end;
  
  userlocation = false;
  User.Code = currentuser;
  if(readfirstmain(User,1,true))then begin
  	if(nonblank(User.UserLocations) and usercanaction("AllowReportWithUserLoc",false))then begin
  		userlocation = true;
  		pos = 0;
			ExtractObj(User.UserLocations,pos,uloc);
			while (nonblank(uloc)) begin
				if(uloc==location)then begin
					userlocation = false;
				end;
				ExtractObj(User.UserLocations,pos,uloc);
			end;
  	end;
  	
  	if (nonblank(User.Brand)) then begin		//Edit----------------------Dima  24.02.2016
			if (blank(RepSpec.f4)) then begin
				RepSpec.f4 = FirstInRange(User.Brand,40);
			end;
			if (SetInSet2(RepSpec.f4,User.Brand)==false or CheckIfContainForbiddenBrand(User.Brand,RepSpec.f3)) then begin
					outstring(50,0,USetStr(35060),false);
					goto LItemStockStatExtRn;
			end;
		end;
  end;
  
  
  //total_qty = 0;
  //total_cost = 0;
  //total_price = 0;
  
  if(userlocation)then begin
  	startformat(15);
			outstring(50,0,USetStr(31014),false);
  	endformat;
  end else begin
		startformat(15);
			outstring(0,0,USetStr(31042),false); //Kod dlia sistemy Hansa
			outstring(0,0,USetStr(31043),false); //Kod postavshchika
			outstring(0,0,"EAN code",false);
			outstring(0,0,USetStr(31103),false); //Sklad
			outstring(0,0,USetStr(31044),false); //brand
			if (addclassf==false) then begin //Edit***************************Sasha2,16:37 18.02.2016
			  outstring(0,0,USetStr(31120),false); //model
			end; //Edit***************************Sasha2,16:37 18.02.2016
			outstring(0,0,USetStr(31204),false); //name
			if (addclassf==false) then begin //Edit***************************Sasha2,16:37 18.02.2016
  			outstring(0,0,USetStr(31045),false); //Kollectsia
  			outstring(0,0,USetStr(31047),false); //Tip metalla
  			outstring(0,0,USetStr(31178),false); //Ves
  			outstring(0,0,USetStr(31048),false); //Karatnoct
  			/*if(addclassf)then begin
  				outstring(0,0,USetStr(31049),false); //Braslet/remeshok
  				outstring(0,0,USetStr(31050),false); //Tsvet tsyferblata
  			end;*/
  			if(currentcompany==13)then begin		//Edit-----------------------------Dima  30.04.2015
  				outstring(0,0,USetStr(31320),false); //Tsvet
  				outstring(0,0,USetStr(35007),false); //Kvadratura
  			end;		
  			outstring(0,0,USetStr(31177),false); //Dopolnitelno	
  		end else begin
  		  for (i=0;i<30;i=i+1) begin //if you change "30" do it in other places having "For" loop 
  		    outstring(0,0,typename[typecode[i]],false);
  		  end;
			end; //Edit***************************Sasha2,16:37 18.02.2016
			outstring(0,0,USetStr(31051),false); //Seriinyi nomer
			outstring(0,0,USetStr(31176),false); //Tip prihoda
			outstring(0,0,USetStr(31121),false); //Kolichestvo
			outstring(0,0,USetStr(31175),false); //Ed.izm.
			if(currentcompany!=10)then begin
				if(usercanaction("ViewCostPrice",true))then begin
					outstring(0,0,USetStr(31053),false);
					outstring(0,0,USetStr(31055) & basecur,false);
					outstring(0,0,USetStr(31056),false);
					outstring(0,0,USetStr(31058) & basecur,false);
				end;
				outstring(0,0,USetStr(31059),false);
				outstring(0,0,USetStr(31061) & basecur,false);
				outstring(0,0,USetStr(31062),false);
				outstring(0,0,USetStr(31064) & basecur,false);
			end else begin
				outstring(0,0,USetStr(31053),false);
				outstring(0,0,USetStr(31171),false);
				outstring(0,0,USetStr(31056),false);
				outstring(0,0,USetStr(31172),false);
				outstring(0,0,USetStr(31059),false);
				outstring(0,0,USetStr(31173),false);
				outstring(0,0,USetStr(31062),false);
				outstring(0,0,USetStr(31174),false);
			end;
			outstring(0,0,USetStr(31169),false);
			if (addclassf) then begin //Edit***************************Sasha2,14:00 08.02.2016 {
			  for (i=30;i<typescnt;i=i+1) begin //if you change "30" do it in other places having "For" loop 
  		    outstring(0,0,typename[typecode[i]],false);
  		  end;
			end; //Edit***************************Sasha2,14:01 08.02.2016 }
			
		endformat;

		if(nonblank(item))then begin
			ISr.Code = item;
			TrHs = true;
			INr.Code = item;
			if (ReadFirstMain(INr,1,true)) then begin		//Edit----------------------Dima  27.04.2015
			
    		if(RepSpec.flags[1]==1 and INr.ConsgType==0)then begin TrHs = false; end;
    		if(RepSpec.flags[2]==1 and INr.ConsgType==1)then begin TrHs = false; end;
    		if(RepSpec.flags[3]==1 and INr.ConsgType==2)then begin TrHs = false; end;

    		if (nonblank(User.Brand) and CheckIfContainForbiddenBrand(User.Brand,INr.DispGroups)) begin TrHs = false; end;	
    		
    		if (TrHs) then begin
						for (i=0;i<companies.length;i=i+1) begin
							//MatRowGet(Compb,companies[i]-1,Comprw);  
							if (SetCompany(companies[i],false)) then begin
								CollectAndPrintData(RepSpec,INr,Totals,typeval,typecode,typescnt,addclassf);
							//	LogText(0,INr.Code & "    " & Comprw.ShortName );							
							end;
						end;
				end;   
				
    	end;			
		end else begin
			INr.DispGroups = "";//= RepSpec.f3;
			class = RepSpec.f3;
			TrHs1 = true;

			while(loopkey("MyDispGroups",INr,1,TrHs1)) begin
			
				testf1 = true;
				if(nonblank(RepSpec.f3))then begin
					testf1 = SetInSet2(class,INr.DispGroups);
				end;
				if(INr.Terminated!=0)then begin testf1 = false; end;
				
    		if(RepSpec.flags[1]==1 and INr.ConsgType==0)then begin testf1 = false; end;	//Edit----------------------Dima  27.04.2015
    		if(RepSpec.flags[2]==1 and INr.ConsgType==1)then begin testf1 = false; end;
    		if(RepSpec.flags[3]==1 and INr.ConsgType==2)then begin testf1 = false; end;		//Edit----------------------Dima  27.04.2015			
				
				if(testf1)then begin
					if(nonblank(RepSpec.f4) or nonblank(RepSpec.f5))then begin
						brand = "";
						model = "";
						pos = 0;
						classfind = "";
						ExtractObj(INr.DispGroups,pos,classfind);
						while(nonblank(classfind)) begin
							DIr.Code = classfind;
							readfirstmain(DIr,1,true);
							if(DIr.CType=="BRAND")then begin
								brand = DIr.Code;
							end;
							if(DIr.CType=="MODEL")then begin
								model = DIr.Code;
							end;
							ExtractObj(INr.DispGroups,pos,classfind);
						end;
						if(nonblank(RepSpec.f4) and brand!=RepSpec.f4)then begin
							testf1 = false;
						end;
						if(nonblank(RepSpec.f5) and model!=RepSpec.f5)then begin
							testf1 = false;
						end;
					end;
				end;

				if(testf1)then begin				
						for (i=0;i<companies.length;i=i+1) begin
							//MatRowGet(Compb,companies[i]-1,Comprw);  
							if (SetCompany(companies[i],false)) then begin
								CollectAndPrintData(RepSpec,INr,Totals,typeval,typecode,typescnt,addclassf);
							//	LogText(0,INr.Code & "    " & Comprw.ShortName );							
							end;
						end;
						ResetCompany(oldcompany);	
				end;
			end;
			resetloop(INr);
		end;
	
		startformat(15);
			outstring(0,0,"",false);
			outstring(0,0,"",false);
			outstring(0,0,"",false);
			outstring(0,0,"",false);
			outstring(0,0,"",false);
			if (addclassf==false) then begin //Edit***************************Sasha2,16:37 18.02.2016
			  outstring(0,0,"",false);
			end; //Edit***************************Sasha2,16:37 18.02.2016
			outstring(0,0,"",false);
			if (addclassf==false) then begin //Edit***************************Sasha2,16:37 18.02.2016
  			outstring(0,0,"",false);
			  outstring(0,0,"",false);
  			outstring(0,0,"",false);
  			outstring(0,0,"",false);
  			/*if(addclassf)then begin
  				outstring(0,0,"",false);
  				outstring(0,0,"",false);
  			end;*/
  			if(currentcompany==13)then begin	//Edit----------------------Dima  30.04.2015
  				outstring(0,0,"",false);
  				outstring(0,0,"",false);
  			end;			
  			outstring(0,0,"",false);
  		end else begin
  		  for (i=0;i<30;i=i+1) begin //if you change "30" do it in other places having "For" loop 
  		    outstring(0,0,"",false);
  		  end;
			end; //Edit***************************Sasha2,16:37 18.02.2016
			outstring(0,0,"",false);
			outstring(0,0,USetStr(31074),false);
			outstring(0,0,Totals.TotQuant,false);
			outstring(0,0,"",false);
			if(usercanaction("ViewCostPrice",true))then begin
				outstring(0,0,"",false);
				outstring(0,0,"",false);
				outstring(0,0,USetStr(31075),false);
				outstring(0,0,Totals.TotCost,false);
			end;
			outstring(0,0,"",false);
			outstring(0,0,"",false);
			outstring(0,0,USetStr(31064) & basecur,false);
			outstring(0,0,Totals.TotPrice,false);
		endformat;
		
  end;
  
  LItemStockStatExtRn:;
  
  endjob;
  
  
return;
end;

global procedure ItemStockStatExtRClassReportDefaults(integer wn)
begin
	record RcVc RepSpec;
	record UserVc User;
	integer i;
	string 20 loc;
	
	getwindowrecord(wn,RepSpec);
	User.Code = currentuser;
	if(readfirstmain(User,1,true))then begin
		if(nonblank(User.UserLocations) and usercanaction("AllowReportWithUserLoc",false))then begin
			i = 0;
			ExtractObj(User.UserLocations,i,loc);
			RepSpec.f2 = loc;
			RepSpec.d1 = CurrentDate;
			putwindowrecord(wn,RepSpec);
		end;
	end;
return;
end;

global procedure ItemStockStatExtManRClassReportDefaults(integer wn)
begin
	record RcVc RepSpec;
	record UserVc User;
	integer i;
	string 20 loc;
	
	getwindowrecord(wn,RepSpec);
	User.Code = currentuser;
	if(readfirstmain(User,1,true))then begin
		if(nonblank(User.UserLocations) and usercanaction("AllowReportWithUserLoc",false))then begin
			i = 0;
			ExtractObj(User.UserLocations,i,loc);
			RepSpec.f2 = loc;
			RepSpec.d1 = CurrentDate;
			putwindowrecord(wn,RepSpec);
		end;
	end;
return;
end;


global procedure ItemStockStatExtWebRn(record RcVc RepSpec,var area webpage1,string serverip)
begin
  record ItemStatusVc ISr;
  record PLVc PLr;
  string 100 item,location,findkey,class;
  record INVc INr;
  boolean TrHs,testf,TrHs1,testf1,TrHs2,testf2;
  record DIVc DIr;
  integer findint;
  record UserVc User;
  boolean userlocation;
  integer pos,i;
  string 50 uloc;
  record SerBalVc SBr;
  date todate;
  string 200 classfind,model,brand;
  roundmode rnd; //Edit***************************Sasha2,15:45 21.04.2015
  record BaseCurBlock bcur; //Edit***************************Sasha2,14:02 27.04.2015
  integer oldcompany;
  array integer companies;
  
  
	if (RepSpec.UsedOnly == 0) then begin
		companies[0] = CurrentCompany;
	end else begin			//All J&W companies
		companies[0] = 3;
		companies[1] = 17;
		companies[2] = 19;
		companies[3] = 20;
		companies[4] = 21;
		companies[5] = 22;
	end;
	
	oldcompany = CurrentCompany;  
  
  item = RepSpec.f1;
  location = RepSpec.f2;
  todate = RepSpec.d1;
  
  if(blank(todate))then begin
  	todate = currentdate;
  end;


  User.Code = currentuser;
  if(readfirstmain(User,1,true))then begin  	
  	if (nonblank(User.Brand)) then begin		//Edit----------------------Dima  24.02.2016
			if (blank(RepSpec.f4)) then begin
				RepSpec.f4 = FirstInRange(User.Brand,40);
			end;
			if (SetInSet2(RepSpec.f4,User.Brand)==false or CheckIfContainForbiddenBrand(User.Brand,RepSpec.f3)) then begin
					messagebox(0,USetStr(35060));
					goto LItemStockStatExtWebRn;
			end;
		end;
  end;  
  
  
  BlockLoad(bcur); //Edit***************************Sasha2,14:03 27.04.2015
  rnd = DefaultValRoundoff; //Edit***************************Sasha2,15:47 21.04.2015
  rnd.decimals = 0; //Edit***************************Sasha2,15:47 21.04.2015
	rnd.step = kRoundingStep5; //Edit***************************Sasha2,15:47 21.04.2015
	rnd.mode = kRoundingModeHalfUp; //Edit***************************Sasha2,15:47 21.04.2015
  
  userlocation = false;

  
	ExportString("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">");
	ExportString("<html xmlns=\"http://www.w3.org/1999/xhtml\">");
	ExportString("<head>");
	ExportString("<meta http-equiv=\"content-type\" content=\"text/html\" charset=\"utf-8\"> ");
	ExportString("<title>" & USetStr(31168) & "</title>");
	ExportString("</head>");
	ExportString("<body>");
	ExportString("<div id=\"wrapper\">");
	ExportString("<table align=\"left\" border=\"1\">");
  
  if(userlocation)then begin
  	startformat(15);
			messagebox(0,USetStr(31014));
  	endformat;
  end else begin
		ExportString("<tr>");
		ExportString("<td>" & USetStr(31042) & "</td>");
		ExportString("<td>" & USetStr(31042) & "</td>");
		ExportString("<td>" & USetStr(31103) & "</td>");
		ExportString("<td>" & USetStr(31044) & "</td>");
		ExportString("<td>" & USetStr(31204) & "</td>");
		ExportString("<td>" & USetStr(31051) & "</td>");
		ExportString("<td>" & USetStr(31121) & "</td>");
		ExportString("<td>" & USetStr(31059) & "</td>");
		ExportString("<td>" & USetStr(31169) & "</td>");
		ExportString("<td>" & USetStr(31170) & "</td>");
		ExportString("</tr>");
		if(nonblank(item))then begin
		
			for (i=0;i<companies.length;i=i+1) begin	//Edit----------------------Dima  25.02.2016
		  	if (SetCompany(companies[i],false)) then begin			
							ISr.Code = item;
							TrHs = true;
							while(loopmain(ISr,1,TrHs)) begin
								testf = true;
								INr.Code = ISr.Code;								
								if (readfirstmain(INr,1,true)) then begin
									if (nonblank(User.Brand) and CheckIfContainForbiddenBrand(User.Brand,INr.DispGroups)) begin TrHs = false; end;
								end;
																
								if(ISr.Code!=item)then begin TrHs = false; testf = false; end;
								if(ISr.Location==";;;")then begin testf = false; end;
								if(nonblank(location) and location!=ISr.Location)then begin testf = false; end;
								if(testf)then begin
									ISr.Instock = ItemQtyPerDate(ISr.Code,todate,ISr.Location,"",SBr.CostPrice);
								end;
								if(ISr.Instock==0)then begin testf = false; end;
							
								if(testf)then begin
									INr.Code = ISr.Code;
									readfirstmain(INr,1,true);
									if(INr.SerNrf==0)then begin
										PrintInfoWeb(INr,ISr,"",0,0,todate,webpage1,serverip,rnd,RepSpec.ArtMode,bcur.BaseCur1); //Edit***************************Sasha2,15:48 21.04.2015
									end else begin
										SBr.Item = INr.Code;
										SBr.Location = ISr.Location;
										while(loopmain(SBr,2,(SBr.Item==INr.Code and SBr.Location==ISr.Location))) begin
											if(SBr.Item==INr.Code and SBr.Location==ISr.Location)then begin
												ISr.Instock = ItemQtyPerDate(ISr.Code,todate,ISr.Location,SBr.Serial,SBr.CostPrice);
												if(ISr.Instock>0)then begin
													PrintInfoWeb(INr,ISr,SBr.Serial,ISr.Instock,SBr.CostPrice,todate,webpage1,serverip,rnd,RepSpec.ArtMode,bcur.BaseCur1); //Edit*********************Sasha2,15:48 21.04.		**	20	****15
												end;
											end;
										end;
										resetloop(SBr);
									end;
								end;
							end;
							resetloop(ISr);
				end;			
			end;
			
			
		end else begin
		
			
		
			INr.DispGroups = "";//= RepSpec.f3;
			class = RepSpec.f3;
			TrHs1 = true;
			while(loopkey("MyDispGroups",INr,1,TrHs1)) begin
				testf1 = true;
				testf1 = SetInSet2(class,INr.DispGroups);
				if(INr.Terminated!=0)then begin testf1 = false; end;
			
				if(testf1)then begin
					if(nonblank(RepSpec.f4) or nonblank(RepSpec.f5))then begin
						brand = "";
						model = "";
						pos = 0;
						classfind = "";
						ExtractObj(INr.DispGroups,pos,classfind);
						while(nonblank(classfind)) begin
							DIr.Code = classfind;
							readfirstmain(DIr,1,true);
							if(DIr.CType=="BRAND")then begin
								brand = DIr.Code;
							end;
							if(DIr.CType=="MODEL")then begin
								model = DIr.Code;
							end;
							if (NonBlank(brand) and NonBlank(model)) then begin
							  pos = len(INr.DispGroups); //Edit***************************Sasha2,10:09 25.01.2016
							end;
							ExtractObj(INr.DispGroups,pos,classfind);
						end;
						if(nonblank(RepSpec.f4) and brand!=RepSpec.f4)then begin
							testf1 = false;
						end;
						if(nonblank(RepSpec.f5) and model!=RepSpec.f5)then begin
							testf1 = false;
						end;
					end;
				end;
				
				if(testf1)then begin
				
					for (i=0;i<companies.length;i=i+1) begin
						if (SetCompany(companies[i],false)) then begin
								ISr.Code = INr.Code;
								TrHs2 = true;
								while(loopmain(ISr,1,TrHs2)) begin
									testf2 = true;
									if(ISr.Code!=INr.Code)then begin testf2 = false; TrHs2 = false; end;
									if(nonblank(RepSpec.f2) and ISr.Location!=RepSpec.f2)then begin testf2 = false; end;
									if(ISr.Location==";;;")then begin testf2 = false; end;
									if(testf2)then begin
										SBr.CostPrice = 0;
										ISr.Instock = ItemQtyPerDate(ISr.Code,todate,ISr.Location,"",SBr.CostPrice);
									end;
									if(ISr.Instock<=0)then begin testf2 = false; end;
								
									if(testf2)then begin
										if(INr.SerNrf==0)then begin
											PrintInfoWeb(INr,ISr,"",0,0,todate,webpage1,serverip,rnd,RepSpec.ArtMode,bcur.BaseCur1); //Edit***************************Sasha2,15:49 21.04.2015
										end else begin
											SBr.Item = INr.Code;
											SBr.Location = ISr.Location;
											while(loopmain(SBr,2,(SBr.Item==INr.Code and SBr.Location==ISr.Location))) begin
												if(SBr.Item==INr.Code and SBr.Location==ISr.Location)then begin
													ISr.Instock = ItemQtyPerDate(ISr.Code,todate,ISr.Location,SBr.Serial,SBr.CostPrice);
													if(ISr.Instock>0)then begin
														PrintInfoWeb(INr,ISr,SBr.Serial,SBr.Quant,SBr.CostPrice,todate,webpage1,serverip,rnd,RepSpec.ArtMode,bcur.BaseCur1); //Edit****	**********	**********	***Sasha2,15:49 21.04.2015
													end;
												end;
											end;
											resetloop(SBr);
										end;
									end;
								end;
								resetloop(ISr);
						end;
					end;
					ResetCompany(oldcompany);	
					
				end;
			end;
			resetloop(INr);
		end;
		ExportString("</table>");
		ExportString("</div>");
		ExportString("</body>");
		ExportString("</html>");
  end;
  
  LItemStockStatExtWebRn:;
  
return;
end;