external procedure ExtractObj(string,var Integer,var string);

SetLangMode(LangRussian,"RUS",0);

global updating procedure MarketingRn(record RcVc RepSpec)
begin
date sd,ed;
record MarketingVc MRr;
record IVVc IVr;
record CUVc CUr;
boolean findf, TrHs, testf;
val totalqty, totalcost, totalcost2;
record LocationVc Locr, Loc2r;
string 20 location;
string 255 serNum,phoner,ph;
integer i, pos;
array integer positions;

	positions[0] = 0;
	positions[1] = 5;
	positions[2] = 10;
	positions[3] = 15;
	positions[4] = 20;
	positions[5] = 25;
	positions[6] = 30;
	positions[7] = 35;
	positions[8] = 40;
	positions[9] = 45;
	positions[10] = 50;
	positions[11] = 55;
	positions[12] = 60;
	positions[13] = 65;
	positions[14] = 70;
	positions[15] = 75;
	positions[16] = 80;
	positions[17] = 85;
	positions[18] = 90;
	positions[19] = 95;
	positions[20] = 100;
	positions[21] = 105;
	positions[22] = 110;
	
	sd = RepSpec.sStartDate;
  ed = RepSpec.sEndDate;
  totalcost = 0;
  totalcost2 = 0;
  
  location = RepSpec.f1;

	startreportnoheaderjob("Отчет по фиксации визитов");
	
	StartFormat(15);
		outstring(0,0,"Отчет по фиксации визитов",false);
	endformat;
	
	StartFormat(15);
		outstring(0,0,"Период:",false);
		outstring(40,0,RepSpec.sStartDate & ":" & RepSpec.sEndDate,false);
	endformat;
	StartFormat(15);
		outstring(0,0,"Магазин:",false);
		if(nonblank(RepSpec.f1))then begin
			outstring(40,0,RepSpec.f1,false);
		end else begin
			outstring(40,0,"По всем",false);
		end;
	endformat;
	Black_Divider(0,1);
		
	StartFormat(15);
		outstring(positions[0],0,"Номер",false);
		//if(nonblank(RepSpec.f1))then begin
		outstring(positions[1],0,"Магазин (склад)",false);
		//end;
		outstring(positions[2],0,"Дата посещения",false);
		outstring(positions[3],0,"Время посещения",false);
		outstring(positions[4],0,"Консультант",false);
		outstring(positions[5],0,"Кол-во человек",false);
		outstring(positions[6],0,"Дов.лицо",false);
		outstring(positions[7],0,"Пол",false);
		outstring(positions[8],0,"Возраст",false);
		outstring(positions[9],0,"Гражданство",false);
		outstring(positions[10],0,"Откуда узнали",false);
		outstring(positions[11],0,"Причина посещения",false);
		outstring(positions[12],0,"Результат посещения",false);
		outstring(positions[13],0,"Тип продажи",false);
		outstring(positions[14],0,"Использовалась карта",false);
		outstring(positions[15],0,"Продано на сумму(AZN)",false);
		outstring(positions[16],0,"Код клиента",false);
		outstring(positions[17],0,"Имя посетителя",false);
		outstring(positions[18],0,"Моб. Телефон",false);
		outstring(positions[19],0,"Доп. телефон",false);
		outstring(positions[20],0,"Телефон",false);
		outstring(positions[21],0,"E-mail",false);
		outstring(positions[22],0,"Адрес",false);
		//*outstring(470,0,"Продано на суму (валюта)",false);
		//outstring(420,0,"Телефон, Доп. телефон, Моб. Телефон",false);			
	endformat;
	
	gray_divider(0,1);
								
	TrHs = true;
	MRr.TransDate = sd;
	findf = true;
	while(loopKey("TransDate",MRr,1,TrHs))begin
		testf = true;
		if(MRr.TransDate<sd or MRr.TransDate>ed)then begin TrHs = false; testf = false; end;
		if(nonblank(location) and MRr.Location!=location)then begin testf = false; end;
		if (NonBlank(RepSpec.f3)) then begin
		  CUr.Code = MRr.CustCode;
		  if (ReadFirstMain(CUr,1,true) and SetInSet(RepSpec.f3,CUr.Classification)==false) then begin testf = false; end;
		end;
		if(testf)then begin
			StartFormat(15);
			outstring(positions[0],0,MRr.SerNr,false);
			//if(nonblank(RepSpec.f1))then begin
			OutString(positions[1],0,MRr.Location,false);	
			//end;
			outstring(positions[2],0,MRr.TransDate,false);
			outstring(positions[3],0,MRr.TransTime,false);
			OutString(positions[4],0,MRr.SalesMan,false);
			OutString(positions[5],0,MRr.GenderQty,false);
			switch (MRr.CustCodeType) begin
			  case 0: 
					OutString(positions[6],0,"Клиент",false);
				case 1: 
					OutString(positions[6],0,"Дов.лицо",false);
			end;
			switch (MRr.Gender) begin
				case 0: 
					OutString(positions[7],0,"-",false);
				case 1: 
					OutString(positions[7],0,"Мужчина",false);
				case 2: 
					OutString(positions[7],0,"Женщина",false);
				case 3: 
					OutString(positions[7],0,"Смешанная группа",false);	
				case 4: 
					OutString(positions[7],0,"Группа мужчин",false);	
				case 5: 
					OutString(positions[7],0,"Группа женщин",false);			
			end;
			switch (MRr.Age) begin
				case 0: 
					OutString(positions[8],0,"-",false);
				case 1: 
					OutString(positions[8],0,"13-17",false);
				case 2: 
					OutString(positions[8],0,"18-24",false);
				case 3: 
					OutString(positions[8],0,"25-34",false);
				case 4: 
					OutString(positions[8],0,"35-44",false);			
				case 5: 
					OutString(positions[8],0,"45-54",false);
				case 6: 
					OutString(positions[8],0,"55-64",false);
				case 7: 
					OutString(positions[8],0,"65+",false);
			end;
			switch (MRr.NationalityRbtn) begin
				case 0: 
					OutString(positions[9],0,"-",false);
				case 1: 
					OutString(positions[9],0,"Гражданин Азербайджана",false);
				case 2: 
					OutString(positions[9],0,"Иностранный турист",false);
				case 3: 
					OutString(positions[9],0,"Экспат",false);			
				case 4: 
					OutString(positions[9],0,"Сотрудники ID Group",false);	
			end;
			switch (MRr.ReferenceRbtn) begin
				case 0: 
					OutString(positions[10],0,"-",false);
				case 1: 
					OutString(positions[10],0,"Facebook",false);
				case 2: 
					OutString(positions[10],0,"Instagram",false);	
				case 3: 
					OutString(positions[10],0,"Веб-сайт: " & MRr.ReferenceTxtWeb,false);	
				case 4: 
					OutString(positions[10],0,"Уличная реклама",false);	
				case 5: 
					OutString(positions[10],0,"Журнал: " & MRr.ReferenceTxtMag,false);	
				case 6: 
					OutString(positions[10],0,"Рекомендация друга",false);	
				case 7: 
					OutString(positions[10],0,"Увидел в торговом центре",false);	
				case 8: 
					OutString(positions[10],0,"Радио",false);	
				case 9: 
					OutString(positions[10],0,"Телевидение",false);	
				case 10: 
					OutString(positions[10],0,"Другое: " & MRr.ReferenceTxt,false);			
				case 11: 
					OutString(positions[10],0,"E-mail рассылка",false);	
			  case 12: 
					OutString(positions[10],0,"SMS рассылка",false);	
				case 13: 
					OutString(positions[10],0,"Мероприятие",false);	
				case 14: 
					OutString(positions[10],0,"Проходил мимо",false);	
				case 15: 
					OutString(positions[10],0,"Обзвон клиентов",false);				
			end;
			switch (MRr.ReasonBtn) begin
				case 0: 
					OutString(positions[11],0,"-",false);
				case 1: 
					OutString(positions[11],0,"Поиск подарка",false);
				case 2: 
					OutString(positions[11],0,"Поиск для себя лично",false);	
				case 3: 
					OutString(positions[11],0,"Посмотреть товары, прицениться",false);	
				case 4: 
					OutString(positions[11],0,"Познакомиться с магазином",false);	
				case 5: 
					OutString(positions[11],0,"Пришел по акции" & MRr.ReferenceTxtMag,false);	
				case 6: 
					OutString(positions[11],0,"Другое: " & MRr.Reason,false);	
				case 7: 
					OutString(positions[11],0,"Возврат товара",false);	
				case 8: 
					OutString(positions[11],0,"Оплата долга",false);									
			end;
			switch (MRr.ResultRbtn) begin
				case 0: 
					OutString(positions[12],0,"-",false);
				case 1: 
					OutString(positions[12],0,"Нет продаж: " & MRr.ResultTxt,false);
				case 2: 
					OutString(positions[12],0,"Есть продажи: номера сч/ф: " & MRr.InvNr,false);
					pos = 0;
					totalcost = 0;
					totalcost2 = 0;
					ExtractObj(MRr.InvNr,pos,serNum);
					while(nonblank(serNum)) begin
						IVr.SerNr = serNum;
						if(Readfirstmain(IVr,1,true))then begin
							totalcost = totalcost + IVr.Sum4;
							totalcost2 = totalcost2 + IVr.Sum4 / IVr.FrRate * IVr.ToRateB1;		
						end; 
						ExtractObj(MRr.InvNr,pos,serNum);
					end;						
			end;
			switch (MRr.SaleType) begin
				case 0: 
					OutString(positions[13],0,"Нет продажи",false);
				case 1: 
					OutString(positions[13],0,"Обычная продажа",false);
				case 2: 
					OutString(positions[13],0,"Продажа по звонку",false);	
				case 3: 
				  outstring(positions[13],0,"Продажа по Whatsapp",false);			
				case 4: 
				  outstring(positions[13],0,"Продажа по Instagram",false);	
				case 5: 
				  outstring(positions[13],0,"Продажа по Facebook",false);						
			end;		
			switch (MRr.AnotherCard) begin
				case 0: 
					OutString(positions[14],0,"-",false);
				case 1: 
					OutString(positions[14],0,MRr.AnotherCardNr,false);
				case 2: 
					OutString(positions[14],0,"Своя карта",false);	
				case 3: 
				  outstring(positions[14],0,"Нет карты",false);								
			end;
			outstring(positions[15],0,totalcost & " " & IVr.CurncyCode,false);	
			if(totalcost2!=0)then begin
				//outstring(460,0,totalcost2 & " " & IVr.CurncyCode,false);					
			end;
			outstring(positions[16],0,MRr.CustCode,false);
			if(nonblank(MRr.Name))then begin
				OutString(positions[17],0,MRr.Name,false);
			end else begin
				OutString(positions[17],0,"No name",false);
			end;
			/*phoner = "";
			ph = MRr.Phone1;
			if(nonblank(ph))then begin
				if(blank(phoner))then begin
					phoner = phoner & ph;
				end else begin
					phoner = phoner & "," & ph;
				end;
			end;
			ph = MRr.Phone2;
			if(nonblank(ph))then begin
				if(blank(phoner))then begin
					phoner = phoner & ph;
				end else begin
					phoner = phoner & "," & ph;
				end;
			end;
			ph = MRr.Phone3;
			if(nonblank(ph))then begin
				if(blank(phoner))then begin
					phoner = phoner & ph;
				end else begin
					phoner = phoner & "," & ph;
				end;
			end;		
			outstring(420,0,phoner,false);*/
			outstring(positions[18],0,MRr.Phone3,false);
			outstring(positions[19],0,MRr.Phone2,false);
			outstring(positions[20],0,MRr.Phone1,false);
			outstring(positions[21],0,MRr.eMail,false);
			outstring(positions[22],0,MRr.Address,false);	
			endformat;									
		end;
	end;
	
	endjob;
	
return;
end;