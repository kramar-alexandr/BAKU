external procedure ExtractObj(string,var Integer,var string);

SetLangMode(LangRussian,"RUS",0);

global updating procedure MarketingRn(record RcVc RepSpec)
begin
date sd,ed;
record MarketingVc MRr;
record IVVc IVr;
boolean findf, TrHs;
val totalqty, totalcost;
record LocationVc Locr,Loc2r;
string 20 location;
string 255 serNum;
integer i, pos;

	sd = RepSpec.sStartDate;
  ed = RepSpec.sEndDate;
  totalcost = 0;
  
  location = RepSpec.f1;

	startreportnoheaderjob("Отчет по маркетингу");
	
	StartFormat(15);
		outstring(0,0,"Отчет по маркетингу",false);
	endformat;
	
	totalqty = 0;
	totalcost = 0;
	
	StartFormat(15);
		outstring(0,0,"Период:",false);
		outstring(0,0,RepSpec.sStartDate & ":" & RepSpec.sEndDate,false);
	endformat;
	StartFormat(15);
		outstring(0,0,"Магазин:",false);
		if(nonblank(RepSpec.f1))then begin
			outstring(0,0,RepSpec.f1,false);
		end else begin
			outstring(0,0,"По всем",false);
		end;
	endformat;
		
	StartFormat(15);
		outstring(0,0,"Дата посещения",false);
		outstring(60,0,"Клиент",false);
		outstring(140,0,"Национальность ",false);
		outstring(200,0,"Возраст",false);
		outstring(230,0,"Причина посещения ",false);
		outstring(300,0,"Результат посещения ",false);
		outstring(400,0,"Продано на суму ",false);
				
	endformat;
	

					/*
					ExtractObj(INr.DispGroups,cnt,class);
					if(nonblank(class))then begin
						Dir.Code = class;
						if(readfirstmain(DIr,1,true))then begin
							outstring(250,0,DIr.Name,false);
						end else begin
							outstring(250,0,"",false);
						end;
					end else begin
						outstring(250,0,"",false);
					end;
					ExtractObj(INr.DispGroups,cnt,class);*/
					
	Locr.Code = location;
					
	TrHs = true;
	while (Loopmain(Locr,1,TrHs)) begin
		if (nonblank(location) and (Locr.Code!=location)) then begin
			TrHs = false;
		end;
		if(TrHs)then begin
			StartFormat(15);
				OutString(0,0,Locr.Code,false);		
				MRr.SerNr = "";
				findf = true;
				while(loopMain(MRr,1,findf))begin
					if(MRr.TransDate>sd and MRr.TransDate<ed)then begin
						outstring(0,0,MRr.TransDate,false);
						if(nonblank(MRr.Name))then begin
							OutString(60,0,MRr.Name,false);
						end else begin
								OutString(60,0,"No name",false);
						end;
						
						switch (MRr.NationalityRbtn) begin
							case 0: 
								OutString(140,0,"-",false);
							case 1: 
								OutString(140,0,"Азербайджанец",false);
							case 2: 
								OutString(140,0,"Русский",false);
							case 3: 
								OutString(140,0,MRr.NationalityTxt,false);			
						end;
						
						switch (MRr.Age) begin
							case 0: 
								OutString(200,0,"-",false);
							case 1: 
								OutString(200,0,"< 20",false);
							case 2: 
								OutString(200,0,"20-30",false);
							case 3: 
								OutString(200,0,"30-40",false);
							case 4: 
								OutString(200,0,"40-50",false);			
							case 5: 
								OutString(200,0,"50-60",false);
							case 6: 
								OutString(200,0,"Больше 60",false);
						end;
						
						outstring(230,0,MRr.Reason,false);
						
						switch (MRr.ResultRbtn) begin
							case 0: 
								OutString(300,0,"-",false);
							case 1: 
								OutString(300,0,"Нет продаж: " & MRr.ResultTxt,false);
							case 2: 
								OutString(300,0,"Есть продажи: номера сч/ф:" & MRr.ResultTxt,false);
						end;
						
						/*if(MRr.ResultRbtn==2) then begin
							ExtractObj(MRr.InvNr,pos,serNum);
							while (nonblank(serNum)) begin
								IVr.SerNr = serNum;
								if(Readfirstmain(IVr,1,true)==false)then begin
									totalcost = totalcost + IVr.Sum4;
								end; 
								ExtractObj(MRr.InvNr,pos,serNum);
							end;
							outstring(400,0,totalcost,false);
						end;*/
											
						
						
						findf = false;
				end;
			end;
			resetloop(Mrr);			
					
				endformat;
	  end;
	end; 
		
		
	
	

	endjob;
	
return;
end;