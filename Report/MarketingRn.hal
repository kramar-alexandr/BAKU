external procedure ExtractObj(string,var Integer,var string);

SetLangMode(LangRussian,"RUS",0);

global updating procedure MarketingRn(record RcVc RepSpec)
begin
date sd,ed;
record MarketingVc MRr;
record IVVc IVr;
boolean findf, TrHs, testf;
val totalqty, totalcost, totalcost2;
record LocationVc Locr, Loc2r;
string 20 location;
string 255 serNum,phoner,ph;
integer i, pos;

	sd = RepSpec.sStartDate;
  ed = RepSpec.sEndDate;
  totalcost = 0;
  totalcost2 = 0;
  
  location = RepSpec.f1;

	startreportnoheaderjob("Отчет по фиксации визитов");
	
	StartFormat(15);
		outstring(0,0,"Отчет по фиксации визитов",false);
	endformat;
	
	StartFormat(15);
		outstring(0,0,"Период:",false);
		outstring(40,0,RepSpec.sStartDate & ":" & RepSpec.sEndDate,false);
	endformat;
	StartFormat(15);
		outstring(0,0,"Магазин:",false);
		if(nonblank(RepSpec.f1))then begin
			outstring(40,0,RepSpec.f1,false);
		end else begin
			outstring(40,0,"По всем",false);
		end;
	endformat;
	Black_Divider(0,1);
		
	StartFormat(15);
		outstring(0,0,"Номер",false);
		//if(nonblank(RepSpec.f1))then begin
		  outstring(0,0,"Магазин (склад)",false);
		//end;
		outstring(0,0,"Дата посещения",false);
		outstring(0,0,"Время посещения",false);
		outstring(60,0,"Консультант",false);
		outstring(60,0,"Имя посетителя",false);
		outstring(140,0,"Пол",false);
		outstring(140,0,"Кол-во",false);
		outstring(140,0,"Возраст",false);
		outstring(200,0,"Гражданство",false);
		outstring(230,0,"Откуда узнали",false);
		outstring(230,0,"Причина посещения",false);
		outstring(310,0,"Результат посещения",false);
		outstring(420,0,"Продано на сумму(AZN)",false);
		//*outstring(470,0,"Продано на суму (валюта)",false);
		outstring(420,0,"ID карты",false);
		//outstring(420,0,"Телефон, Доп. телефон, Моб. Телефон",false);
		outstring(420,0,"Телефон",false);
		outstring(420,0,"Доп. телефон",false);
		outstring(420,0,"Моб. Телефон",false);
		outstring(420,0,"E-mail",false);
		outstring(420,0,"Адрес",false);
		outstring(420,0,"Использовалась карта",false);
				
	endformat;
	
	gray_divider(0,1);
								
	TrHs = true;
	MRr.TransDate = sd;
	findf = true;
	while(loopKey("TransDate",MRr,1,TrHs))begin
		testf = true;
		if(MRr.TransDate<sd and MRr.TransDate>ed)then begin TrHs = false; testf = false; end;
		if(nonblank(location) and MRr.Location!=location)then begin testf = false; end;
		
		if(testf)then begin
			StartFormat(15);
			outstring(0,0,MRr.SerNr,false);
			//if(nonblank(RepSpec.f1))then begin
			  OutString(0,0,MRr.Location,false);	
			//end;
			outstring(0,0,MRr.TransDate,false);
			outstring(0,0,MRr.TransTime,false);
			OutString(60,0,MRr.SalesMan,false);
			if(nonblank(MRr.Name))then begin
				OutString(60,0,MRr.Name,false);
			end else begin
				OutString(60,0,"No name",false);
			end;
			switch (MRr.Gender) begin
				case 0: 
					OutString(140,0,"-",false);
				case 1: 
					OutString(140,0,"Мужчина",false);
				case 2: 
					OutString(140,0,"Женщина",false);
				case 3: 
					OutString(140,0,"Смешанная группа",false);	
				case 4: 
					OutString(140,0,"Группа мужчин",false);	
				case 5: 
					OutString(140,0,"Группа женщин",false);			
			end;
			OutString(140,0,MRr.GenderQty,false);
			switch (MRr.Age) begin
				case 0: 
					OutString(140,0,"-",false);
				case 1: 
					OutString(140,0,"13-17",false);
				case 2: 
					OutString(140,0,"18-24",false);
				case 3: 
					OutString(140,0,"25-34",false);
				case 4: 
					OutString(140,0,"35-44",false);			
				case 5: 
					OutString(140,0,"45-54",false);
				case 6: 
					OutString(140,0,"55-64",false);
				case 7: 
					OutString(140,0,"65+",false);
			end;
			switch (MRr.NationalityRbtn) begin
				case 0: 
					OutString(200,0,"-",false);
				case 1: 
					OutString(200,0,"Гражданин Азербайджана",false);
				case 2: 
					OutString(200,0,"Иностранный турист",false);
				case 3: 
					OutString(200,0,"Экспат",false);			
				case 4: 
					OutString(200,0,"Сотрудники ID Group",false);	
			end;
			
						
			switch (MRr.ReferenceRbtn) begin
				case 0: 
					OutString(230,0,"-",false);
				case 1: 
					OutString(230,0,"Facebook",false);
				case 2: 
					OutString(230,0,"Instagram",false);	
				case 3: 
					OutString(230,0,"Веб-сайт: " & MRr.ReferenceTxtWeb,false);	
				case 4: 
					OutString(230,0,"Уличная реклама",false);	
				case 5: 
					OutString(230,0,"Журнал: " & MRr.ReferenceTxtMag,false);	
				case 6: 
					OutString(230,0,"Рекомендация друга",false);	
				case 7: 
					OutString(230,0,"Увидел в торговом центре",false);	
				case 8: 
					OutString(230,0,"Радио",false);	
				case 9: 
					OutString(230,0,"Телевидение",false);	
				case 10: 
					OutString(230,0,"Другое: " & MRr.ReferenceTxt,false);			
				case 11: 
					OutString(230,0,"E-mail рассылка",false);	
			  case 12: 
					OutString(230,0,"SMS рассылка",false);	
				case 13: 
					OutString(230,0,"Мероприятие",false);	
				case 14: 
					OutString(230,0,"Проходил мимо",false);				
			end;
			
			switch (MRr.ReasonBtn) begin
				case 0: 
					OutString(230,0,"-",false);
				case 1: 
					OutString(230,0,"Поиск подарка",false);
				case 2: 
					OutString(230,0,"Поиск для себя лично",false);	
				case 3: 
					OutString(230,0,"Посмотреть товары, прицениться",false);	
				case 4: 
					OutString(230,0,"Познакомиться с магазином",false);	
				case 5: 
					OutString(230,0,"Пришел по акции" & MRr.ReferenceTxtMag,false);	
				case 6: 
					OutString(230,0,"Другое: " & MRr.Reason,false);	
				case 7: 
					OutString(230,0,"Возврат товара",false);	
				case 8: 
					OutString(230,0,"Оплата долга",false);									
			end;
			
			switch (MRr.ResultRbtn) begin
				case 0: 
					OutString(310,0,"-",false);
				case 1: 
					OutString(310,0,"Нет продаж: " & MRr.ResultTxt,false);
				case 2: 
					OutString(310,0,"Есть продажи: номера сч/ф: " & MRr.InvNr,false);
					pos = 0;
					totalcost = 0;
					totalcost2 = 0;
					ExtractObj(MRr.InvNr,pos,serNum);
					while(nonblank(serNum))begin
						IVr.SerNr = serNum;
						if(Readfirstmain(IVr,1,true))then begin
							totalcost = totalcost + IVr.Sum4;
							totalcost2 = totalcost2 + IVr.Sum4 / IVr.FrRate * IVr.ToRateB1;		
						end; 
						ExtractObj(MRr.InvNr,pos,serNum);
					end;						
			end;
			outstring(420,0,totalcost & " " & IVr.CurncyCode,false);
					
			if(totalcost2!=0)then begin
				outstring(460,0,totalcost2 & " " & IVr.CurncyCode,false);					
			end;
			
			
			outstring(420,0,MRr.CustCode,false);
			/*phoner = "";
			ph = MRr.Phone1;
			if(nonblank(ph))then begin
				if(blank(phoner))then begin
					phoner = phoner & ph;
				end else begin
					phoner = phoner & "," & ph;
				end;
			end;
			ph = MRr.Phone2;
			if(nonblank(ph))then begin
				if(blank(phoner))then begin
					phoner = phoner & ph;
				end else begin
					phoner = phoner & "," & ph;
				end;
			end;
			ph = MRr.Phone3;
			if(nonblank(ph))then begin
				if(blank(phoner))then begin
					phoner = phoner & ph;
				end else begin
					phoner = phoner & "," & ph;
				end;
			end;		
			outstring(420,0,phoner,false);*/
			outstring(420,0,MRr.Phone1,false);
			outstring(420,0,MRr.Phone2,false);
			outstring(420,0,MRr.Phone3,false);
			outstring(420,0,MRr.eMail,false);
			outstring(420,0,MRr.Address,false);
			
			switch (MRr.AnotherCard) begin
				case 0: 
					OutString(420,0,"-",false);
				case 1: 
					OutString(420,0,MRr.AnotherCardNr,false);
				case 2: 
					OutString(420,0,"Своя карта",false);	
				case 3: 
				  outstring(420,0,"Нет карты",false);								
			end;
						
			endformat;									
		end;
	end;
	
	endjob;
	
return;
end;