external procedure ExtractObj(string,var Integer,var string);

SetLangMode(LangRussian,"RUS",0);

global updating procedure MarketingRn(record RcVc RepSpec)
begin
date sd,ed;
record MarketingVc MRr;
record IVVc IVr;
boolean findf, TrHs, testf;
val totalqty, totalcost, totalcost2;
record LocationVc Locr, Loc2r;
string 20 location;
string 255 serNum;
integer i, pos;

	sd = RepSpec.sStartDate;
  ed = RepSpec.sEndDate;
  totalcost = 0;
  totalcost2 = 0;
  
  location = RepSpec.f1;

	startreportnoheaderjob("Отчет по фиксации визитов");
	
	StartFormat(15);
		outstring(0,0,"Отчет по фиксации визитов",false);
	endformat;
	
	StartFormat(15);
		outstring(0,0,"Период:",false);
		outstring(40,0,RepSpec.sStartDate & ":" & RepSpec.sEndDate,false);
	endformat;
	StartFormat(15);
		outstring(0,0,"Магазин:",false);
		if(nonblank(RepSpec.f1))then begin
			outstring(40,0,RepSpec.f1,false);
		end else begin
			outstring(40,0,"По всем",false);
		end;
	endformat;
	Black_Divider(0,1);
		
	StartFormat(15);
		if(blank(RepSpec.f1))then begin
			OutString(0,0,"",false);	
		end;
		outstring(0,0,"Дата посещения",false);
		outstring(60,0,"Клиент",false);
		outstring(140,0,"Национальность",false);
		outstring(200,0,"Возраст",false);
		outstring(230,0,"Причина посещения",false);
		outstring(310,0,"Результат посещения",false);
		outstring(420,0,"Продано на суму",false);
		outstring(470,0,"Продано на суму (валюта)",false);
				
	endformat;
	
	gray_divider(0,1);
								
	TrHs = true;
	MRr.TransDate = sd;
	findf = true;
	while(loopKey("TransDate",MRr,1,TrHs))begin
		testf = true;
		if(MRr.TransDate<sd and MRr.TransDate>ed)then begin TrHs = false; testf = false; end;
		if(nonblank(location) and MRr.Location!=location)then begin testf = false; end;
		
		if(testf)then begin
			StartFormat(15);
				if(blank(RepSpec.f1))then begin
					OutString(0,0,MRr.Location,false);	
				end;
				outstring(0,0,MRr.TransDate,false);
			if(nonblank(MRr.Name))then begin
				OutString(60,0,MRr.Name,false);
			end else begin
					OutString(60,0,"No name",false);
			end;
			
			switch (MRr.NationalityRbtn) begin
				case 0: 
					OutString(140,0,"-",false);
				case 1: 
					OutString(140,0,"Азербайджанец",false);
				case 2: 
					OutString(140,0,"Русский",false);
				case 3: 
					OutString(140,0,MRr.NationalityTxt,false);			
			end;
			
			switch (MRr.Age) begin
				case 0: 
					OutString(200,0,"-",false);
				case 1: 
					OutString(200,0,"< 20",false);
				case 2: 
					OutString(200,0,"20-30",false);
				case 3: 
					OutString(200,0,"30-40",false);
				case 4: 
					OutString(200,0,"40-50",false);			
				case 5: 
					OutString(200,0,"50-60",false);
				case 6: 
					OutString(200,0,"Больше 60",false);
			end;
			
			outstring(230,0,MRr.Reason,false);
			
			switch (MRr.ResultRbtn) begin
				case 0: 
					OutString(310,0,"-",false);
				case 1: 
					OutString(310,0,"Нет продаж: " & MRr.ResultTxt,false);
				case 2: 
					OutString(310,0,"Есть продажи: номера сч/ф: " & MRr.InvNr,false);
					pos = 0;
					totalcost = 0;
					totalcost2 = 0;
					ExtractObj(MRr.InvNr,pos,serNum);
					while(nonblank(serNum))begin
						IVr.SerNr = serNum;
						if(Readfirstmain(IVr,1,true))then begin
							totalcost = totalcost + IVr.Sum4;
							totalcost2 = totalcost2 + IVr.Sum4 / IVr.FrRate * IVr.ToRateB1;		
						end; 
						ExtractObj(MRr.InvNr,pos,serNum);
					end;
					
					outstring(420,0,totalcost & " " & IVr.CurncyCode,false);
					
					if(totalcost2!=0)then begin
						outstring(460,0,totalcost2 & " " & IVr.CurncyCode,false);					
					end;
									
			end;
						
			endformat;									
		end;
	end;
	
	endjob;
	
return;
end;