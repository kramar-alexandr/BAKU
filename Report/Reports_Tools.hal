external procedure GetFullCurncyRate (var string,Date,var val,var val,var val,var val,var val);
external procedure CntPOSCurrencies(var Array string,var Array Boolean,var Integer);


global procedure FindItemStartBalanceQty(string artcode, string location, date ed,var val qty,var val cost)
begin
record ItemHistVc IHr;
boolean TrHs,testf;
string 50 keyfind;
integer keyint;
val res;
	
	qty = 0;
	cost = 0;
	if(nonblank(artcode))then begin
		IHr.TransDate = stringtodate("1/1/2012");
		if(nonblank(location))then begin
			keyfind = "ArtCodeLoc";
			keyint = 3;
			IHr.ArtCode = artcode;
			IHr.Location = location;
		end else begin
			keyfind = "ArtCode";
			keyint = 2;
			IHr.ArtCode = artcode;
		end;
	
		TrHs = true;
		while(loopkey(keyfind,IHr,keyint,TrHs))begin
			testf = true;
			if(IHr.ArtCode!=artcode)then begin TrHs = false; testf = false;  end;
			if(nonblank(location))then begin
				if((IHr.Location!=location))then begin	TrHs = false; testf = false;	end;
			end;
			if(IHr.TransDate>=ed)then begin testf = false; TrHs = false; end;
			if(IHr.FileName!="IVVc" and IHr.Invalid!=0)then begin	testf = false; end;
			if(IHr.StockAffectf==0)then begin	testf = false; end;
			
			
			if(testf)then begin
				qty = qty + IHr.Qty;
				if(IHr.Qty>-0)then begin
					cost = cost + IHr.TotCostPrice;
				end else begin
					cost = cost - IHr.TotCostPrice;
				end;
			end;
		end;
	end;
	
return;
end;

global 
procedure FindItemTurnOver(string artcode, string location,Date strtD,Date endD,var val qty, var val cost) 
begin
	record ItemHistVc IHr;
	Boolean TrHs,testf;
	string 50 Key;
	Integer KeyCount;

	qty = 0;
	cost = 0;

	IHr.ArtCode = artcode;
	IHr.TransDate = strtD;
	KeyCount = 2;
	Key = "ArtCode";

	If (NonBlank(location)) then begin 
		IHr.ArtCode = artcode;
		IHr.Location = location;
		IHr.TransDate = strtD;
		KeyCount = 3;
		Key = "ArtCodeLoc";
	end;

	TrHs = true;
	while (LoopKey(Key,IHr,KeyCount,TrHs)) begin
		testf = true;
		if (IHr.ArtCode!=artcode) then begin TrHs = false; testf = false; end;
		If(strtD>IHr.TransDate) then begin testf = false; end;
		If(IHr.TransDate>endD) then begin testf = false; TrHs = false; end;
		if (NonBlank(location) and IHr.Location!=location) then begin testf = false; TrHs = false; end;
		if (IHr.StockAffectf==0) then begin testf = false; end;
 		if(IHr.FileName!="IVVc" and IHr.Invalid!=0)then begin	testf = false; end;
 		
 		if (testf) then begin
			qty = qty + IHr.Qty;
				if (IHr.Qty>0) then begin
					cost = cost + IHr.TotCostPrice;
				end else begin
					cost = cost - IHr.TotCostPrice;
				end;
 		end;
 	
	end; 
	
	RESETLOOP(IHr);
  return;
end;

global
procedure FindItemSales(string artcode,string loc,date sd,date ed,var val cost,var val sum,var val qty)//Edit ***** 8 July 2013 13:18:00 Larisa
begin
	record INVc INr;
	record ItemHistVc IHr;
	record IVVc IVr;
	row IVVc IVrw;
	Boolean TrHs,testf,testfold;
	Val s;
	String 255 oldfilename,oldartcode,oldsernr,nkey;
	LongInt oldtransnr;
	Integer oldrow,ckey;
	string 20 curncy;
	Array string 50 carncy;
	Array Boolean achangecrncyf;
	Integer acrncnt;
	Val ivfr,ivto,fr,to1,to2,br1,br2; 
	
	cost = 0;
	sum = 0;
	qty = 0;
	if(nonblank(artcode))then begin
		CntPOSCurrencies(carncy,achangecrncyf,acrncnt);
  	curncy = carncy[0];
		INr.Code = artcode;
		if(ReadFirstMain(INr,1,true))then begin
			IHr.ArtCode = INr.Code;
			if(nonblank(loc))then begin
				IHr.Location = loc;
				nkey = "ArtCodeLoc";
				ckey = 3;
			end else begin
				nkey = "ArtCode";
				ckey = 2;
			end;
			IHr.TransDate = sd;
			TrHs = true;
			while(LoopKey(nkey,IHr,ckey,TrHs))begin
				testf = true;
				testfold = true;
				if(IHr.ArtCode!=INr.Code)then begin
					TrHs = false;
					testf = false;
					testfold = false;
				end;
				if(nonblank(loc) and IHr.Location!=loc)then begin
					TrHs = false;
					testf = false;
					testfold = false;
				end;
				if(IHr.TransDate>ed)then begin
					TrHs = false;
					testf = false;
					testfold = false;
				end;
				if(IHr.TransDate<sd)then begin
					testf = false;
					testfold = false;
				end;
				if(IHr.FileName!="IVVc")then begin
					testf = false;
					testfold = false;
				end;
				if(IHr.FileName==oldfilename and IHr.TransNr==oldtransnr and IHr.Row==oldrow and IHr.ArtCode==oldartcode)then begin
					testfold = false;
				end;
				oldfilename = IHr.FileName;
				oldtransnr = IHr.TransNr;
				oldrow = IHr.Row;
				oldartcode = IHr.ArtCode;
				
				if(testf)then begin
					if(IHr.Qty>=0)then begin
						cost = cost - IHr.TotCostPrice;
					end else begin
						cost = cost + IHr.TotCostPrice;
					end;
					qty = qty - IHr.Qty;
					if(testfold)then begin
						IVr.SerNr = IHr.TransNr;
						if(ReadFirstMain(IVr,1,true))then begin
							if (IVr.Invalid==0) then begin
								MatRowGet(IVr,IHr.Row,IVrw);
								ivfr = 1; ivto = 1;
  							fr = 1; to1 = 1;
  							if(IVr.CurncyCode!=curncy)then begin
  								ivfr = IVr.FrRate;
   								ivto = IVr.ToRateB1;
   								if(ivfr==0 or ivto==0)then begin
    								ivfr = 1; ivto = 1;
    							end;
    								GetFullCurncyRate(curncy,IVr.TransDate,fr,to1,to2,br1,br2);
   	 							if(fr==0 or to1==0)then begin
    								fr = 1; to1 = 1;
   	 							end;
  							end;
								sum = sum + IVrw.Sum/ivfr*ivto*fr/to1;
								//qty = qty + IVrw.Quant;
							end;//if Invalid
						end;//if RFM IVr
					end;//if testfold
				end;//testf
			end;//while IHr
		end;//if RFM INr
	end;//if nonblank(artcode)
return;
end;//Edit ***** 8 July 2013 13:18:00 Larisa

//Edit---------------Vitalii 18:57 03.06.2015
global
procedure DblCLOutID(string dblstr,string l,Integer currepwn)
begin
  Integer wn;
  record CLOutVc CLOutr;
  
  CLOutr.SerNr = FirstInRange(l,10);
  if (ReadFirstMain(CLOutr,1,true)) then begin
    wn = OpenWindow("CLOutDClass",1,0,"","",CLOutr);
  end;     
  return;
end;

//Edit---------------Vitalii 16:35 17.06.2015
global
procedure DblBrand(string dblstr,string l,Integer currepwn)
begin
	string 20 str;
	record RcVc RepSpec,RepSpec2;
	
	getwindowrecord(currepwn,RepSpec2);
	ReportDefaults(RepSpec,"MainRClass")
	RepSpec.sStartDate = RepSpec2.sStartDate;
	RepSpec.sEndDate = RepSpec2.sEndDate;
	RepSpec.f4 = FirstInRange(l,15);//accnum
	RepSpec.CurncyCode = LastInRange(l,15);
	RepSpec.ObjStr = RepSpec2.ObjStr & "," & dblstr;
	RepSpec.flags[7] = 2;
	RepSpec.flags[21] = 1;
	RepSpec.flags[22] = 1;
	RepSpec.repname = "MainRn";
	RunReport(RepSpec,0);
	
	return;
end;

//Edit---------------Vitalii 15:27 24.06.2015
global
procedure DblBrandBeginBal(string dblstr,string l,Integer currepwn)
begin
	string 20 str;
	record RcVc RepSpec,RepSpec2;
	
	getwindowrecord(currepwn,RepSpec2);
	ReportDefaults(RepSpec,"MainRClass")
	RepSpec.sStartDate = StringToDate("1/1/1900");
	RepSpec.sEndDate = AddDay(RepSpec2.sStartDate, -1);
	RepSpec.f4 = FirstInRange(l,15);//accnum
	RepSpec.CurncyCode = "";
	RepSpec.ObjStr = RepSpec2.ObjStr & "," & LastInRange(l,15);
	RepSpec.flags[8] = 1;
	RepSpec.flags[7] = 2;
	RepSpec.flags[21] = 1;
	RepSpec.flags[22] = 1;
	RepSpec.repname = "MainRn";
	RunReport(RepSpec,0);
	
	return;
end;