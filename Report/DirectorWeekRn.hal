external procedure FindNLAccBal(string,string,string,Integer,Date,Date,Integer,Integer,Boolean,string,Integer,string,string,var val);
external procedure YcToStr(Integer,var string);
external function Boolean CorspTRTest(record TRVc,record AccVc,Integer,var val,var val);
external procedure ReadCorspTRRowSums(record TRVc,record AccVc,record AccVc,var val,var val,string);
external procedure GetObjs(string,string,var string);

SetLangMode(LangRussian,"RUS",0);

global
procedure DirectorWeekRn(record RcVc RepSpec)
begin
	record MainVc mainr;
	record TRVc TRr,tempTRr,tempTRr2;
	row TRVc TRrw,tempTRrw,tempTRrw2,tempTRrw3;
	record ObjVc Objr;
	record IVVc IVr;
	record IPVc IPr;
	record CLInVc CLInr;
	row CLInVc CLInrw;
	record CLOutVc CLOutr;
	row CLOutVc CLOutrw;
	record CurncyCodeVc CCr;
	record AccVc Accr50,Accr58,Accr4403,Accr51,Accr8403,Accr76,Accr7505,Accr53;
	record BaseCurBlock BaseCurRec;
	array string 5 CurList;
	integer i,j,k,l,rwcnt,rwcnt2,curi;
	boolean TrHs,firstprint,testf,done;
	Date tempDate;
	val BeginBalance50n51, BeginBalance50n51n53, BeginBalance50AZN,
		BeginBalance50, BeginBalance51, BeginBalance53,
		BeginBalance50USD, BeginBalance50EUR, tempBal,
		AZNTermDeb, AZNTermCred,
		AZNDeb, AZNCred,
		EURDeb, EURCred,
		USDDeb, USDCred,
		BaseDebErr, BDEBase, BDECur, BDEDebTemp,
		BaseCredErr, BCEBase, BCECur, BCECredTemp,
		BaseDeb, BaseCred,
		BalItem1, BalItem2,
		SaldoEndPeriodAZNTerm, SaldoEndPeriod53,
		SaldoEndPeriod, SaldoEndPeriodUSD,
		SaldoEndPeriodEUR, SaldoEndPeriodAZN,
		corspdebval, corspcredval, Bal53,
		kursovaya,convtotal1,convtotal2,convtotal3,convtotal4,convtotal5;// Edit ************************** Wednesday, 26 August 2015 11:49:59
	boolean BDEBaseChng, BDECurChng,
			BCEBaseChng, BCECurChng;
	array integer tab;
	integer step;
	string 5 tempStr;
	string 20 store,store2;
	string 200 tempComm;
	boolean usdf,eurf,aznf,terf,basef;
	
	BlockLoad(BaseCurRec);
	BeginBalance50n51 = 0;
	BeginBalance50n51n53 = 0;
	BeginBalance50AZN = 0;
	BeginBalance50 = 0;
	BeginBalance51 = 0;
	BeginBalance53 = 0;
	BeginBalance50USD = 0;
	BeginBalance50EUR = 0;
	tempBal = 0;
	BaseDebErr = 0;
	BaseCredErr = 0;
	BalItem1 = 0;
	BalItem2 = 0;
	SaldoEndPeriodAZNTerm = 0;
	SaldoEndPeriod53 = 0;
	SaldoEndPeriod = 0;
	SaldoEndPeriodUSD = 0;
	SaldoEndPeriodEUR = 0;
	SaldoEndPeriodAZN = 0;
	corspdebval = 0;
	corspcredval = 0;
	Bal53 = 0;
	
	usdf = false;
	eurf = false;
	aznf = false;
	terf = false;
	basef = false;
	
	curi = 0;
	while(loopmain(CCr,1,true)) begin
		CurList[curi] = CCr.CurncyCode;
		curi = curi + 1;
	end;
	
	mainr.AccNumber = "50";
	mainr.TransDate = RepSpec.sStartDate;
	Accr50.AccNumber = "50";
	ReadFirstMain(Accr50,1,true);
	Accr51.AccNumber = "51";
	ReadFirstMain(Accr51,1,true);
	Accr58.AccNumber = "58";
	ReadFirstMain(Accr58,1,true);
	Accr4403.AccNumber = "44/03";
	ReadFirstMain(Accr4403,1,true);
	Accr8403.AccNumber = "84/03";
	ReadFirstMain(Accr8403,1,true);
	Accr76.AccNumber = "76";
	ReadFirstMain(Accr76,1,true);
	Accr7505.AccNumber = "75/05";
	ReadFirstMain(Accr7505,1,true);
	Accr53.AccNumber = "53";
	ReadFirstMain(Accr53,1,true);
	TrHs = true;
	while (LoopMain(mainr,2,TrHs)) begin
		if ((mainr.AccNumber != "50") or (mainr.TransDate > RepSpec.sEndDate))  then begin
			TrHs = false;
		end;
		if (TrHs) then begin
			TRr.Number = mainr.TransNr;
			TRr.IntYc = mainr.IntYc;
			if (ReadFirstMain(TRr,2,true)) then begin
				if (mainr.TransDate == TRr.TransDate) then begin
					BDEBaseChng = false;
					BDECurChng = false;
					BCEBaseChng = false;
					BCECurChng = false;
					BDEBase = 0;
					BDECur = 0;
					BDEDebTemp = 0;
					BCEBase = 0;
					BCECur = 0;
					BCECredTemp = 0;
					rwcnt = MatRowCnt(TRr);
					for (i=0;i<rwcnt;i=i+1) begin
						MatRowGet(TRr,i,TRrw);
						done = false;
						if ((TRrw.AccNumber == "50") and (TRrw.ovst <> 1) and SetInSet(RepSpec.ObjStr,TRrw.Objects)) then begin
							if TRr.Number == 915 then begin
								messagebox(0, i & " - " & TRrw.ovst);
							end;
							switch (TRr.IntYc) begin
								case IVYc:
									IVr.SerNr = TRr.Number;
									if (ReadFirstMain(IVr,1,true)) then begin
										tempTRrw.Comment = "СЧ/КЛ." & IVr.SerNr;
										tempTRrw.ExtraComment = TRr.Comment;
									end;
								case IPYc:
									IPr.SerNr = TRr.Number;
									if (ReadFirstMain(IPr,1,true)) then begin
										tempTRrw.Comment = "ПЛ/КЛ." & IPr.SerNr;
										tempTRrw.ExtraComment = TRr.Comment;
									end;
								case CLInYc:
									CLInr.SerNr = TRr.Number;
									if (ReadFirstMain(CLInr,1,true)) then begin
										tempTRrw.Comment = "ПКО." & CLInr.SerNr;
										rwcnt2 = MatRowCnt(CLInr);
										for (k=0;k<rwcnt2;k=k+1) begin
											MatRowGet(CLInr,k,CLInrw);
											if (((CLInrw.Sum == TRrw.CurDebVal) or (CLInrw.Sum == -TRrw.CurCredVal)) and ((nonblank(CLInrw.Objects) and nonblank(TRrw.Objects) and SetInSet(CLInrw.Objects,TRrw.Objects)) or (blank(CLInrw.Objects)))) then begin
												tempTRrw.ExtraComment = CLInrw.Comment;
											end;
										end;
										if blank(tempTRrw.ExtraComment) then begin
											tempTRrw.ExtraComment = CLInr.CorspComment;
										end;
									end;
								case CLOutYc:
									CLOutr.SerNr = TRr.Number;
									if (ReadFirstMain(CLOutr,1,true)) then begin
										tempTRrw.Comment = "РКО." & CLOutr.SerNr;
										rwcnt2 = MatRowCnt(CLOutr);
										for (k=0;k<rwcnt2;k=k+1) begin
											MatRowGet(CLOutr,k,CLOutrw);
											if (((CLOutrw.Sum == TRrw.CurCredVal) or (CLOutrw.Sum == -TRrw.CurDebVal)) and ((nonblank(CLOutrw.Objects) and nonblank(TRrw.Objects) and SetInSet(CLOutrw.Objects,TRrw.Objects)) or (blank(CLOutrw.Objects)))) then begin
												tempTRrw.ExtraComment = CLOutrw.Comment;
											end;
										end;
										if blank(tempTRrw.ExtraComment) then begin
											tempTRrw.ExtraComment = CLOutr.CorspComment;
										end;
									end;
								otherwise
									YcToStr(TRr.IntYc,tempStr);
									tempTRrw.Comment = tempStr & "." & TRr.Number;
									tempTRrw.ExtraComment = TRr.Comment;
							end;
							tempTRrw.ReconDate = mainr.TransDate;	//в столбик Дата
							tempTRrw.Curncy = TRrw.Curncy;			//валюта
							switch (left(tempTRrw.Curncy,3)) begin
								case "USD": usdf = true;
								case "EUR": eurf = true;
								case "AZN": aznf = true;
							end;
							tempTRrw.CurDebVal = TRrw.CurDebVal;	//в столбики Поступления AZN/EUR/USD
							tempTRrw.CurCredVal = TRrw.CurCredVal;	//в столбики Расходы AZN/EUR/USD
							tempTRrw.DebVal = TRrw.DebVal;			//в столбик ПЛ/КЛоступления В осн. валюте
							tempTRrw.CredVal = TRrw.CredVal;		//в столбик Расходы В осн. валюте
							if ((TRr.IntYc == IVYc) and (TRrw.CredVal <> 0)) then begin
								tempTRrw.CurDebVal = - TRrw.CurCredVal;
								tempTRrw.CurCredVal = - TRrw.CurDebVal;
								tempTRrw.DebVal = - TRrw.CredVal;
								tempTRrw.CredVal = - TRrw.DebVal;
							end;
							
							testf = CorspTRTest(TRr,Accr58,i,corspdebval,corspcredval);
							if testf then begin
								tempComm = tempTRrw.ExtraComment;
								for (k=0;k<rwcnt;k=k+1) begin
									MatRowGet(TRr,k,tempTRrw2);
									if (tempTRrw2.AccNumber == "58") and (tempTRrw2.ovst <> 1) then begin
										tempTRrw.CurDebVal = tempTRrw2.CurCredVal;
										tempTRrw.CurCredVal = tempTRrw2.CurDebVal;
										tempTRrw.DebVal = tempTRrw2.CredVal;
										tempTRrw.CredVal = tempTRrw2.DebVal;
										tempTRrw.ExtraComment = tempComm & " - " & tempTRrw2.Comment;
										MatRowPut(tempTRr,j,tempTRrw);
										j = j + 1;
									end;
								end;
								testf = CorspTRTest(TRr,Accr4403,i,corspdebval,corspcredval);
								if testf then begin
									for (k=0;k<rwcnt;k=k+1) begin
										MatRowGet(TRr,k,tempTRrw2);
										if (tempTRrw2.AccNumber == "44/03") and (tempTRrw2.ovst <> 1) then begin
											tempTRrw.CurDebVal = tempTRrw2.CurCredVal;
											tempTRrw.CurCredVal = tempTRrw2.CurDebVal;
											tempTRrw.DebVal = tempTRrw2.CredVal;
											tempTRrw.CredVal = tempTRrw2.DebVal;
											tempTRrw.ExtraComment = tempComm & " - " & tempTRrw2.Comment;
											MatRowPut(tempTRr,j,tempTRrw);
											j = j + 1;
											done = true;
										end;
									end;
								end;
							end;
							testf = CorspTRTest(TRr,Accr50,i,corspdebval,corspcredval);// Edit ************************** Wednesday, 26 August 2015 11:01:28
							if (testf and (corspdebval==TRrw.CredVal or corspcredval==TRrw.DebVal))then begin
								store = "";
								GetObjs("STORE",TRrw.Objects,store);
								if nonblank(store) then begin
									for (k=0;k<rwcnt;k=k+1) begin
										MatRowGet(TRr,k,tempTRrw2);
										if (tempTRrw2.AccNumber == "50") and (tempTRrw2.ovst <> 1) then begin 
											if ((tempTRrw2.CredVal == TRrw.DebVal) and (tempTRrw2.DebVal == TRrw.CredVal)) then begin
												store2 = "";
												GetObjs("STORE",tempTRrw2.Objects,store2);
												if (store == store2) then begin
													if (TRrw.CredVal!=0) then begin
														tempTRrw.MyVal1 = -TRrw.CurCredVal;
														tempTRrw.MyVal2 = -TRrw.CredVal;
													end else begin
														tempTRrw.MyVal1 = TRrw.CurDebVal;
														tempTRrw.MyVal2 = TRrw.DebVal;
													end;
													tempTRrw.CurDebVal = blankval;
													tempTRrw.DebVal = blankval;
													tempTRrw.CurCredVal = blankval;
													tempTRrw.CredVal = blankval;
												end else begin
													if (TRrw.DebVal!=0) then begin
														TRrw.CredVal = -TRrw.DebVal;
														TRrw.DebVal = blankval;
														TRrw.CurCredVal = -TRrw.CurDebVal;
														TRrw.CurDebVal = blankval;
													end;
													tempTRrw.CurDebVal = TRrw.CurDebVal;
													tempTRrw.CurCredVal = TRrw.CurCredVal;
													tempTRrw.DebVal = TRrw.DebVal;
													tempTRrw.CredVal = TRrw.CredVal;
												end;
											end else begin
												if i != k then begin
													if ((tempTRrw2.CredVal == TRrw.DebVal) or (tempTRrw2.DebVal == TRrw.CredVal)) and (tempTRrw2.Objects == TRrw.Objects) and (TRrw.Curncy != BaseCurRec.BaseCur1) and (tempTRrw2.Curncy != BaseCurRec.BaseCur1) then begin
														testf = CorspTRTest(TRr,Accr8403,k,corspdebval,corspcredval);
														if testf then begin
															if (TRrw.CredVal!=0) then begin
																tempTRrw.MyVal1 = -TRrw.CurCredVal;
																tempTRrw.MyVal2 = -TRrw.CredVal;
															end else begin
																tempTRrw.MyVal1 = TRrw.CurDebVal;
																tempTRrw.MyVal2 = TRrw.DebVal;
															end;
															tempTRrw.CurDebVal = blankval;
															tempTRrw.DebVal = blankval;
															tempTRrw.CurCredVal = blankval;
															tempTRrw.CredVal = blankval;
														end;
													end;
												end;
											end;
										end;
									end;
								end;
							end;
							testf = CorspTRTest(TRr,Accr51,i,corspdebval,corspcredval);// Edit ************************** Wednesday, 26 August 2015 16:05:46
							if testf then begin
								if(TRrw.CredVal!=0)then begin
									tempTRrw.MyVal1 = -TRrw.CurCredVal;
									tempTRrw.MyVal2 = -TRrw.CredVal;
								end else begin
									tempTRrw.MyVal1 = TRrw.CurDebVal;
									tempTRrw.MyVal2 = TRrw.DebVal;
								end;
								tempTRrw.CurDebVal = blankval;
								tempTRrw.DebVal = blankval;
								tempTRrw.CurCredVal = blankval;
								tempTRrw.CredVal = blankval;
							end;
							
							testf = CorspTRTest(TRr,Accr8403,i,corspdebval,corspcredval);// Edit ************************** Wednesday, 26 August 2015 16:05:46
							if testf then begin
								if(TRrw.CredVal!=0)then begin
									tempTRrw.MyVal1 = -TRrw.CurCredVal;
									tempTRrw.MyVal2 = -TRrw.CredVal;
								end else begin
									tempTRrw.MyVal1 = TRrw.CurDebVal;
									tempTRrw.MyVal2 = TRrw.DebVal;
								end;
								kursovaya = kursovaya - corspdebval + corspcredval;
								tempTRrw.CurDebVal = blankval;
								tempTRrw.DebVal = blankval;
								tempTRrw.CurCredVal = blankval;
								tempTRrw.CredVal = blankval;
							end;
							
							testf = CorspTRTest(TRr,Accr76,i,corspdebval,corspcredval);//Edit-------------------Vitalii 14:48 31.08.2015
							if (testf and (SetInSet("E131",TRrw.Objects) or SetInSet("E98",TRrw.Objects))) then begin
								if(TRrw.CredVal!=0)then begin
									tempTRrw.MyVal1 = -TRrw.CurCredVal;
									tempTRrw.MyVal2 = -TRrw.CredVal;
								end else begin
									tempTRrw.MyVal1 = TRrw.CurDebVal;
									tempTRrw.MyVal2 = TRrw.DebVal;
								end;
								if SetInSet("E131",TRrw.Objects) then begin
									BalItem1 = BalItem1 - TRrw.CredVal + TRrw.DebVal;
								end;
								if SetInSet("E98",TRrw.Objects) then begin
									BalItem2 = BalItem2 + TRrw.CredVal - TRrw.DebVal;
								end;
								tempTRrw.CurDebVal = blankval;
								tempTRrw.DebVal = blankval;
								tempTRrw.CurCredVal = blankval;
								tempTRrw.CredVal = blankval;
							end;
							testf = CorspTRTest(TRr,Accr7505,i,corspdebval,corspcredval);
							if (testf) then begin
								if (TRrw.DebVal!=0) then begin
									TRrw.CredVal = -TRrw.DebVal;
									TRrw.DebVal = blankval;
									TRrw.CurCredVal = -TRrw.CurDebVal;
									TRrw.CurDebVal = blankval;
									tempTRrw.CurDebVal = TRrw.CurDebVal;
									tempTRrw.CurCredVal = TRrw.CurCredVal;
									tempTRrw.DebVal = TRrw.DebVal;
									tempTRrw.CredVal = TRrw.CredVal;
								end;
							end;
							testf = CorspTRTest(TRr,Accr53,i,corspdebval,corspcredval);
							if testf then begin
								if(TRrw.CredVal!=0)then begin
									tempTRrw.MyVal1 = -TRrw.CurCredVal;
									tempTRrw.MyVal2 = -TRrw.CredVal;
								end else begin
									tempTRrw.MyVal1 = TRrw.CurDebVal;
									tempTRrw.MyVal2 = TRrw.DebVal;
								end;
								Bal53 = Bal53 + TRrw.CredVal;
								tempTRrw.CurDebVal = blankval;
								tempTRrw.DebVal = blankval;
								tempTRrw.CurCredVal = blankval;
								tempTRrw.CredVal = blankval;
							end;
							
							if (!done) then begin
								if ((RepSpec.ArtMode == 1) and (TRr.IntYc == IVYc) and nonblank(TRrw.DebVal)) then begin
									MatRowPut(tempTRr2,l,tempTRrw);
									l = l + 1;
								end else begin
									MatRowPut(tempTRr,j,tempTRrw);
									j = j + 1;
								end;
							end;
							tempTRrw.ReconDate = "";
							tempTRrw.Curncy = "";
							tempTRrw.CurDebVal = blankval;
							tempTRrw.CurCredVal = blankval;
							tempTRrw.DebVal = blankval;
							tempTRrw.CredVal = blankval;
							tempTRrw.MyVal1 = blankval;// Edit ************************** Wednesday, 26 August 2015 11:34:24
							tempTRrw.MyVal2 = blankval;// Edit ************************** Wednesday, 26 August 2015 11:34:24
							tempTRrw.Comment = "";
							tempTRrw.ExtraComment = "";
						end;
					end;
				end;
			end;
		end;
	end;
	ResetLoop(mainr);
	mainr.AccNumber = "51";
	mainr.TransDate = RepSpec.sStartDate;
	TrHs = true;
	while (LoopMain(mainr,2,TrHs)) begin
		if ((mainr.AccNumber != "51") or (mainr.TransDate > RepSpec.sEndDate))  then begin
			TrHs = false;	
		end;
		if (TrHs) then begin
			TRr.Number = mainr.TransNr;
			TRr.IntYc = mainr.IntYc;
			if (ReadFirstMain(TRr,2,true)) then begin
				if (mainr.TransDate == TRr.TransDate) then begin
					rwcnt = MatRowCnt(TRr);
					for (i=0;i<rwcnt;i=i+1) begin
						MatRowGet(TRr,i,TRrw);
						if ((TRrw.AccNumber == "51") and (TRrw.ovst <> 1) and SetInSet(RepSpec.ObjStr,TRrw.Objects)) then begin
							switch (TRr.IntYc) begin
								case IVYc:
									IVr.SerNr = TRr.Number;
									if (ReadFirstMain(IVr,1,true)) then begin
										tempTRrw.Comment = "СЧ/КЛ." & IVr.SerNr;
										tempTRrw.ExtraComment = TRr.Comment;
									end;
								case IPYc:
									IPr.SerNr = TRr.Number;
									if (ReadFirstMain(IPr,1,true)) then begin
										tempTRrw.Comment = "ПЛ/КЛ." & IPr.SerNr;
										tempTRrw.ExtraComment = TRr.Comment;
									end;
								case CLInYc:
									CLInr.SerNr = TRr.Number;
									if (ReadFirstMain(CLInr,1,true)) then begin
										tempTRrw.Comment = "ПКО." & CLInr.SerNr;
										rwcnt2 = MatRowCnt(CLInr);
										for (k=0;k<rwcnt2;k=k+1) begin
											MatRowGet(CLInr,k,CLInrw);
											if (((CLInrw.Sum == TRrw.CurDebVal) or (CLInrw.Sum == -TRrw.CurCredVal)) and ((nonblank(CLInrw.Objects) and nonblank(TRrw.Objects) and SetInSet(CLInrw.Objects,TRrw.Objects)) or (blank(CLInrw.Objects)))) then begin
												tempTRrw.ExtraComment = CLInrw.Comment;
											end;
										end;
										if blank(tempTRrw.ExtraComment) then begin
											tempTRrw.ExtraComment = CLInr.CorspComment;
										end;
									end;
								case CLOutYc:
									CLOutr.SerNr = TRr.Number;
									if (ReadFirstMain(CLOutr,1,true)) then begin
										tempTRrw.Comment = "РКО." & CLOutr.SerNr;
										rwcnt2 = MatRowCnt(CLOutr);
										for (k=0;k<rwcnt2;k=k+1) begin
											MatRowGet(CLOutr,k,CLOutrw);
											if (((CLOutrw.Sum == TRrw.CurCredVal) or (CLOutrw.Sum == -TRrw.CurDebVal)) and ((nonblank(CLOutrw.Objects) and nonblank(TRrw.Objects) and SetInSet(CLOutrw.Objects,TRrw.Objects)) or (blank(CLOutrw.Objects)))) then begin
												tempTRrw.ExtraComment = CLOutrw.Comment;
											end;
										end;
										if blank(tempTRrw.ExtraComment) then begin
											tempTRrw.ExtraComment = CLOutr.CorspComment;
										end;
									end;
								otherwise
									YcToStr(TRr.IntYc,tempStr);
									tempTRrw.Comment = tempStr & "." & TRr.Number;
									tempTRrw.ExtraComment = TRr.Comment;
							end;
							tempTRrw.ReconDate = mainr.TransDate;
							tempTRrw.Curncy = "TER";				//валюта
							terf = true;
							tempTRrw.CurDebVal = TRrw.DebVal;		//в столбики Поступления AZN терминал
							tempTRrw.CurCredVal = TRrw.CredVal;		//в столбики Расходы AZN терминал
							tempTRrw.DebVal = TRrw.DebVal;
							tempTRrw.CredVal = TRrw.CredVal;
							
							testf = CorspTRTest(TRr,Accr50,i,corspdebval,corspcredval);
							if testf then begin
								if(TRrw.CredVal!=0)then begin
									tempTRrw.MyVal1 = -TRrw.CurCredVal;
									tempTRrw.MyVal2 = -TRrw.CredVal;
								end else begin
									tempTRrw.MyVal1 = TRrw.CurDebVal;
									tempTRrw.MyVal2 = TRrw.DebVal;
								end;
								tempTRrw.CurDebVal = blankval;
								tempTRrw.DebVal = blankval;
								tempTRrw.CurCredVal = blankval;
								tempTRrw.CredVal = blankval;
							end;
							
							
							if ((RepSpec.ArtMode == 1) and (TRr.IntYc == IVYc) and nonblank(TRrw.DebVal)) then begin
								MatRowPut(tempTRr2,l,tempTRrw);
								l = l + 1;
							end else begin
								MatRowPut(tempTRr,j,tempTRrw);
								j = j + 1;
							end;
							tempTRrw.ReconDate = "";
							tempTRrw.Curncy = "";
							tempTRrw.CurDebVal = blankval;
							tempTRrw.CurCredVal = blankval;
							tempTRrw.DebVal = blankval;
							tempTRrw.CredVal = blankval;
							tempTRrw.MyVal1 = blankval;// Edit ************************** Wednesday, 26 August 2015 11:34:24
							tempTRrw.MyVal2 = blankval;// Edit ************************** Wednesday, 26 August 2015 11:34:24
							tempTRrw.Comment = "";
							tempTRrw.ExtraComment = "";
						end;
					end;
				end;
			end;
		end;
	end;
	rwcnt = MatRowCnt(tempTRr);
	for (i=0;i<rwcnt;i=i+1) begin
		MatRowGet(tempTRr,i,tempTRrw);
		tempTRrw.Curncy = left(tempTRrw.Curncy,3);
		MatRowPut(tempTRr,i,tempTRrw);
	end;
	if (RepSpec.ArtMode == 1) then begin
		rwcnt2 = MatRowCnt(tempTRr2);
		for (i=0;i<rwcnt2;i=i+1) begin
			MatRowGet(tempTRr2,i,tempTRrw);
			tempTRrw.Curncy = left(tempTRrw.Curncy,3);
			MatRowPut(tempTRr2,i,tempTRrw);
		end;
		rwcnt2 = MatRowCnt(tempTRr2);
		for (j=0;j<rwcnt2-1;j=j+1) begin
			for (i=0;i<rwcnt2-1;i=i+1) begin
				MatRowGet(tempTRr2,i,tempTRrw);
				MatRowGet(tempTRr2,i+1,tempTRrw2);
				if (tempTRrw.ReconDate > tempTRrw2.ReconDate) then begin
					MatRowPut(tempTRr2,i,tempTRrw2);
					MatRowPut(tempTRr2,i+1,tempTRrw);
				end;
			end;
		end;
		for (i=0;i<rwcnt2;i=i+1) begin
			MatRowGet(tempTRr2,i,tempTRrw);
			switch (tempTRrw.Curncy) begin
				case "AZN":
					tempTRrw.CredVal2 = tempTRrw.CurDebVal;
				case "EUR":
					tempTRrw.DebVal2 = tempTRrw.CurDebVal;
				case "USD":
					tempTRrw.Qty = tempTRrw.CurDebVal;
				case "TER":
					tempTRrw.NomVal = tempTRrw.CurDebVal;
			end;
			MatRowPut(tempTRr2,i,tempTRrw);
		end;
		for (j=0;j<rwcnt2-1;j=j+1) begin
			MatRowGet(tempTRr2,j,tempTRrw);
			for (i=j + 1;i<rwcnt2;i=i+1) begin
				MatRowGet(tempTRr2,i,tempTRrw2);
				if (tempTRrw.ReconDate == tempTRrw2.ReconDate) then begin
					tempTRrw.CredVal2 = tempTRrw.CredVal2 + tempTRrw2.CredVal2;
					tempTRrw.DebVal2 = tempTRrw.DebVal2 + tempTRrw2.DebVal2;
					tempTRrw.Qty = tempTRrw.Qty + tempTRrw2.Qty;
					tempTRrw.NomVal = tempTRrw.NomVal + tempTRrw2.NomVal;
					tempTRrw.DebVal = tempTRrw.DebVal + tempTRrw2.DebVal;
					MatRowPut(tempTRr2,j,tempTRrw);
					MatRowDelete(tempTRr2,i);
					i = i - 1;
					rwcnt2 = rwcnt2 - 1;
				end;
			end;
		end;
		rwcnt = MatRowCnt(tempTRr);
		for (i=0;i<rwcnt2;i=i+1) begin
			MatRowGet(tempTRr2,i,tempTRrw);
			tempTRrw3.DebVal = tempTRrw.DebVal;
			tempTRrw3.DebVal2 = tempTRrw.DebVal2;
			tempTRrw3.Qty = tempTRrw.Qty;
			tempTRrw3.CredVal2 = tempTRrw.CredVal2;
			tempTRrw3.NomVal = tempTRrw.NomVal;
			tempTRrw3.Comment = "СЧ/КЛ.";
			tempTRrw3.ReconDate = tempTRrw.ReconDate;
			tempTRrw3.Curncy = "IVV";
			MatRowPut(tempTRr,rwcnt + i,tempTRrw3);
		end;
	end;
	rwcnt = MatRowCnt(tempTRr);
	for (j=0;j<rwcnt-1;j=j+1) begin
		for (i=0;i<rwcnt-1;i=i+1) begin
			MatRowGet(tempTRr,i,tempTRrw);
			MatRowGet(tempTRr,i+1,tempTRrw2);
			if (tempTRrw.ReconDate > tempTRrw2.ReconDate) then begin
				MatRowPut(tempTRr,i,tempTRrw2);
				MatRowPut(tempTRr,i+1,tempTRrw);
			end;
		end;
	end;
	AZNTermDeb = 0;
	AZNTermCred = 0;
	AZNDeb = 0;
	AZNCred = 0;
	EURDeb = 0;
	EURCred = 0;
	USDDeb = 0;
	USDCred = 0;
	BaseDeb = 0;
	BaseCred = 0;
	
	if (usdf or eurf) then begin
		basef = true;
	end;
	aznf = true;
	if CurrentCompany == 3 then begin
		usdf = true;
		eurf = true;
		aznf = true;
		terf = true;
		basef = true;
	end;
	tab[1]  = 0;
	if (terf and aznf and usdf and eurf and basef) then begin
		step = 24;
		tab[2]  = 20;
		tab[3]  = tab[2]  + step; 
		tab[4]  = tab[3]  + step + 1; 
		tab[5]  = tab[4]  + step; 
		tab[6]  = tab[5]  + step + 1; 
		tab[7]  = tab[6]  + step;
		tab[8]  = tab[7]  + step + 1;
		tab[9]  = tab[8]  + step;
		tab[10] = tab[9]  + step + 1;
		tab[11] = tab[10] + step;
		tab[12] = tab[11] + step + 1;
		tab[13] = tab[12] + step;
		tab[14] = tab[13] + step + 1;
		tab[15] = tab[14] + step;
		tab[16] = tab[15] + step + 1;
	end;
	if (terf and aznf and !usdf and eurf and basef) then begin
		step = 31;
		tab[2]  = 20;
		tab[3]  = tab[2]  + step; 
		tab[4]  = tab[3]  + step; 
		tab[5]  = 0; 
		tab[6]  = tab[4]  + step; 
		tab[7]  = tab[6]  + step;
		tab[8]  = tab[7]  + step + 1;
		tab[9]  = tab[8]  + step;
		tab[10] = 0;
		tab[11] = tab[9]  + step;
		tab[12] = tab[11] + step;
		tab[13] = tab[12] + step;
		tab[14] = tab[13] + step + 1;
		tab[15] = 0;
		tab[16] = tab[14] + step;
	end;
	if (terf and aznf and usdf and !eurf and basef) then begin
		step = 31;
		tab[2]  = 20;
		tab[3]  = tab[2]  + step; 
		tab[4]  = 0; 
		tab[5]  = tab[3]  + step; 
		tab[6]  = tab[5]  + step; 
		tab[7]  = tab[6]  + step;
		tab[8]  = tab[7]  + step + 1;
		tab[9]  = 0;
		tab[10] = tab[8]  + step;
		tab[11] = tab[10]  + step;
		tab[12] = tab[11] + step;
		tab[13] = tab[12] + step;
		tab[14] = 0;
		tab[15] = tab[13] + step + 1;
		tab[16] = tab[15] + step;
	end;
	if (!terf and aznf and usdf and eurf and basef) then begin
		step = 31;
		tab[2]  = 0; 
		tab[3]  = 20;
		tab[4]  = tab[3]  + step; 
		tab[5]  = tab[4]  + step; 
		tab[6]  = tab[5]  + step; 
		tab[7]  = 0;
		tab[8]  = tab[6]  + step;
		tab[9]  = tab[8]  + step + 1;
		tab[10] = tab[9]  + step;
		tab[11] = tab[10]  + step;
		tab[12] = 0;
		tab[13] = tab[11] + step;
		tab[14] = tab[13] + step;
		tab[15] = tab[14] + step + 1;
		tab[16] = tab[15] + step;
	end;
	if (!terf and aznf and !usdf and eurf and basef) then begin
		step = 43;
		tab[2]  = 0; 
		tab[3]  = 20;
		tab[4]  = tab[3]  + step - 1; 
		tab[5]  = 0;
		tab[6]  = tab[4]  + step;
		tab[7]  = 0;
		tab[8]  = tab[6]  + step;
		tab[9]  = tab[8]  + step;
		tab[10] = 0;
		tab[11] = tab[9]  + step;
		tab[12] = 0;
		tab[13] = tab[11] + step;
		tab[14] = tab[13] + step;
		tab[15] = 0;
		tab[16] = tab[14] + step;
	end;
	if (!terf and aznf and usdf and !eurf and basef) then begin
		step = 43;
		tab[2]  = 0; 
		tab[3]  = 20;
		tab[4]  = 0; 
		tab[5]  = tab[3]  + step - 1;
		tab[6]  = tab[5]  + step;
		tab[7]  = 0;
		tab[8]  = tab[6]  + step;
		tab[9]  = 0;
		tab[10] = tab[8]  + step;
		tab[11] = tab[10]  + step;
		tab[12] = 0;
		tab[13] = tab[11] + step;
		tab[14] = 0;
		tab[15] = tab[13] + step;
		tab[16] = tab[15] + step;
	end;
	if (terf and aznf and !usdf and !eurf and !basef) then begin
		step = 57;
		tab[2]  = 20; 
		tab[3]  = tab[2]  + step + 1;
		tab[4]  = 0;
		tab[5]  = 0; 
		tab[6]  = 0;
		tab[7]  = tab[3]  + step;
		tab[8]  = tab[7]  + step;
		tab[9]  = 0;
		tab[10] = 0;
		tab[11] = 0;
		tab[12] = tab[8]  + step;
		tab[13] = tab[12] + step;
		tab[14] = 0;
		tab[15] = 0;
		tab[16] = 0;
	end;
	if (!terf and aznf and !usdf and !eurf and !basef) then begin
		step = 114;
		tab[2]  = 0; 
		tab[3]  = 21;
		tab[4]  = 0;
		tab[5]  = 0; 
		tab[6]  = 0;
		tab[7]  = 0;
		tab[8]  = tab[3]  + step;
		tab[9]  = 0;
		tab[10] = 0;
		tab[11] = 0;
		tab[12] = 0;
		tab[13] = tab[8] + step;
		tab[14] = 0;
		tab[15] = 0;
		tab[16] = 0;
	end;
	tab[17] = 390; tab[18] = 415;
	
	StartReportNoHeaderJob("Еженедельный отчет директоров");
	//Объект
		if nonblank(RepSpec.ObjStr) then begin
			Objr.Code = RepSpec.ObjStr;
			ReadFirstMain(Objr,1,true);
			StartFormat(15);
				OutString(0,0,"",false);
				OutString(20,0,Objr.Code & " " & Objr.Comment,false);
			EndFormat;
		end;
	//Период
		StartFormat(15);
			OutString(0,0,"",false);
			OutString(20,0,"",false);
			OutString(54,0,"",false);
			OutString(79,0,"",false);
			OutString(93,0,"",false);
			OutString(118,0,"",false);
			OutString(265,0,RepSpec.sStartDate & " : " & RepSpec.sEndDate,false);
		EndFormat;
		FindNLAccBal("50",RepSpec.ObjStr,"",0,"",RepSpec.sStartDate,0,0,false,"",0,"","",BeginBalance50);
		FindNLAccBal("51",RepSpec.ObjStr,"",0,"",RepSpec.sStartDate,0,0,false,"",0,"","",BeginBalance51);
		FindNLAccBal("53",RepSpec.ObjStr,"",0,"",RepSpec.sStartDate,0,0,false,"",0,"","",BeginBalance53);
		BeginBalance50n51 = BeginBalance50 + BeginBalance51;
		BeginBalance50n51n53 = BeginBalance50n51 + BeginBalance53;
		StartFormat(15);
		if CurrentCompany==3 then begin
		//Остаток на...
				OutString(0,0,"Остаток на " & RepSpec.sStartDate & ":",false);
			EndFormat;
			StartFormat(15);
				OutString(0,0,"",false);
				OutString(20,0,"Остаток общего счета",false);
				OutString(54,0,BeginBalance50n51n53,false);
				OutString(79,0,"AZN",false);
			EndFormat;
			StartFormat(15);
				OutString(0,0,"",false);
				OutString(20,0,"Деньги в офисе",false);
				OutString(54,0,BeginBalance53,false);
				OutString(79,0,"AZN",false);
			EndFormat;
			StartFormat(15);
			EndFormat;
		//Остаток на... по валютам
			tempBal = 0;
			for (i=0;i<curi;i=i+1) begin
				if left(CurList[i],3)=="USD" then begin
					FindNLAccBal("50",RepSpec.ObjStr,"",0,"",RepSpec.sStartDate,0,0,false,CurList[i],0,"","",tempBal);
					BeginBalance50USD = BeginBalance50USD + tempBal;
				end;
			end;
			tempBal = 0;
			for (i=0;i<curi;i=i+1) begin
				if left(CurList[i],3)=="EUR" then begin
					FindNLAccBal("50",RepSpec.ObjStr,"",0,"",RepSpec.sStartDate,0,0,false,CurList[i],0,"","",tempBal);
					BeginBalance50EUR = BeginBalance50EUR + tempBal;
				end;
			end;
			tempBal = 0;
			for (i=0;i<curi;i=i+1) begin
				if left(CurList[i],3)=="AZN" then begin
					FindNLAccBal("50",RepSpec.ObjStr,"",0,"",RepSpec.sStartDate,0,0,false,CurList[i],0,"","",tempBal);
					BeginBalance50AZN = BeginBalance50AZN + tempBal;
				end;
			end;
			if ((BeginBalance50USD!=0) or (BeginBalance50EUR!=0) or (BeginBalance51!=0)) then begin
				if (BeginBalance50USD!=0) then begin
					StartFormat(15);
						OutString(0,0,"Остаток на " & RepSpec.sStartDate & " по валютам:",false);
						OutString(20,0,"",false);
						OutString(54,0,BeginBalance50USD,false);
						OutString(79,0,"USD",false);
					EndFormat;
				end;
				if (BeginBalance50EUR!=0) then begin
					StartFormat(15);
						OutString(0,0,"",false);
						OutString(20,0,"",false);
						OutString(54,0,BeginBalance50EUR,false);
						OutString(79,0,"EUR",false);
					EndFormat;
				end;
				if (BeginBalance50AZN!=0) then begin
					StartFormat(15);
						OutString(0,0,"",false);
						OutString(20,0,"",false);
						OutString(54,0,BeginBalance50AZN,false);
						OutString(79,0,"AZN",false);
					EndFormat;
				end;
				if (BeginBalance51!=0) then begin
					StartFormat(15);
						OutString(0,0,"",false);
						OutString(20,0,"",false);
						OutString(54,0,BeginBalance51,false);
						OutString(79,0,"AZN терминал",false);
					EndFormat;
				end;
				StartFormat(15);
				EndFormat;
			end;
		end else begin
			tempBal = 0;
			for (i=0;i<curi;i=i+1) begin
				if left(CurList[i],3)=="AZN" then begin
					FindNLAccBal("50",RepSpec.ObjStr,"",0,"",RepSpec.sStartDate,0,0,false,CurList[i],0,"","",tempBal);
					BeginBalance50AZN = BeginBalance50AZN + tempBal;
				end;
			end;
			if ((BeginBalance50AZN!=0) or (BeginBalance51!=0)) then begin
				StartFormat(15);
					OutString(0,0,"Остаток на " & RepSpec.sStartDate & " по валютам:",false);
				EndFormat;
				if (BeginBalance50AZN!=0) then begin
					StartFormat(15);
						OutString(0,0,"",false);
						OutString(20,0,"",false);
						OutString(54,0,BeginBalance50AZN,false);
						OutString(79,0,"AZN",false);
					EndFormat;
				end;
				if (BeginBalance51!=0) then begin
					StartFormat(15);
						OutString(0,0,"",false);
						OutString(20,0,"",false);
						OutString(54,0,BeginBalance51,false);
						OutString(79,0,"AZN терминал",false);
					EndFormat;
				end;
				StartFormat(15);
				EndFormat;
			end;
		end;
		Black_Divider(0,1);
	//Шапка таблицы
		
		if step==24 then begin
			StartFormat(15);
				OutString(0,0,"Дата",false);
				OutString(20,0,"",false);
				OutString(44,0,"",false); 
				OutStringCut(69,93,0,"Поступления",true,0);
					//OutStringCut(integer x, integer y,
					//			   integer und, string str,
					//			   boolean bool, integer ovst)
					//x    - начальная координата ячейки, в которую печатается
					//y    - конечная координата ячейки
					//und  - подчеркивание: 0 - нет / !=0 - да
					//str  - строка для вывода
					//bool - перенос ?
					//ovst - зачеркивание: 0-нет / !=0-да
				OutString(93,0,"",false);
				OutString(118,0,"",false);
				OutString(142,0,"",false);
				OutString(167,0,"",false);
				OutStringCut(191,216,0,"Конвертация/банк",true,0);
				OutString(216,0,"",false);
				OutString(240,0,"",false);
				OutString(265,0,"",false);
				OutString(289,0,"",false);
				OutStringCut(314,338,0,"Расходы",true,0);
				OutString(338,0,"",false);
				OutString(363,0,"",false);
				OutStringCut(415,480,0,"Примечание",false,0);
			EndFormat;
			Black_Divider(20,140);
			Black_Divider(144,263);
			Black_Divider(267,388);
			Black_Divider(392,480);
		end;
		if step==31 then begin
			StartFormat(15);
				OutString(0,0,"Дата",false);
				
				OutString(20,0,"",false);
				OutString(44,0,"",false); 
				OutString(69,0,"Поступления",false);
				OutString(180,0,"",false);
				
				OutString(182,0,"",false);
				OutString(183,0,"",false);
				OutString(191,0,"Конвертация/банк",false);
				OutString(298,0,"",false);
				
				OutString(299,0,"",false);
				OutString(300,0,"",false);
				OutString(314,0,"Расходы",false);
				OutString(400,0,"",false);
				
				OutString(415,0,"Примечание",false);
			EndFormat;
			Black_Divider(20,140);
			Black_Divider(144,263);
			Black_Divider(267,388);
			Black_Divider(392,480);
		end;
		if step==43 then begin
			StartFormat(15);
				OutString(0,0,"Дата",false);
				
				OutString(20,0,"",false);
				OutString(69,0,"Поступления",false);
				OutString(175,0,"",false);
				
				OutString(180,0,"",false);
				OutString(191,0,"Конвертация/банк",false);
				OutString(295,0,"",false);
				
				OutString(300,0,"",false);
				OutString(314,0,"Расходы",false);
				OutString(400,0,"",false);
				
				OutString(415,0,"Примечание",false);
			EndFormat;
			Black_Divider(20,140);
			Black_Divider(144,263);
			Black_Divider(267,388);
			Black_Divider(392,480);
		end;
		if step==57 then begin
			StartFormat(15);
				OutString(0,0,"Дата",false);
				
				OutString(20,0,"",false);
				OutString(50,0,"Поступления",false);
				
				OutString(160,0,"",false);
				OutString(165,0,"Конвертация/банк",false);
				
				OutString(270,0,"",false);
				OutString(285,0,"Расходы",false);
				
				OutString(415,0,"Примечание",false);
			EndFormat;
			Black_Divider(20,130);
			Black_Divider(134,240);
			Black_Divider(246,388);
			Black_Divider(392,480);
		end;
		if step==114 then begin
			StartFormat(15);
				OutString(0,0,"Дата",false);
				
				OutString(69,0,"Поступления",false);
				
				OutString(191,0,"Конвертация/банк",false);
				
				OutString(314,0,"Расходы",false);
				
				OutString(415,0,"Примечание",false);
			EndFormat;
			Black_Divider(20,130);
			Black_Divider(134,240);
			Black_Divider(246,388);
			Black_Divider(392,480);
		end;
		
		StartFormat(15);
			OutString(tab[1],0,"",false);
			if terf then begin
				OutString(tab[2],0,"AZN терминал",false);
			end;
			if aznf then begin
				OutString(tab[3],0,"AZN",false); 
			end;
			if eurf then begin
				OutString(tab[4],0,"EUR",false);
			end;
			if usdf then begin
				OutString(tab[5],0,"USD",false);
			end;
			if basef then begin
				OutString(tab[6],0,"В осн. валюте",false);
			end;
			if terf then begin
				OutString(tab[7],0,"AZN терминал",false);
			end;
			if aznf then begin
				OutString(tab[8],0,"AZN",false);
			end;
			if eurf then begin
				OutString(tab[9],0,"EUR",false);
			end;
			if usdf then begin
				OutString(tab[10],0,"USD",false);
			end;
			if basef then begin
				OutString(tab[11],0,"В осн. валюте",false);
			end;
			if terf then begin
				OutString(tab[12],0,"AZN терминал",false);
			end;
			if aznf then begin
				OutString(tab[13],0,"AZN",false);
			end;
			if eurf then begin
				OutString(tab[14],0,"EUR",false);
			end;
			if usdf then begin
				OutString(tab[15],0,"USD",false);
			end;
			if basef then begin
				OutString(tab[16],0,"В осн. валюте",false);
			end;
			OutString(tab[17],0,"Докум.",false);
			OutString(tab[18],0,"Коммент.",false);
		EndFormat;

		rwcnt = MatRowCnt(tempTRr);
		for (i=0;i<rwcnt;i=i+1) begin
			MatRowGet(tempTRr,i,tempTRrw);
			if (tempTRrw.ReconDate <> tempDate) then begin
				Black_Divider(0,1);
				StartFormat(15);
					OutString(tab[1],0,tempTRrw.ReconDate,false);
				tempDate = tempTRrw.ReconDate;
				firstprint = true;
			end;
			if (firstprint) then begin
				firstprint = false;
			end else begin
				Gray_Divider(0,1);
				StartFormat(15);
					OutString(tab[1],0,"",false);
			end;
			switch (tempTRrw.Curncy) begin
				case "AZN":
					AZNDeb = AZNDeb + tempTRrw.CurDebVal;
					AZNCred = AZNCred + tempTRrw.CurCredVal;
					convtotal2 = convtotal2 + tempTRrw.MyVal1;
					if terf then begin
						OutString(tab[2],0,"",false);
					end;
					if aznf then begin
						OutString(tab[3],0,tempTRrw.CurDebVal,false);
					end;
					if eurf then begin
						OutString(tab[4],0,"",false);
					end;
					if usdf then begin
						OutString(tab[5],0,"",false);
					end;
					if basef then begin
						OutString(tab[6],0,tempTRrw.DebVal,false);
					end;
					if terf then begin
						OutString(tab[7],0,"",false);
					end;
					if aznf then begin
						OutString(tab[8],0,tempTRrw.MyVal1,false); 
					end;
					if eurf then begin
						OutString(tab[9],0,"",false);
					end;
					if usdf then begin
						OutString(tab[10],0,"",false);
					end;
					if basef then begin
						OutString(tab[11],0,tempTRrw.MyVal2,false);
					end;
					if terf then begin
						OutString(tab[12],0,"",false);
					end;
					if aznf then begin
						OutString(tab[13],0,tempTRrw.CurCredVal,false);
					end;
					if eurf then begin
						OutString(tab[14],0,"",false);
					end;
					if usdf then begin
						OutString(tab[15],0,"",false);
					end;
					if basef then begin
						OutString(tab[16],0,tempTRrw.CredVal,false);
					end;
				case "EUR":
					EURDeb = EURDeb + tempTRrw.CurDebVal;
					EURCred = EURCred + tempTRrw.CurCredVal;
					convtotal3 = convtotal3 + tempTRrw.MyVal1;
					if terf then begin
						OutString(tab[2],0,"",false);
					end;
					if aznf then begin
						OutString(tab[3],0,"",false);
					end;
					if eurf then begin
						OutString(tab[4],0,tempTRrw.CurDebVal,false);
					end;
					if usdf then begin
						OutString(tab[5],0,"",false);
					end;
					if basef then begin
						OutString(tab[6],0,tempTRrw.DebVal,false);
					end;
					if terf then begin
						OutString(tab[7],0,"",false);
					end;
					if aznf then begin
						OutString(tab[8],0,"",false); 
					end;
					if eurf then begin
						OutString(tab[9],0,tempTRrw.MyVal1,false);
					end;
					if usdf then begin
						OutString(tab[10],0,"",false);
					end;
					if basef then begin
						OutString(tab[11],0,tempTRrw.MyVal2,false);
					end;
					if terf then begin
						OutString(tab[12],0,"",false);
					end;
					if aznf then begin
						OutString(tab[13],0,"",false);
					end;
					if eurf then begin
						OutString(tab[14],0,tempTRrw.CurCredVal,false);
					end;
					if usdf then begin
						OutString(tab[15],0,"",false);
					end;
					if basef then begin
						OutString(tab[16],0,tempTRrw.CredVal,false);
					end;
				case "USD":
					USDDeb = USDDeb + tempTRrw.CurDebVal;
					USDCred = USDCred + tempTRrw.CurCredVal;
					convtotal4 = convtotal4 + tempTRrw.MyVal1;	
					if terf then begin
						OutString(tab[2],0,"",false);
					end;
					if aznf then begin
						OutString(tab[3],0,"",false);
					end;
					if eurf then begin
						OutString(tab[4],0,"",false);
					end;
					if usdf then begin
						OutString(tab[5],0,tempTRrw.CurDebVal,false);
					end;
					if basef then begin
						OutString(tab[6],0,tempTRrw.DebVal,false);
					end;
					if terf then begin
						OutString(tab[7],0,"",false);
					end;
					if aznf then begin
						OutString(tab[8],0,"",false); 
					end;
					if eurf then begin
						OutString(tab[9],0,"",false);
					end;
					if usdf then begin
						OutString(tab[10],0,tempTRrw.MyVal1,false);
					end;
					if basef then begin
						OutString(tab[11],0,tempTRrw.MyVal2,false);
					end;
					if terf then begin
						OutString(tab[12],0,"",false);
					end;
					if aznf then begin
						OutString(tab[13],0,"",false);
					end;
					if eurf then begin
						OutString(tab[14],0,"",false);
					end;
					if usdf then begin
						OutString(tab[15],0,tempTRrw.CurCredVal,false);
					end;
					if basef then begin
						OutString(tab[16],0,tempTRrw.CredVal,false);
					end;
				case "TER":
					AZNTermDeb = AZNTermDeb + tempTRrw.CurDebVal;
					AZNTermCred = AZNTermCred + tempTRrw.CurCredVal;
					convtotal1 = convtotal1 + tempTRrw.MyVal1;
					if terf then begin
						OutString(tab[2],0,tempTRrw.CurDebVal,false);
					end;
					if aznf then begin
						OutString(tab[3],0,"",false);
					end;
					if eurf then begin
						OutString(tab[4],0,"",false);
					end;
					if usdf then begin
						OutString(tab[5],0,"",false);
					end;
					if basef then begin
						OutString(tab[6],0,tempTRrw.DebVal,false);
					end;
					if terf then begin
						OutString(tab[7],0,tempTRrw.MyVal1,false);
					end;
					if aznf then begin
						OutString(tab[8],0,"",false); 
					end;
					if eurf then begin
						OutString(tab[9],0,"",false);
					end;
					if usdf then begin
						OutString(tab[10],0,"",false);
					end;
					if basef then begin
						OutString(tab[11],0,tempTRrw.MyVal2,false);
					end;
					if terf then begin
						OutString(tab[12],0,tempTRrw.CurCredVal,false);
					end;
					if aznf then begin
						OutString(tab[13],0,"",false);
					end;
					if eurf then begin
						OutString(tab[14],0,"",false);
					end;
					if usdf then begin
						OutString(tab[15],0,"",false);
					end;
					if basef then begin
						OutString(tab[16],0,tempTRrw.CredVal,false);
					end;
				case "IVV":
					if terf then begin
						OutString(tab[2],0,tempTRrw.NomVal,false);
					end;
					AZNTermDeb = AZNTermDeb + tempTRrw.NomVal;
					if aznf then begin
						OutString(tab[3],0,tempTRrw.CredVal2,false);
					end;
					AZNDeb = AZNDeb + tempTRrw.CredVal2;
					if eurf then begin
						OutString(tab[4],0,tempTRrw.DebVal2,false);
					end;
					EURDeb = EURDeb + tempTRrw.DebVal2;
					if usdf then begin
						OutString(tab[5],0,tempTRrw.Qty,false);
					end;
					USDDeb = USDDeb + tempTRrw.Qty;
					if basef then begin
						OutString(tab[6],0,tempTRrw.DebVal,false);
					end;
					if terf then begin
						OutString(tab[7],0,"",false);
					end;
					if aznf then begin
						OutString(tab[8],0,"",false); 
					end;
					if eurf then begin
						OutString(tab[9],0,"",false);
					end;
					if usdf then begin
						OutString(tab[10],0,"",false);
					end;
					if basef then begin
						OutString(tab[11],0,"",false);
					end;
					if terf then begin
						OutString(tab[12],0,"",false);
					end;
					if aznf then begin
						OutString(tab[13],0,"",false);
					end;
					if eurf then begin
						OutString(tab[14],0,"",false);
					end;
					if usdf then begin
						OutString(tab[15],0,"",false);
					end;
					if basef then begin
						OutString(tab[16],0,"",false);
					end;
			end;
			BaseDeb = BaseDeb + tempTRrw.DebVal;
			BaseCred = BaseCred + tempTRrw.CredVal;
			convtotal5 = convtotal5 + tempTRrw.MyVal2;
			
			switch (FirstTransTypeInRange(tempTRrw.Comment)) begin
				case IVYc:
					OutStringID(tab[17],"DblIVVc",tempTRrw.Comment,false,FirstTransInRange(tempTRrw.Comment));
				case IPYc:
					OutStringID(tab[17],"DblIPVcID",tempTRrw.Comment,false,FirstTransInRange(tempTRrw.Comment));
				case CLInYc:
					OutStringID(tab[17],"DblCLInID",tempTRrw.Comment,false,FirstTransInRange(tempTRrw.Comment));
				case CLOutYc:
					OutStringID(tab[17],"DblCLOutID",tempTRrw.Comment,false,FirstTransInRange(tempTRrw.Comment));
				otherwise
					OutStringID(tab[17],"DblTrans",tempTRrw.Comment,false,CurrentCompany);
			end;
				OutString(tab[18],0,tempTRrw.ExtraComment,false);
			EndFormat;
		end;
		//Итого
		Black_Divider(0,1)
		StartFormat(15);
			OutString(tab[1],0,"Итого",false);
			if terf then begin
				OutString(tab[2],0,AZNTermDeb,false);
			end;
			if aznf then begin
				OutString(tab[3],0,AZNDeb,false);
			end;
			if eurf then begin
				OutString(tab[4],0,EURDeb,false);
			end;
			if usdf then begin
				OutString(tab[5],0,USDDeb,false);
			end;
			if basef then begin
				OutString(tab[6],0,BaseDeb,false);
			end;
			if terf then begin
				OutString(tab[7],0,convtotal1,false); 
			end;
			if aznf then begin
				OutString(tab[8],0,convtotal2,false); 
			end;
			if eurf then begin
				OutString(tab[9],0,convtotal3,false);
			end;
			if usdf then begin
				OutString(tab[10],0,convtotal4,false);
			end;
			if basef then begin
				OutString(tab[11],0,convtotal5,false);
			end;
			if terf then begin
				OutString(tab[12],0,AZNTermCred,false);
			end;
			if aznf then begin
				OutString(tab[13],0,AZNCred,false);
			end;
			if eurf then begin
				OutString(tab[14],0,EURCred,false);
			end;
			if usdf then begin
				OutString(tab[15],0,USDCred,false);
			end;
			if basef then begin
				OutString(tab[16],0,BaseCred,false);
			end;
		EndFormat;
		Gray_Divider(0,1)
		StartFormat(15);
		EndFormat;
		//Оборот\Расход AZN
		StartFormat(15);
			OutString(0,0,"",false);
			OutString(20,0,"Оборот AZN:",false);
			OutString(44,0,BaseDeb - BaseDebErr,false);
			OutString(69,0,"",false);
			OutString(93,0,"",false);
			OutString(118,0,"",false);
			OutString(142,0,"Расход AZN:",false);
			OutString(167,0,BaseCred - BaseCredErr,false);
		EndFormat;
		StartFormat(15);
		EndFormat;
		// Табл. 2,3
		Black_Divider(20,93);
		Black_Divider(142,216);
		StartFormat(15);
			OutString(0,0,"",false);
			OutString(20,0,"Касса",false);
			OutString(44,0,"Сумма",false);
			OutString(69,0,"Валюта",false);
			OutString(93,0,"",false);
			OutString(118,0,"",false);
			OutString(142,0,"Терминал",false);
			OutString(167,0,"Сумма",false);
			OutString(191,0,"Валюта",false);
		EndFormat;
		Black_Divider(20,93);
		Black_Divider(142,216);
		StartFormat(15);
			OutString(0,0,"",false);
			OutString(20,0,"Приход",false);// Касса - Приход
			OutString(44,0,BaseDeb - AZNTermDeb - BaseDebErr,false);
			OutString(69,0,"AZN",false);
			OutString(93,0,"",false);
			OutString(118,0,"",false);
			OutString(142,0,"Приход",false);
			OutString(167,0,AZNTermDeb,false);
			OutString(191,0,"AZN",false);
		EndFormat;
		Gray_Divider(20,93);
		Gray_Divider(142,216);
		StartFormat(15);
			OutString(0,0,"",false);
			OutString(20,0,"Расход",false);// Касса - Расход
			OutString(44,0,BaseCred - AZNTermCred - BaseCredErr,false);
			OutString(69,0,"AZN",false);
			OutString(93,0,"",false);
			OutString(118,0,"",false);
			OutString(142,0,"Расход",false);
			OutString(167,0,AZNTermCred,false);
			OutString(191,0,"AZN",false);
		EndFormat;
		Gray_Divider(20,93);
		Gray_Divider(142,216);
		SaldoEndPeriodAZNTerm = BeginBalance51 + AZNTermDeb - AZNTermCred + convtotal1;// Edit ************************** Thursday, 27 August 2015 15:22:19
		StartFormat(15);
			OutString(0,0,"",false);
			OutString(20,0,"Конв/банк",false);
			OutString(44,0,convtotal2,false);
			OutString(69,0,"AZN",false);
			OutString(93,0,"",false);
			OutString(118,0,"",false);
			OutString(142,0,"Конв/банк",false);
			OutString(167,0,convtotal1,false);
			OutString(191,0,"AZN",false);
		EndFormat;
		Gray_Divider(20,93);
		StartFormat(15);
			OutString(0,0,"",false);
			OutString(20,0,"Сдано",false);
			OutString(44,0,Bal53,false);
			OutString(69,0,"AZN",false);
			OutString(93,0,"",false);
			OutString(118,0,"",false);
			OutString(142,0,"Остаток",false);
			OutString(167,0,SaldoEndPeriodAZNTerm,false);
			OutString(191,0,"AZN",false);
		EndFormat;
		Black_Divider(142,216);
		if (CurrentCompany == 3) or (BalItem1 != 0) then begin
			Gray_Divider(20,93);
			StartFormat(15);
				OutString(0,0,"",false);
				OutString(20,0,"Приход за товар",false);
				OutString(44,0,BalItem1,false);
				OutString(69,0,"AZN",false);
			EndFormat;
		end;
		if (CurrentCompany == 3) or (BalItem2 != 0) then begin
			Gray_Divider(20,93);
			StartFormat(15);
				OutString(0,0,"",false);
				OutString(20,0,"Расход за товар",false);
				OutString(44,0,BalItem2,false);
				OutString(69,0,"AZN",false);
			EndFormat;
		end;
		Black_Divider(20,93);
	// к сдаче
		SaldoEndPeriod = BeginBalance50n51 + BaseDeb - BaseCred + convtotal5;// Edit ************************** Thursday, 27 August 2015 15:22:15
		SaldoEndPeriodUSD = BeginBalance50USD + USDDeb - USDCred + convtotal4;// Edit ************************** Thursday, 27 August 2015 15:22:15
		SaldoEndPeriodEUR = BeginBalance50EUR + EURDeb - EURCred + convtotal3;// Edit ************************** Thursday, 27 August 2015 15:22:16
		SaldoEndPeriodAZN = BeginBalance50AZN + AZNDeb - AZNCred + convtotal2;// Edit ************************** Thursday, 27 August 2015 15:22:17
		if (CurrentCompany == 3) or (kursovaya != 0) then begin
			StartFormat(15);
				OutString(0,0,"",false);
				OutString(20,0,"К сдаче",false);
				OutString(44,0,SaldoEndPeriod - kursovaya,false);
				OutString(69,0,"AZN",false);
			EndFormat;
			StartFormat(15);
				OutString(0,0,"",false);
				OutString(20,0,"Курсовая",false);
				OutString(44,0,kursovaya,false);
				OutString(69,0,"AZN",false);
			EndFormat;
			Black_Divider(20,93);
		end;
		StartFormat(15);
			OutString(0,0,"",false);
			OutString(20,0,"К сдаче",false);
			OutString(44,0,SaldoEndPeriod,false);
			OutString(69,0,"AZN",false);
		EndFormat;
		
		StartFormat(15);
		EndFormat;
		StartFormat(15);
			OutString(0,0,"",false);
			OutString(20,0,"К сдаче по валютам",false);
			OutString(44,0,"",false);
			OutString(69,0,"",false);
		EndFormat;
		if (CurrentCompany == 3) or (SaldoEndPeriodUSD != 0) then begin
			StartFormat(15);
				OutString(0,0,"",false);
				OutString(20,0,"",false);
				OutString(44,0,SaldoEndPeriodUSD,false);
				OutString(69,0,"USD",false);
			EndFormat;
		end;
		if (CurrentCompany == 3) or (SaldoEndPeriodEUR != 0) then begin
			StartFormat(15);
				OutString(0,0,"",false);
				OutString(20,0,"",false);
				OutString(44,0,SaldoEndPeriodEUR,false);
				OutString(69,0,"EUR",false);
			EndFormat;
		end;
		if (CurrentCompany == 3) or (SaldoEndPeriodAZN != 0) then begin
			StartFormat(15);
				OutString(0,0,"",false);
				OutString(20,0,"",false);
				OutString(44,0,SaldoEndPeriodAZN,false);
				OutString(69,0,"AZN",false);
			EndFormat;
		end;
		if (CurrentCompany == 3) or (SaldoEndPeriodAZNTerm != 0) then begin
			StartFormat(15);
				OutString(0,0,"",false);
				OutString(20,0,"",false);
				OutString(44,0,SaldoEndPeriodAZNTerm,false);
				OutString(69,0,"AZN терминал",false);
			EndFormat;
		end;
		if (CurrentCompany == 3) then begin
			StartFormat(15);
			EndFormat;
			StartFormat(15);
				OutString(0,0,"",false);
				OutString(20,0,"Деньги в офисе",false);
				FindNLAccBal("53",RepSpec.ObjStr,"",0,"",AddDay(RepSpec.sEndDate,1),0,0,false,"",0,"","",SaldoEndPeriod53);
				OutString(44,0,SaldoEndPeriod53,false);
				OutString(69,0,"AZN",false);
			EndFormat;
			StartFormat(15);
				OutString(0,0,"",false);
				OutString(20,0,"Остаток общего счета",false);
				OutString(44,0,SaldoEndPeriod + SaldoEndPeriod53,false);
				OutString(69,0,"AZN",false);
			EndFormat;
		end;
	EndJob;
	
	return;
end;