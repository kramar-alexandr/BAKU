external function Boolean CheckVARSubsets(record VARVc,string,string);
external function Integer FindYVars(string,string,string);
external procedure ExtractObj(string,var Integer,var string);
external function Boolean FindItemVAR(string,var string,var string,var string,var string);
external procedure GetITName(string,string,var string);
external function roundmode DefaultRoundMode();
external function val DivWithRateToBase1(var string,Date,val,roundmode);
external function val MulWithRateToBase1(var string,Date,val,roundmode);
external function val FindVAT(string,val,Integer,Integer);
external function val GetStockQty(string,string,Date,Boolean);
external procedure GetItemVATCode(string,Integer,var string,Boolean);
external function Boolean GetItemNameStr(Integer,var string,string,string,string);
external procedure HTSort1(Integer, var string);
external procedure HTArtSel(string,string,var string);

function Boolean AnyVarietyInPriceList(record INVc INr,string pricelist)
begin
  Boolean res;
  record ItemStatusVc ISr;
  Boolean found;
  record PLVc PLLr;  

  ISr.Location = ";;;";
  ISr.Code = INr.Code;
  found = true;
  while (LoopKey("Location",ISr,2,found)) begin
    if (ISr.Location!=";;;") then begin found = false; end;
    if (ISr.Code!=INr.Code) then begin found = false; end;
    if (found) then begin
      PLLr.PLCode = pricelist;
      PLLr.ArtCode = ISr.Code & ISr.Variety;
      res = ReadFirstMain(PLLr,2,true);
      if (res==true) then begin
        goto LAnyVarietyInPriceList;
      end;
    end;
  end;
LAnyVarietyInPriceList:;  
  AnyVarietyInPriceList = res;
  return;
end;            

procedure PrintItemPrice(record RcVc RepSpec,string artcode,record INVc INr,Boolean varf,string curncycode,Integer vatflag,
                         var Boolean itemout,var string lastgroup)
begin
  val upricv;
  val upric,t,t2;
  Boolean plhit,pricef;
  String 200 namestr,vatc,tstr;
  record PLVc PLLr;  
  record ITVc ITr;
  roundmode rnd;// Edit ************************** Thursday, 30 March 2017 17:29:13
  
  rnd = DefaultCurRoundOff;// Edit ************************** Thursday, 30 March 2017 17:29:11
  rnd.decimals = 0;// Edit ************************** Thursday, 30 March 2017 17:29:12
  
  upricv = 0;
  if (GetItemNameStr(1,namestr,RepSpec.Stext,INr.Name,INr.Code)) then begin end;
  itemout = true;
  upric = INr.UPrice1;
  GetItemVATCode(INr.Code,0,vatc,true);
  plhit = true;
  pricef = false;
  if (nonblank(RepSpec.f2)) begin
    PLLr.PLCode = RepSpec.f2;
    if (RepSpec.flags[7]!=0) then begin
      PLLr.ArtCode = artcode;
      plhit = ReadFirstMain(PLLr,2,true);
    end else begin
      if (varf) then begin
        plhit = AnyVarietyInPriceList(INr,RepSpec.f2);
      end else begin
        PLLr.ArtCode = INr.Code;
        plhit = ReadFirstMain(PLLr,2,true);
      end;
    end;
    if (plhit) then begin 
      upric = PLLr.ExVatPrice;           
      if (RepSpec.flags[6]==1) then begin
         upric = DivWithRateToBase1(curncycode,CurrentDate,upric,DefaultCurRoundOff);
      end;
      pricef = true;
    end;
    if (RepSpec.flags[5]==0) then begin
      plhit = true;
    end;
  end;
  if (plhit) then begin
    if (vatflag==0) then begin
      upricv = FindVAT(vatc,upric,0,0);
      upricv = upric + upricv;
    end else begin
      upricv = upric;
      upric = FindVAT(vatc,upricv,1,0);
      upric = upricv - upric;
    end;
  end;
  if (pricef==false) then begin
    if (nonblank(RepSpec.f2)) begin
      if (nonblank(curncycode)) begin
        upric = DivWithRateToBase1(curncycode,CurrentDate,upric,DefaultCurRoundOff);
        upricv = DivWithRateToBase1(curncycode,CurrentDate,upricv,DefaultCurRoundOff);
      end;
    end;
  end;        
  if (RepSpec.flags[4]<>0) then begin 
    if (GetStockQty(artcode,"",CurrentDate,false)==0) then begin
      plhit = false; 
    end;
    if (upric==0) then begin
      plhit = false; 
    end;
  end;
  if (plhit) then begin
    if (RepSpec.flags[3]==0) then begin
      if (RepSpec.flags[2]==1) then begin
        if (lastgroup<>INr.Group) then begin
          if (itemout==true) then begin
            Gray_Divider(0,1);
          end;  
          StartFormat(15);
          OutString(20,0,INr.Group,false);
          GetITName(INr.Group,RepSpec.Stext,tstr);
          OutString(100,0,tstr,false);
          EndFormat;
          Gray_Divider(0,1);
          lastgroup = INr.Group;
        end;
      end;   
      StartFormat(15);
      OutString(0,0,PLLr.PLCode,false);// Edit ************************** Thursday, 30 March 2017 17:31:09
      OutString(0,"DblINVc",artcode,false);
      //OutString(2,0,namestr,false);
      //OutString(3,0,INr.Unittext,false);
      if(nonblank(PLLr.CurncyCode) and PLLr.CurncyCode=="EUR")then begin
      	OutVal(4,0,round(upric*1.95,rnd),M423Val,true);
      end else begin
      	OutVal(4,0,upric,M423Val,true);
      end;
      OutString(3,0,PLLr.CurncyCode,false);
      
      if (RepSpec.flags[9]==1) then begin
        OutVal(4,0,upric,M423Val,true);
      end;  
      if (RepSpec.flags[8]==1) then begin
        OutVal(1,0,upricv,M423Val,true);
      end;  
      EndFormat;
    end;
    if (RepSpec.flags[3]==1) then begin
      if (RepSpec.flags[2]==1) then begin
        if (lastgroup<>INr.Group) then begin
          if (itemout==true) then begin
            Gray_Divider(0,1);
          end;  
          StartFormat(15);
          OutString(20,0,INr.Group,false);
          ITr.Code = INr.Group;
          if (ReadFirstMain(ITr,1,true)) then begin
            OutString(100,0,ITr.Comment,false);
          end;  
          EndFormat;
          Gray_Divider(0,1);
          lastgroup=INr.Group;
        end;
      end;          
      StartFormat(15);
      OutString(0,"DblINVc",artcode,false);
      OutString(60,0,namestr,false);
      if (RepSpec.flags[9]==0) then begin
        OutVal(270,0,upricv,M423Val,true);
      end else begin
        OutVal(270,0,upric,M423Val,true);
      end;  
      OutVal(345,0,INr.InPrice,M423Val,true);
      t2 = upric - INr.InPrice;
      OutVal(420,0,t2,M423Val,true);
      t = t2 * 100;
      t = t / upric;
      t = Round(t,DefaultRoundMode);
      OutVal(480,0,t,M4UVal,true);
      EndFormat;
    end;
  end;
  return;  
end;            

procedure PrintItemWithOneVariety(string group,record RcVc RepSpec,record INVc INr,Boolean varf,string curncycode,Integer vatflag,string itsz,string mask,string mskrep,string subsets,
                                 var Boolean itemout,var string lastgroup)
begin
  record VARVc VARr;
  Boolean found,testf;
  Integer insz;
  string 255 artcode,itemcode;
  record INVc tmpINr;

  tmpINr = INr;
  itemcode = tmpINr.Code;
  if (itsz!=".") then begin
    insz = StringToInt(itsz);
  end;
  found = true;
  VARr.VARGCode = group;
  while (LoopKey("VARGCode",VARr,1,found)) begin
    if (VARr.VARGCode!=group) then begin
      found = false;
    end;
    if (found) then begin
      if (itsz!=".") then begin
        artcode = itemcode & VARr.Code;
      end else begin
        artcode = itemcode & itsz & VARr.Code;
      end;      
      testf = true;
      if (nonblank(subsets)) then begin
        if (CheckVARSubsets(VARr,subsets,mask)==false) then begin
          testf = false;
        end;
      end;
      if (testf) then begin
        INr.Name = tmpINr.Name & ", "  & VARr.Comment;
        PrintItemPrice(RepSpec,artcode,INr,varf,curncycode,vatflag,itemout,lastgroup);        
      end;
    end;
  end;
  return;
end;
      
procedure PrintItemWithTwoVarieties(string group1,string group2,record RcVc RepSpec,record INVc INr,Boolean varf,string curncycode,Integer vatflag,string itsz,string mask,string mskrep,string subsets,
                                 var Boolean itemout,var string lastgroup)
begin
  record VARVc VARr1;
  Boolean found1,testf;
  record VARVc VARr2;
  Boolean found2;
  Integer insz;
  string 255 artcode,artcode1,itemcode,itsz1,itsz2;
  record VARGVc VARGr;
  record INVc tmpINr;

  tmpINr = INr;
  itemcode = tmpINr.Code;
  found1 = true;
  VARr1.VARGCode = group1;
  while (LoopKey("VARGCode",VARr1,1,found1)) begin
    if (VARr1.VARGCode!=group1) then begin
      found1 = false;
    end;
    if (found1) then begin
      VARGr.Code = VARr1.VARGCode;
      ReadFIrstMain(VARGr,1,true);
      itsz1 = VARGr.VarSize;
      if (itsz1!=".") then begin
        insz = StringToInt(itsz1);
      end;
      if (itsz1!=".") then begin
        artcode = itemcode & VARr1.Code;
      end else begin
        artcode = itemcode & itsz1 & VARr1.Code;
      end;      
      artcode1 = artcode;
      testf = true;
      if (nonblank(subsets)) then begin
        if (CheckVARSubsets(VARr1,subsets,mask)==false) then begin
          testf = false;
        end;
      end;
      
      if (testf) then begin
        ResetLoop(VARr2);
        found2 = true;
        VARr2.VARGCode = group2;
        while (LoopKey("VARGCode",VARr2,1,found2)) begin
          if (VARr2.VARGCode!=group2) then begin
            found2 = false;
          end;
          if (found2) then begin  
            artcode = artcode1;
            VARGr.Code = VARr2.VARGCode;
            ReadFIrstMain(VARGr,1,true);
            itsz2 = VARGr.VarSize;
            if (itsz2!=".") then begin
              itsz2 = StringToInt(itsz2);
            end;
            if (itsz2!=".") then begin
              artcode = artcode & VARr2.Code;
            end else begin
              artcode = artcode & itsz2 & VARr2.Code;
            end;      
            tmpINr.Code = artcode;
            testf = true;
            if (nonblank(subsets)) then begin
              if (CheckVARSubsets(VARr2,subsets,mask)==false) then begin
                testf = false;
              end;
            end;
            if (testf) then begin
              INr.Name = tmpINr.Name & ", "  & VARr1.Comment & ", "  & VARr2.Comment;
              PrintItemPrice(RepSpec,artcode,INr,varf,curncycode,vatflag,itemout,lastgroup);        
            end;
          end;
        end;
      end;
    end;
  end;
  return;
end;

procedure PrintItemWithThreeVarieties(string group1,string group2,string group3,record RcVc RepSpec,record INVc INr,Boolean varf,string curncycode,Integer vatflag,string itsz,string mask,string mskrep,string subsets,
                                   var Boolean itemout,var string lastgroup)
begin
  record VARVc VARr1;
  Boolean found1;
  record VARVc VARr2;
  Boolean found2;
  record VARVc VARr3;
  Boolean found3,testf;
  record VARGVc VARGr;
  Integer insz1,insz2,insz3;
  string 255 artcode,artcode1,artcode2,itemcode,itemname,itsz1,itsz2,itsz3;
  record INVc tmpINr;

  tmpINr = INr;
  itemcode = tmpINr.Code;
  found1 = true;
  VARr1.VARGCode = group1;
  while (LoopKey("VARGCode",VARr1,1,found1)) begin
    if (VARr1.VARGCode!=group1) then begin
      found1 = false;
    end;
    if (found1) then begin
      VARGr.Code = VARr1.VARGCode;
      ReadFIrstMain(VARGr,1,true);
      itsz1 = VARGr.VarSize;
      if (itsz1!=".") then begin
        insz1 = StringToInt(itsz1);
      end;
      if (itsz1!=".") then begin
        artcode = itemcode & VARr1.Code;
      end else begin
        artcode = itemcode & itsz1 & VARr1.Code;
      end;      
      artcode1 = artcode;
      testf = true;
      if (nonblank(subsets)) then begin
        if (CheckVARSubsets(VARr1,subsets,mask)==false) then begin
          testf = false;
        end;
      end;
      if (testf) then begin
        ResetLoop(VARr2);
        found2 = true;
        VARr2.VARGCode = group2;
        while (LoopKey("VARGCode",VARr2,1,found2)) begin
          if (VARr2.VARGCode!=group2) then begin
            found2 = false;
          end;
          if (found2) then begin  
            artcode = artcode1;
            VARGr.Code = VARr2.VARGCode;
            ReadFIrstMain(VARGr,1,true);
            itsz2 = VARGr.VarSize;
            if (itsz2!=".") then begin
              insz2 = StringToInt(itsz2);
            end;
            if (itsz2!=".") then begin
              artcode = artcode & VARr2.Code;
            end else begin
              artcode = artcode & itsz2 & VARr2.Code;
            end;      
            artcode2 = artcode;

            testf = true;
            if (nonblank(subsets)) then begin
              if (CheckVARSubsets(VARr2,subsets,mask)==false) then begin
                testf = false;
              end;
            end;
            if (testf) then begin
              ResetLoop(VARr3);
              found3 = true;
              VARr3.VARGCode = group3;
              while (LoopKey("VARGCode",VARr3,1,found3)) begin
                if (VARr3.VARGCode!=group3) then begin
                  found3 = false;
                end;
                if (found3) then begin
                  artcode = artcode2;
                  VARGr.Code = VARr3.VARGCode;
                  ReadFIrstMain(VARGr,1,true);
                  itsz2 = VARGr.VarSize;
                  if (itsz2!=".") then begin
                    insz2 = StringToInt(itsz2);
                  end;
                  if (itsz2!=".") then begin
                    artcode = artcode & VARr3.Code;
                  end else begin
                    artcode = artcode & itsz2 & VARr3.Code;
                  end;      
                  tmpINr.Code = artcode;
                  testf = true;
                  if (nonblank(subsets)) then begin
                    if (CheckVARSubsets(VARr3,subsets,mask)==false) then begin
                      testf = false;
                    end;
                  end;
                  if (testf) then begin
                    INr.Name = tmpINr.Name & ", "  & VARr1.Comment & ", "  & VARr2.Comment & ", "  & VARr3.Comment;
                    PrintItemPrice(RepSpec,artcode,INr,varf,curncycode,vatflag,itemout,lastgroup);        
                  end;
                end;
              end;
            end;
          end;
        end;
      end;
    end;
  end;
  return;
end;
        
procedure PrintItemVarietiesPrice(record RcVc RepSpec,record INVc INr,Boolean varf,string curncycode,Integer vatflag,string sz,string mask,string mskrep,string subsets,
                                  var Boolean itemout,var string lastgroup)
begin
  Boolean found;
  Integer nrofy,pos,i,cnt;
  Array string 20 ac;
  string 255 xpos,ypos,zpos,tstr;
  Array string 20 items;
  Array val itemqty;
  Integer isrs;
  string 255 variety;
  record INVc tmpINr;

  cnt = 0;
  pos = 0;
  for (i=0;i<20;i=i+1) begin
    ExtractObj(mask,pos,tstr);
    if (nonblank(tstr)) then begin
      ac[i] = tstr;
      cnt = cnt + 1;
    end else begin
      i = 20;
    end;
  end;
  if (cnt>0) then begin xpos = ac[0]; end;
  if (cnt>1) then begin ypos = ac[1]; end;
  if (cnt>2) then begin zpos = ac[2]; end;

  nrofy = FindYVars(ypos,subsets,mask);
  switch (cnt) begin
    case 1: PrintItemWithOneVariety(xpos,RepSpec,INr,varf,curncycode,vatflag,sz,mask,mskrep,subsets,itemout,lastgroup);
    case 2: PrintItemWithTwoVarieties(xpos,ypos,RepSpec,INr,varf,curncycode,vatflag,sz,mask,mskrep,subsets,itemout,lastgroup);
    case 3: PrintItemWithThreeVarieties(xpos,ypos,zpos,RepSpec,INr,varf,curncycode,vatflag,sz,mask,mskrep,subsets,itemout,lastgroup);
  end;
  return;  
end;            
        
global
procedure PriceRn(record RcVc RepSpec)
begin
  Integer rw;
  Integer keys;
  Integer vatflag;
  record INVc INr;
  record PLDefVc plr;
  record AccBlock ARAccRecp;
  val t,t2;
  String 50 fromart,toart;
  String 20 frcc,tocc;
  String 20 ckey;
  String 200 tstr;
  String 50 lastgroup;
  String 10 curncycode;
  Boolean itemout;
  Boolean testf;
  Boolean TrHs;
  Boolean varf;
  string 60 sz,msk,mskrep;  
  string 200 varsubset;  

  fromart = FirstInRange(RepSpec.f1,20);
  toart =  LastInRange(RepSpec.f1,20);
  frcc = FirstInRange(RepSpec.f3,5);
  tocc =  LastInRange(RepSpec.f3,5);
  vatflag = 0;
  lastgroup = "";
  rw = 1;
  if (nonblank(RepSpec.f2)) then begin
    plr.Code = RepSpec.f2;
    if (ReadFirstMain(plr,1,true)) then begin
      vatflag = plr.InclVAT;
      if (nonblank(plr.CurncyCode)) then begin
        curncycode = plr.CurncyCode;
      end;
    end;  
  end else begin
    BlockLoad(ARAccRecp);
    vatflag = ARAccRecp.BasePriceInclVAT;
  end;
  StartReportJob(USetStr(2321));
  HTArtSel(RepSpec.f1,RepSpec.f3,tstr);
  Header(rw,tstr,1);
  rw=rw+1;
  HTSort1(RepSpec.flags[2],tstr);
  Header(rw,tstr,1);
  rw=rw+1;    
  if (nonblank(RepSpec.AccStr)) then begin
    tstr=USetStr(1156);
    tstr = tstr & RepSpec.AccStr;
    Header(rw,tstr,1);
    rw=rw+1; 
  end;
  if (nonblank(RepSpec.f2)) then begin
    tstr = USetStr(2321);
    tstr = tstr & ": ";
    tstr = tstr & RepSpec.f2;
    Header(rw,tstr,1);
  end;
  EndHeader;
  SetRepCol(2,90);
  SetRepCol(3,288);
  SetRepCol(4,384);
  StartFormat(15);
  if (RepSpec.flags[3]==0) then begin
    OutString(0,0,USetStr(2325),false);
    OutString(2,0,USetStr(2326),false);
    OutString(3,0,USetStr(2327),false);
    OutString(4,0,USetStr(2328),true);
    OutString(1,0,USetStr(2329),true);
  end;    
  if (RepSpec.flags[3]==1) then begin
    OutString(0,0,USetStr(2325),false);
    OutString(60,0,USetStr(2326),false);
    if (RepSpec.flags[9]==0) then begin
      OutString(270,0,USetStr(2329),true);
    end else begin
      OutString(270,0,USetStr(2328),true);
    end;
    OutString(345,0,USetStr(2331),true);
    OutString(420,0,USetStr(5401),true);
    OutString(480,0,USetStr(5402),true);
  end;
  EndFormat;
  if (RepSpec.flags[2]==0) then begin
    INr.Code = fromart;
    ckey = "Code";
    keys = 1;
  end;
  if (RepSpec.flags[2]==1) then begin
    INr.Group = frcc;
    INr.Code = fromart;
    ckey = "Group";
    keys = 2;
  end;
  if (RepSpec.flags[2]==2) then begin
    INr.Name = "";
    ckey = "Name";
    keys = 1;
  end;
  Gray_Divider(0,1);
  TrHs = true;
  while (LoopKey(ckey,INr,1,TrHs)) begin
      testf = true;
      if (nonblank(RepSpec.AccStr)) then begin /* Not in the Interface */
        if (INr.Department<>RepSpec.AccStr) then begin
          testf = false;
        end;
      end;
      if (INr.NotForSales!=0) then begin
        testf = false;
      end;
      if (RepSpec.flags[2]==0) then begin
        if (TrHs) then begin
          if (nonblank(tocc)) then begin
            if (INr.Group>tocc) then begin
              testf = false;
            end;
          end;  
        end;    
        if (TrHs) then begin
          if (nonblank(frcc)) then begin
            if (INr.Group<frcc) then begin
              testf = false;
            end;
          end;
        end;      
        if (TrHs) then begin
          if (nonblank(toart)) then begin
            if (INr.Code>toart) then begin
              TrHs = false;
            end;
          end;
        end;      
      end;
      if (RepSpec.flags[2]==1) then begin
        if (TrHs) then begin
          if (nonblank(tocc)) then begin
            if (INr.Group>tocc) then begin
              TrHs = false;
            end;
          end;
        end;      
        if (TrHs) then begin
          if (nonblank(toart)==true) then begin
            if (INr.Code>toart) then begin
              testf = false;
            end;
          end;
        end;      
        if (TrHs) then begin
          if (nonblank(fromart)==true) then begin
            if (INr.Code<fromart) then begin
              testf = false;
            end;
          end;
        end;      
      end;
      if (RepSpec.flags[2]==2) then begin
        if (TrHs) then begin
          if (nonblank(tocc)) then begin
            if (INr.Group>tocc) then begin
              testf = false;
            end;
          end;
        end;      
        if (TrHs) then begin
          if (nonblank(frcc)) then begin
            if (INr.Group<frcc) then begin
              testf = false;
            end;
          end;
        end;      
        if (TrHs) then begin
          if (nonblank(toart)) then begin
            if (INr.Code>toart) then begin
              testf = false;
            end;
          end;
        end;      
        if (TrHs) then begin
          if (nonblank(fromart)) then begin
            if (INr.Code<fromart) then begin
              testf = false;
            end;
          end;
        end;      
      end;
      if (nonblank(RepSpec.f4)) then begin
        if (INr.Department <> RepSpec.f4) then begin
          testf = false;
        end;
      end;
      if (nonblank(RepSpec.ObjStr)) then begin
        if (SetInSet(RepSpec.ObjStr,INr.DispGroups)==false) then begin
          testf = false;
        end;
      end;
      if (INr.Terminated<>0) then begin testf = false; end;
      if (TrHs==false) then begin testf = false; end;
      if (testf) then begin
        varf = FindItemVAR(INr.Code,sz,msk,mskrep,varsubset);
        if (varf) then begin
          if (RepSpec.flags[7]!=0) then begin
            PrintItemVarietiesPrice(RepSpec,INr,varf,curncycode,vatflag,sz,msk,mskrep,varsubset,itemout,lastgroup);
          end else begin
            PrintItemPrice(RepSpec,INr.Code,INr,varf,curncycode,vatflag,itemout,lastgroup);        
          end;
        end else begin
          PrintItemPrice(RepSpec,INr.Code,INr,varf,curncycode,vatflag,itemout,lastgroup);        
        end;
      end;
  end;
  EndJob; 
  return;  
end;            
