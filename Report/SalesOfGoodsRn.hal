external function val MulRateToBase1(var string,val,val,val,val,val,val,roundmode);
external procedure GetFullCurncyRate(var string,Date,var val,var val,var val,var val,var val);
external outer procedure FindFIFOOrigValAndCurncyIV(longint, integer, var val, var string,var val,boolean);
external function roundmode SetRoundModeD(Integer);
external function val AbsoluteVal(val);

SetLangMode(LangRussian,"RUS",0);

procedure SalesOfGoodsRn_processIV(record IVVc IVp, string curcode, val recivedmoney, val recivedmoneybase, date transdate, boolean printf, array integer tabs)
begin
  string 5 tstr;
  val aznfr,aznto,fr,to1,to2,br1,br2;
  record INVc INr;
  row IVVc IVrw,nextIVrw;
  integer i,rwcnt;
  boolean updst;
  integer qty;
  val sumbase,sumbrandcur,retailbase,retailbrandcur,fifobase,fifobrandcur,printedrm,printedrmb;
  string 5 brandcur;
  
  tstr = "AZN";
  GetFullCurncyRate(tstr,IVp.TransDate,aznfr,aznto,to2,br1,br2);
  if (aznfr==0 or aznto==0) then begin
    aznfr = 1; aznto = 1;
  end;
  if (blank(curcode)) then begin
    tstr = IVp.CurncyCode;
  end else begin
    tstr = curcode;
  end;
  GetFullCurncyRate(tstr,IVp.TransDate,fr,to1,to2,br1,br2);
  if (fr==0 or to1==0) then begin
    fr = 1; to1 = 1;
  end;
  rwcnt = matrowcnt(IVp);
  for (i=0;i<rwcnt;i=i+1) begin
    matrowget(IVp,i,IVrw);
    if (IVrw.stp==kInvoiceRowTypeNormal) then begin
      qty = IVrw.Quant;
      if (i==rwcnt-1) then begin
        sumbase = recivedmoneybase - printedrmb;
        sumbrandcur = recivedmoney - printedrm;
        messagebox(0,"--------------------");
        messagebox(0,recivedmoneybase);
        messagebox(0,printedrmb);
        messagebox(0,sumbase);
      end else begin
        sumbase = IVrw.Sum/IVp.Sum4*recivedmoneybase;
        sumbrandcur = IVrw.Sum/IVp.Sum4*recivedmoney;
        printedrmb = printedrmb + sumbase;
        printedrm = printedrm + sumbrandcur;
      end;
      if (IVrw.CurncyCode=="AZN") then begin
        retailbrandcur = IVrw.Sum/qty;
      end else begin
        retailbrandcur = IVrw.Sum/qty*aznfr/aznto;
      end;
      retailbase = round(retailbrandcur*to1/fr,SetRoundModeD(1));
      
      if (IVp.UpdStockFlag>0 and IVp.OrderNr<0) then begin
        updst = true;
      end else begin
        updst = false;
      end;
      FindFIFOOrigValAndCurncyIV(IVp.SerNr,i,fifobrandcur,brandcur,fifobase,updst);
      if (fifobase==0) then begin
        INr.Code = IVrw.ArtCode;
        readfirstmain(INr,1,true);
        fifobase = INr.WeighedAvPrice * IVrw.Quant;
      end;
      if (fifobrandcur==0) then begin
        INr.Code = IVrw.ArtCode;
        readfirstmain(INr,1,true);
        fifobrandcur = INr.LastPurchPrice2 * IVrw.Quant;
      end;
      fifobrandcur = AbsoluteVal(fifobrandcur/IVrw.Quant);
      fifobase = AbsoluteVal(fifobase/IVrw.Quant);
      if (IVrw.CurncyCode=="AZN") then begin
        fifobase = fifobase*aznfr/aznto;
      end;
      if (printf) then begin
        startformat(15);
          outstring(tabs[1],0,IVrw.ArtCode,false);                             // Код товара
          OutStringID(tabs[2],"DblIVVc","СЧ/Ф. " & IVp.SerNr,false,IVp.SerNr); // Докум.
          outstring(tabs[3],0,transdate,false);                                // Дата продажи
          outstring(tabs[4],0,qty,false);                                      // Кол.
          outstring(tabs[6],0,retailbase,false);                               // Ритейл за ед. в осн. вал.
          outstring(tabs[7],0,retailbrandcur,false);                           // Ритейл за ед. в вал. бренда
          outstring(tabs[10],0,fifobase,false);                                 // Себест. за ед. в осн. вал.
          outstring(tabs[11],0,fifobrandcur,false);                             // Себест. за ед. в вал. бренда
          outstring(tabs[12],0,sumbase,false);                                  // Сумма прихода в осн. вал.
          outstring(tabs[13],0,sumbrandcur,false);                             // Сумма прихода в вал. бренда
        endformat;
      end;
    end;
    if (IVrw.stp==kInvoiceRowTypeGiftVoucherSold) then begin
      
    end;
  end;
  return;
end;

global 
procedure RunSalesOfGoodsRn(record RcVc RepSpec,boolean printf)
begin
  boolean TrHs,TrHs2,TrHs3,testf,updst,shfound,pofound;
  date startdate,enddate;
  integer i,j,k,rwcnt,rwcnt2,rwcnt3,rw;
  record IVVc IVr;
  record IPVc IPr;
  record ORVc ORr;
  record PDVc PDr;
  record SHVc SHr;
  record ItemHistVc IHr;
  record POVc POr;
  row IVVc IVrw;
  row IPVc IPrw;
  row ORVc ORrw;
  row SHVc SHrw;
  row POVc POrw;
  integer qty,halt;
  val sumbase,sumbrandcur,retailbase,retailbrandcur,fifobase,fifobrandcur;
  val recivedmoney,recivedmoneybase,recivedmoneypart,recivedmoneybasepart;
  val aznfr,aznto,fr,to1,to2,br1,br2;
  string 5 tstr;
  array integer tabs;
  
  if (nonblank(RepSpec.sStartDate)) then begin
    startdate = RepSpec.sStartDate;
    enddate = RepSpec.sEndDate;
  end else begin
    startdate = StringToDate("01/01/" & getyear(CurrentDate));
    enddate = StringToDate("31/12/" & getyear(CurrentDate));
  end;
  if (printf) then begin
    tabs[1] =  0;
    tabs[2] =  tabs[1]  + 40;
    tabs[3] =  tabs[2]  + 35;
    tabs[4] =  tabs[3]  + 40;
    tabs[5] =  tabs[4]  + 15;
    
    tabs[6] =  tabs[5]  + 40;
    tabs[7] =  tabs[6]  + 35;
    
    tabs[8] =  tabs[7]  + 44;
    tabs[9] =  tabs[8]  + 35;
    
    tabs[10] = tabs[9]  + 44;
    tabs[11] = tabs[10] + 35;
    
    tabs[12] = tabs[11] + 44;
    tabs[13] = tabs[12] + 35;
    
    tabs[14] = 480;
    /*
    tabs[14] = tabs[14] + 0;
    tabs[15] = tabs[14] + 0;
    tabs[16] = tabs[15] + 0;
    tabs[17] = tabs[16] + 0;
    tabs[18] = tabs[17] + 0;
    tabs[19] = tabs[18] + 0;
    tabs[20] = tabs[19] + 0;*/
    startreportjob("Отчёт реализации товаров");
    rw = 1;
    Header(rw,"Период отчета - " & startdate & " : " & enddate,1);
    rw = rw + 1;  
    EndHeader;
    startformat(15);
      outstring(tabs[1],0,"",false);
      outstring(tabs[2],0,"",false);
      outstring(tabs[3],0,"",false);
      outstring(tabs[4],0,"",false);
      outstring(tabs[5],0,"",false);
      outstring(tabs[6],0,"",false);
      OutStringCut(tabs[6] + (tabs[8]-tabs[6])/2-20,tabs[6] + (tabs[8]-tabs[6])/2+20,0,"Ритейл за ед.",true,0);
      outstring(tabs[8]-10,0,"",false);
      
      OutStringCut(tabs[8] + (tabs[10]-tabs[8])/2-30,tabs[8] + (tabs[10]-tabs[8])/2+30,0,"План. себест. за ед.",true,0);
      outstring(tabs[10]-10,0,"",false);
      
      OutStringCut(tabs[10] + (tabs[12]-tabs[10])/2-25,tabs[10] + (tabs[12]-tabs[10])/2+25,0,"Факт. себест. за ед.",true,0);
      outstring(tabs[12]-10,0,"",false);
      OutStringCut(tabs[12] + (tabs[14]-tabs[12])/2-20,tabs[12] + (tabs[14]-tabs[12])/2+20,0,"Сумма прихода",true,0);
      outstring(tabs[14]-10,0,"",false);
		endformat;
    Gray_Divider(tabs[6]+2,tabs[8]-2);
    Gray_Divider(tabs[8]+2,tabs[10]-2);
    Gray_Divider(tabs[10]+2,tabs[12]-2);
    Gray_Divider(tabs[12]+2,tabs[14]-2);
    startformat(15);
      outstring(tabs[1],0,"Код товара",false);
      outstring(tabs[2],0,"Докум.",false);
      outstring(tabs[3],0,"Дата оплаты",false);
      outstring(tabs[4],0,"Кол.",false);
      outstring(tabs[5],0,"Вал. бренда",false);
      
      outstring(tabs[6],0,"в осн. вал.",false);
      outstring(tabs[7],0,"в вал. бренда",false);
      
      outstring(tabs[8],0,"в осн. вал.",false);
      outstring(tabs[9],0,"в вал. бренда",false);
      
      outstring(tabs[10],0,"в осн. вал.",false);
      outstring(tabs[11],0,"в вал. бренда",false);
      
      outstring(tabs[12],0,"в осн. вал.",false);
      outstring(tabs[13],0,"в вал. бренда",false);
		endformat;
    Black_Divider(0,1);

  end;
  
  IVr.InvDate = startdate;
  TrHs = true;
  while (loopkey("InvDate",IVr,1,TrHs)) begin
    testf = true;
    if (IVr.InvDate>enddate) then begin TrHs = false; testf = false; end;
    if (IVr.OKFlag==0) then begin testf = false; end;
    if (IVr.Invalid==1) then begin testf = false; end;
    if (IVr.InvType==kInvoiceTypeCredit) then begin testf = false; end;
    if (testf) then begin
      recivedmoneybase = 0;
      recivedmoney = 0;
      rwcnt = matrowcnt(IVr);
      for (i=0;i<rwcnt;i=i+1) begin
        matrowget(IVr,i,IVrw);
        if ((IVrw.stp==kInvoiceRowTypeCashPayment) or (IVrw.stp==kInvoiceRowTypeCreditCardPayment) or (IVrw.stp==kInvoiceRowTypeGiftVoucherPayment)) then begin
          recivedmoneybase = recivedmoneybase + MulRateToBase1(IVrw.CurncyCode,IVrw.Sum,IVrw.FrRate,IVrw.ToRateB1,IVrw.ToRateB2,IVrw.BaseRate1,IVrw.BaseRate2,DefaultCurRoundOff);
          recivedmoney = recivedmoney + IVrw.Sum;
        end;
      end;
      if (recivedmoneybase==0) then begin
        PDr.Code = IVr.PayDeal;
        if (readfirstmain(PDr,1,true)) then begin
          if (PDr.PDType==kInvoiceTypeCash) then begin
            recivedmoneybase = IVr.BaseSum4;
            recivedmoney = IVr.Sum4;
          end;
        end;
      end;
      if (recivedmoneybase!=0) then begin
        SalesOfGoodsRn_processIV(IVr,"",recivedmoney,recivedmoneybase,IVr.TransDate,printf,tabs);
      end;
      
      
      
    end;
  end;
  IPr.TransDate = startdate;
  TrHs = true;
  while (loopkey("TransDate",IPr,1,TrHs)) begin
    testf = true;
    if (IPr.TransDate>enddate) then begin  TrHs = false; testf = false; end;
    if (IPr.OKFlag==0) then begin testf = false; end;
    if (testf) then begin
      tstr = "AZN";
      GetFullCurncyRate(tstr,IPr.TransDate,aznfr,aznto,to2,br1,br2);
      if (aznfr==0 or aznto==0) then begin
        aznfr = 1; aznto = 1;
      end;
      rwcnt = matrowcnt(IPr);
      for (i=0;i<rwcnt;i=i+1) begin
        matrowget(IPr,i,IPrw);
        GetFullCurncyRate(IPrw.RecCurncy,IPr.TransDate,fr,to1,to2,br1,br2);
        recivedmoneybase = MulRateToBase1(IPrw.RecCurncy,IPrw.RecVal,fr,to1,to2,br1,br2,DefaultCurRoundOff);
        recivedmoney = IPrw.RecVal;
        if (IPrw.InvoiceNr!=-1) then begin
          IVr.SerNr = IPrw.InvoiceNr;
          ReadFirstMain(IVr,1,true);
          SalesOfGoodsRn_processIV(IVr,IPrw.RecCurncy,recivedmoney,recivedmoneybase,IPr.TransDate,printf,tabs);
        end else begin
        
        end;
      end;
    end;
  end;
  
  
  /*IPr.TransDate = startdate;
  TrHs = true;
  while (loopkey("TransDate",IPr,1,TrHs)) begin
    if (IPr.TransDate>enddate) then begin TrHs = false; end;
    if (TrHs) then begin
      tstr = "AZN";
      GetFullCurncyRate(tstr,IPr.TransDate,aznfr,aznto,to2,br1,br2);
      if (aznfr==0 or aznto==0) then begin
        aznfr = 1; aznto = 1;
      end;
      rwcnt = matrowcnt(IPr);
      for (i=0;i<rwcnt;i=i+1) begin
        matrowget(IPr,i,IPrw);
        GetFullCurncyRate(IPrw.RecCurncy,IPr.TransDate,fr,to1,to2,br1,br2);
        recivedmoneybase = MulRateToBase1(IPrw.RecCurncy,IPrw.RecVal,fr,to1,to2,br1,br2,DefaultCurRoundOff);
        recivedmoney = IPrw.RecVal;
        if (IPrw.InvoiceNr!=-1) then begin
          IVr.SerNr = IPrw.InvoiceNr;
          ReadFirstMain(IVr,1,true);
          SalesOfGoodsRn_processIV(IVr,IPrw.RecCurncy,recivedmoney,recivedmoneybase,IPr.TransDate,printf,tabs);
        end else begin
          if (IPrw.OrderNr!=-1) then begin
            ORr.SerNr = IPrw.OrderNr;
            ReadFirstMain(ORr,1,true);
            rwcnt2 = matrowcnt(ORr);
            for (j=0;j<rwcnt2;j=j+1) begin
              matrowget(ORr,j,ORrw);
              qty = ORrw.Quant;
              sumbase = ORrw.Sum/ORr.Sum4*recivedmoneybase;
              sumbrandcur = ORrw.Sum/ORr.Sum4*recivedmoney;
              if (ORr.CurncyCode=="AZN") then begin
                retailbase = ORrw.Sum/qty;
              end else begin
                retailbase = ORrw.Sum/qty*aznfr/aznto;
              end;
              retailbrandcur = round(retailbase*fr/to1,SetRoundModeD(1));
              fifobase = 0;
              fifobrandcur = 0;

              // смотреть себест в SHVc по товарам из ORrw
              halt = 0;
              shfound = false;
              resetloop(SHr);
              SHr.OrderNr = ORr.SerNr;
              TrHs2 = true;
              while (loopkey("OrderKey",SHr,1,TrHs2)) begin
                if (SHr.OrderNr!=ORr.SerNr) then begin TrHs2 = false; end;
                if (TrHs2) then begin
                  shfound = true;
                  rwcnt3 = matrowcnt(SHr);
                  for (k=0;k<rwcnt3;k=k+1) begin
                    matrowget(SHr,k,SHrw);
                    if (SHrw.ArtCode==ORrw.ArtCode) then begin
                      IHr.FileName = "SHVc";
                      IHr.TransNr = SHr.SerNr;
                      IHr.Row = k;
                      TrHs3 = true;
                      resetloop(IHr);
                      while (loopkey("FNTransNr",IHr,3,TrHs3)) begin
                        if (IHr.FileName!="SHVc")then begin TrHs3 = false; end;
                        if (IHr.TransNr!=SHr.SerNr) then begin TrHs3 = false; end;
                        if (IHr.Row!=k) then begin TrHs3 = false; end;
                        if (TrHs3) then begin
                          if (halt<ORrw.Quant) then begin
                            fifobase = fifobase + IHr.TotCostPrice;
                            fifobrandcur = fifobrandcur + IHr.TotCostPriceCurncy;
                            halt = halt - IHr.Qty;
                          end else begin
                            TrHs2 = false;
                            TrHs3 = false;
                          end;
                        end;
                      end;
                    end;
                  end;
                end;
              end;
              // если нет в SHVc смотреть POVc заказ пост
              if ((!shfound) or (halt<ORrw.Quant)) then begin
                if (!shfound) then begin
                  halt = 0;
                end;
                pofound = false;
                resetloop(POr);
                POr.OrdNr = ORr.SerNr;
                TrHs2 = true;
                while (loopkey("OrdNr",POr,1,TrHs2)) begin
                  if (POr.OrdNr!=ORr.SerNr) then begin TrHs2 = false; end;
                  if (TrHs2) then begin
                    rwcnt3 = matrowcnt(POr);
                    for (k=0;k<rwcnt3;k=k+1) begin
                      matrowget(POr,k,POrw);
                      if (POrw.ArtCode==ORrw.ArtCode) then begin
                        pofound = true;
                        fifobrandcur = fifobrandcur + POrw.Sum/POrw.Quant*(ORrw.Quant - halt);
                        fifobase = fifobase + MulRateToBase1(POr.CurncyCode,POrw.Sum,POr.FrRate,POr.ToRateB1,POr.ToRateB2,POr.BaseRate1,POr.BaseRate2,DefaultCurRoundOff)/POrw.Quant*(ORrw.Quant - halt);
                        k = rwcnt3;
                        TrHs2 = false;
                      end;
                    end;
                  end;
                end;
              end;
              // если нет то в прейск план себест
              if ((!pofound) or (halt<ORrw.Quant)) then begin
                if (!pofound) then begin
                  halt = 0;
                end;
                
              end;
              fifobrandcur = AbsoluteVal(fifobrandcur/qty);
              fifobase = AbsoluteVal(fifobase/qty);
              if (printf) then begin
                startformat(15);
                  outstring(tabs[1],0,ORrw.ArtCode,false);                                // Код товара
                  OutStringID(tabs[2],"DblIPVcID","ПЛ/КЛ. " & IPr.SerNr,false,ORr.SerNr); // Докум.
                  outstring(tabs[3],0,IPr.TransDate,false);                               // Дата продажи
                  outstring(tabs[4],0,qty,false);                                         // Кол.
                  outstring(tabs[6],0,retailbase,false);                                  // Ритейл за ед. в осн. вал.
                  outstring(tabs[7],0,retailbrandcur,false);                              // Ритейл за ед. в вал. бренда
                  outstring(tabs[10],0,fifobase,false);                                    // Себест. за ед. в осн. вал.
                  outstring(tabs[11],0,fifobrandcur,false);                                // Себест. за ед. в вал. бренда
                  outstring(tabs[12],0,sumbase,false);                                     // Сумма прихода в осн. вал.
                  outstring(tabs[13],0,sumbrandcur,false);                                // Сумма прихода в вал. бренда
                endformat;
              end;
              
            end;
          end;
        end;
      end;
    end;
  end;*/
  if (printf) then begin
    endjob;
  end;
  return;
end;
  
global 
procedure SalesOfGoodsRn(record RcVc RepSpec)
begin
  RunSalesOfGoodsRn(RepSpec,true);
  return;
end;